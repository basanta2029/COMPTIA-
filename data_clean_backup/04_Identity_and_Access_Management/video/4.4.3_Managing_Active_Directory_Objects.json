{
  "metadata": {
    "chapter_num": "4",
    "section_num": "4.4.3",
    "title": "Managing Active Directory Objects",
    "content_type": "video",
    "filename": "4.4.3_Managing_Active_Directory_Objects_[video].txt",
    "file_path": "/Users/basantabaral/CompTia/data_raw/04_Identity_and_Access_Management/4.4.3_Managing_Active_Directory_Objects_[video].txt",
    "word_count": 1708,
    "has_content": true
  },
  "full_content": "In this demonstration, we're going to spend some time managing Active Directory objects. Notice that we're going to perform these tasks from a Windows server system. I'm using the Server Manager utility on the desktop of a Windows server system. It's named DC1. This particular server system has the Active Directory Domain Services role installed, making it a domain controller. It's hosting the CorpNet.xyz domain. To manage the objects within this domain, within Server Manager, I click Tools and then click Active Directory Users and Computers. When I do, the Active Directory Users and Computers utility is displayed. Before we go any further, be aware that you don't have to run this utility right off of the server desktop. If you want to, you can install the necessary software, such as Windows Admin Center, on a workstation. That's beyond the scope of this demo, so we're just going to perform these tasks from the server, which is totally fine for what we're doing today. Notice that when I initially load Active Directory Users and Computers, over here on the left, we see the name of my domain, CorpNet.xyz. As we pointed out just a second ago, that's the name of the domain that's being hosted on this domain controller. If I expand my domain, I see a list of container objects. Container objects do just what their name implies: they contain other Active Directory objects. Their purpose is to keep things organized. Instead of putting all of our Active Directory objects within the domain, which would be really, really messy and confusing, we can sort the various objects into different containers to keep things nice, tidy, and well organized. Notice when the name of a domain is selected over here, on the left, a list of all my container objects within the domain is displayed over here, on the right. Notice that there are several different types of container objects. These first five container objects—Built-in, Computers, ForeignSecurityPrinciples, Manage Service Accounts, and Users—were all created by default when Active Directory was initially installed on this system. They were automatically populated with the various types of objects that they were designed to contain. However, notice that there's another type of container object within the domain called an organizational unit. Within this domain, I have five different organizational units defined: Domain Controllers, MarketingUsers, ResearchUsers, SalesUsers, and TestUsers. With the exception of this container, Domain Controllers, these other organizational units were created by the system administrator. The Domain Controller's organizational unit is a default container. It was created when Active Directory was initially deployed. It contains a computer account for this domain controller itself. You might be asking, \"What's the difference between an organizational unit and a container object?\" Organizational units have a lot more flexibility; they can perform more functions. Container objects are very basic in nature. They're designed to hold the default objects that are created and used by Active Directory. The nice thing about these organizational units, as I've said before, is that they allow you to organize the various objects within your Active Directory domain. There are many different approaches that you could take. One common approach is the one that I've used here, where I've defined an organizational unit for each of the divisions within my organization. For example, I have an organizational unit for MarketingUsers. I have an organizational unit for ResearchUsers. I have an organizational unit for SalesUsers. I can put all the associated objects within Active Directory inside the appropriate container. For example, if I double-click ResearchUsers, it contains user accounts for all of the users in my company's research department. This is one approach for creating Active Directory organizational units. But it's not the only one. Active Directory is very, very flexible. You could create different types of organizational units if you wanted. For example, I've seen some organizations create organizational units based on geography. They might have one for North America, one unit for South America, and units for Europe, Africa, Australia, and Asia. You can configure the organizational units in whatever way works best for your organization. For our purposes today, we're going to go with the approach that you see here, where we create a different organizational unit for each of the functional divisions within the organization. The users in Marketing, Research, and Sales are all set. Bust most organizations have more than three divisions. If I need to create additional organizational units to support those divisions, I can click my domain, over here. Then I come over here, to this button, which allows us to create a new organizational unit. Click it, and let's create a new Organizational Unit for my Technical Support division within my company. Note that there's an option to protect the container from accidental deletion. It's a really good idea to leave it on. It prevents the administrator from accidentally deleting the organizational unit. If you think about it, that would be really bad because the organizational unit typically contains a lot of user accounts. If you delete the organizational unit, you also automatically delete all of the user accounts within the organizational unit. If that's not what you were intending to do, that makes for a very bad day. I like to leave this option turned on. It keeps you from doing that. Now my Technical Support organizational unit is defined. Within this organizational unit, I can create other Active Directory objects. I can create additional organizational units, meaning that I can create a hierarchical tree to reflect the structure of my organization. For example, I can create a new organizational unit for the Help Desk group within my organization. I can also come back up here and create another organizational unit for my Backline Support group within the Technical Support division. Do you see how you can use these organizational units to mirror the structure of your company? Within these organizational units, I can create additional Active Directory objects. The most common type of Active Directory object in an organizational unit are user accounts. These user accounts allow a given user to authenticate to the domain. They can be used to, say, log on to a workstation that's been joined to the domain. You can also use these user accounts to control what the user is allowed to access. Basically, that user object is used to authenticate and to control access to domain resources. In other words, if a user does successfully log on to the domain, what level of access are they allowed to domain resources? Let's suppose we need to create some user accounts for our Help Desk group. With Help Desk selected, I'll come over and click Create a New User in the current container. The first thing I need to do is provide a name. Roger is the first name, and Meinert is the last name. Then I need to provide a user logon name. Usually, the user logon name you provide is dictated by your organization's security policy. For example, it may be something to the effect of first initial and last name. Click Next. Then we enter a password for that user. It's a bad security practice for the system administrator to know the user's password. For security purposes, only the user should know his or her password. Therefore, it's a good idea to turn this option on, User must change password at next logon. The first time the user logs on, they'll be prompted to change their password. Then you won't know what their password is. Notice that you also have options to prevent a user from being able to change a password. You can also specify that the password never expires or that the account is disabled. These options can come in handy on occasion. Click Next. Click Finish. Now we have a user object created in Active Directory. Let's go ahead and create a couple more. This first one will be Tom Czachor. Create the username. Click Next. Give Tom a password. Click Next and Finish. And just for practice, let's create one more: Dustin Johnson, username djohnson. Enter the password. Click Next and Finish one more time. Now we have three user accounts for our Help Desk employees. We've talked about how to create organizational units. We've talked about how to create user accounts. You can also create group accounts using Active Directory Users and Computers. For example, we can create a group within the Help Desk organizational unit. To do this, I'll click Create a New Group in the current container icon. Let's give it the name of Midnight Shift. This group will contain all the employees within the Help Desk that works on the midnight shift. Now we have a Midnight Shift group. To add these users to that group, we have a couple of different options. One of the easiest ways is to double-click the group, click Members, and click Add. Then enter in the users that we want to add. First, we'll add Roger. Click OK. Click Add again. This time we'll add Tom. Type in his name and click OK. And we don't want to forget about Dustin. Let's make sure we add him. Click OK, and our three lucky midnight help desk employees are added. Click OK. Now Roger, Tom, and Dustin are all members of the Midnight Shift group. Group accounts are really useful because, more than likely, all of the users within this group that work in the Help Desk group are going to need very similar levels of access to domain resources. Instead of going to each and every user account and making the same assignments over and over again on every user account, we can just make the assignments once, to the group, and then make all the users who need that level of access members of that group. This makes things really easy. All right, that's all for our demo on managing Active Directory objects, specifically user objects.",
  "chunks": [
    {
      "chunk_id": "4.4.3_chunk_1",
      "content": "In this demonstration, we're going to spend some time managing Active Directory objects. Notice that we're going to perform these tasks from a Windows server system. I'm using the Server Manager utility on the desktop of a Windows server system. It's named DC1. This particular server system has the Active Directory Domain Services role installed, making it a domain controller. It's hosting the CorpNet.xyz domain.",
      "summary": "Manage Active Directory Objects: In this demonstration, we're going to spend some time managing Active Directory objects. This particular server system has the Active Directory Domain Services role installed, making it a domain controller.",
      "metadata": {
        "chapter_num": "4",
        "section_num": "4.4.3",
        "title": "Managing Active Directory Objects",
        "content_type": "video",
        "filename": "4.4.3_Managing_Active_Directory_Objects_[video].txt",
        "file_path": "/Users/basantabaral/CompTia/data_raw/04_Identity_and_Access_Management/4.4.3_Managing_Active_Directory_Objects_[video].txt",
        "word_count": 1708,
        "has_content": true
      },
      "section_header": "Manage Active Directory Objects",
      "timestamp_range": "00:00-00:27"
    },
    {
      "chunk_id": "4.4.3_chunk_2",
      "content": "To manage the objects within this domain, within Server Manager, I click Tools and then click Active Directory Users and Computers. When I do, the Active Directory Users and Computers utility is displayed. Before we go any further, be aware that you don't have to run this utility right off of the server desktop. If you want to, you can install the necessary software, such as Windows Admin Center, on a workstation. That's beyond the scope of this demo, so we're just going to perform these tasks from the server, which is totally fine for what we're doing today.",
      "summary": "Active Directory Users and Computers: To manage the objects within this domain, within Server Manager, I click Tools and then click Active Directory Users and Computers. When I do, the Active Directory Users and Computers utility is displayed.",
      "metadata": {
        "chapter_num": "4",
        "section_num": "4.4.3",
        "title": "Managing Active Directory Objects",
        "content_type": "video",
        "filename": "4.4.3_Managing_Active_Directory_Objects_[video].txt",
        "file_path": "/Users/basantabaral/CompTia/data_raw/04_Identity_and_Access_Management/4.4.3_Managing_Active_Directory_Objects_[video].txt",
        "word_count": 1708,
        "has_content": true
      },
      "section_header": "Active Directory Users and Computers",
      "timestamp_range": "00:27-00:56"
    },
    {
      "chunk_id": "4.4.3_chunk_3",
      "content": "Notice that when I initially load Active Directory Users and Computers, over here on the left, we see the name of my domain, CorpNet.xyz. As we pointed out just a second ago, that's the name of the domain that's being hosted on this domain controller. If I expand my domain, I see a list of container objects. Container objects do just what their name implies: they contain other Active Directory objects. Their purpose is to keep things organized. Instead of putting all of our Active Directory objects within the domain, which would be really, really messy and confusing, we can sort the various objects into different containers to keep things nice, tidy, and well organized. Notice when the name of a domain is selected over here, on the left, a list of all my container objects within the domain is displayed over here, on the right. Notice that there are several different types of container objects. These first five container objects—Built-in, Computers, ForeignSecurityPrinciples, Manage Service Accounts, and Users—were all created by default when Active Directory was initially installed on this system. They were automatically populated with the various types of objects that they were designed to contain.",
      "summary": "Container Objects: As we pointed out just a second ago, that's the name of the domain that's being hosted on this domain controller. These first five container objects—Built-in, Computers, ForeignSecurityPrinciples, Manage Service Accounts, and Users—were all created by default when Active Directory was initially installed on this system.",
      "metadata": {
        "chapter_num": "4",
        "section_num": "4.4.3",
        "title": "Managing Active Directory Objects",
        "content_type": "video",
        "filename": "4.4.3_Managing_Active_Directory_Objects_[video].txt",
        "file_path": "/Users/basantabaral/CompTia/data_raw/04_Identity_and_Access_Management/4.4.3_Managing_Active_Directory_Objects_[video].txt",
        "word_count": 1708,
        "has_content": true
      },
      "section_header": "Container Objects",
      "timestamp_range": "00:56-02:02"
    },
    {
      "chunk_id": "4.4.3_chunk_4",
      "content": "However, notice that there's another type of container object within the domain called an organizational unit. Within this domain, I have five different organizational units defined: Domain Controllers, MarketingUsers, ResearchUsers, SalesUsers, and TestUsers. With the exception of this container, Domain Controllers, these other organizational units were created by the system administrator. The Domain Controller's organizational unit is a default container. It was created when Active Directory was initially deployed. It contains a computer account for this domain controller itself. You might be asking, \"What's the difference between an organizational unit and a container object?\" Organizational units have a lot more flexibility; they can perform more functions. Container objects are very basic in nature. They're designed to hold the default objects that are created and used by Active Directory. The nice thing about these organizational units, as I've said before, is that they allow you to organize the various objects within your Active Directory domain. There are many different approaches that you could take. One common approach is the one that I've used here, where I've defined an organizational unit for each of the divisions within my organization. For example, I have an organizational unit for MarketingUsers. I have an organizational unit for ResearchUsers. I have an organizational unit for SalesUsers. I can put all the associated objects within Active Directory inside the appropriate container. For example, if I double-click ResearchUsers, it contains user accounts for all of the users in my company's research department. This is one approach for creating Active Directory organizational units. But it's not the only one. Active Directory is very, very flexible. You could create different types of organizational units if you wanted. For example, I've seen some organizations create organizational units based on geography. They might have one for North America, one unit for South America, and units for Europe, Africa, Australia, and Asia. You can configure the organizational units in whatever way works best for your organization. For our purposes today, we're going to go with the approach that you see here, where we create a different organizational unit for each of the functional divisions within the organization. The users in Marketing, Research, and Sales are all set. Bust most organizations have more than three divisions.",
      "summary": "Organizational Units: Within this domain, I have five different organizational units defined: Domain Controllers, MarketingUsers, ResearchUsers, SalesUsers, and TestUsers. With the exception of this container, Domain Controllers, these other organizational units were created by the system administrator.",
      "metadata": {
        "chapter_num": "4",
        "section_num": "4.4.3",
        "title": "Managing Active Directory Objects",
        "content_type": "video",
        "filename": "4.4.3_Managing_Active_Directory_Objects_[video].txt",
        "file_path": "/Users/basantabaral/CompTia/data_raw/04_Identity_and_Access_Management/4.4.3_Managing_Active_Directory_Objects_[video].txt",
        "word_count": 1708,
        "has_content": true
      },
      "section_header": "Organizational Units",
      "timestamp_range": "02:02-04:19"
    },
    {
      "chunk_id": "4.4.3_chunk_5",
      "content": "If I need to create additional organizational units to support those divisions, I can click my domain, over here. Then I come over here, to this button, which allows us to create a new organizational unit. Click it, and let's create a new Organizational Unit for my Technical Support division within my company. Note that there's an option to protect the container from accidental deletion. It's a really good idea to leave it on. It prevents the administrator from accidentally deleting the organizational unit. If you think about it, that would be really bad because the organizational unit typically contains a lot of user accounts. If you delete the organizational unit, you also automatically delete all of the user accounts within the organizational unit. If that's not what you were intending to do, that makes for a very bad day. I like to leave this option turned on. It keeps you from doing that. Now my Technical Support organizational unit is defined. Within this organizational unit, I can create other Active Directory objects. I can create additional organizational units, meaning that I can create a hierarchical tree to reflect the structure of my organization. For example, I can create a new organizational unit for the Help Desk group within my organization. I can also come back up here and create another organizational unit for my Backline Support group within the Technical Support division. Do you see how you can use these organizational units to mirror the structure of your company?",
      "summary": "Organizational Units Creation: If I need to create additional organizational units to support those divisions, I can click my domain, over here. Then I come over here, to this button, which allows us to create a new organizational unit.",
      "metadata": {
        "chapter_num": "4",
        "section_num": "4.4.3",
        "title": "Managing Active Directory Objects",
        "content_type": "video",
        "filename": "4.4.3_Managing_Active_Directory_Objects_[video].txt",
        "file_path": "/Users/basantabaral/CompTia/data_raw/04_Identity_and_Access_Management/4.4.3_Managing_Active_Directory_Objects_[video].txt",
        "word_count": 1708,
        "has_content": true
      },
      "section_header": "Organizational Units Creation",
      "timestamp_range": "04:19-05:35"
    },
    {
      "chunk_id": "4.4.3_chunk_6",
      "content": "Within these organizational units, I can create additional Active Directory objects. The most common type of Active Directory object in an organizational unit are user accounts. These user accounts allow a given user to authenticate to the domain. They can be used to, say, log on to a workstation that's been joined to the domain. You can also use these user accounts to control what the user is allowed to access. Basically, that user object is used to authenticate and to control access to domain resources. In other words, if a user does successfully log on to the domain, what level of access are they allowed to domain resources? Let's suppose we need to create some user accounts for our Help Desk group. With Help Desk selected, I'll come over and click Create a New User in the current container. The first thing I need to do is provide a name. Roger is the first name, and Meinert is the last name. Then I need to provide a user logon name. Usually, the user logon name you provide is dictated by your organization's security policy. For example, it may be something to the effect of first initial and last name. Click Next. Then we enter a password for that user. It's a bad security practice for the system administrator to know the user's password. For security purposes, only the user should know his or her password. Therefore, it's a good idea to turn this option on, User must change password at next logon. The first time the user logs on, they'll be prompted to change their password. Then you won't know what their password is. Notice that you also have options to prevent a user from being able to change a password. You can also specify that the password never expires or that the account is disabled. These options can come in handy on occasion. Click Next. Click Finish. Now we have a user object created in Active Directory. Let's go ahead and create a couple more. This first one will be Tom Czachor. Create the username. Click Next. Give Tom a password. Click Next and Finish. And just for practice, let's create one more: Dustin Johnson, username djohnson. Enter the password. Click Next and Finish one more time.",
      "summary": "User Accounts Creation: You can also use these user accounts to control what the user is allowed to access. Basically, that user object is used to authenticate and to control access to domain resources.",
      "metadata": {
        "chapter_num": "4",
        "section_num": "4.4.3",
        "title": "Managing Active Directory Objects",
        "content_type": "video",
        "filename": "4.4.3_Managing_Active_Directory_Objects_[video].txt",
        "file_path": "/Users/basantabaral/CompTia/data_raw/04_Identity_and_Access_Management/4.4.3_Managing_Active_Directory_Objects_[video].txt",
        "word_count": 1708,
        "has_content": true
      },
      "section_header": "User Accounts Creation",
      "timestamp_range": "05:35-07:42"
    },
    {
      "chunk_id": "4.4.3_chunk_7",
      "content": "Now we have three user accounts for our Help Desk employees. We've talked about how to create organizational units. We've talked about how to create user accounts. You can also create group accounts using Active Directory Users and Computers. For example, we can create a group within the Help Desk organizational unit. To do this, I'll click Create a New Group in the current container icon. Let's give it the name of Midnight Shift. This group will contain all the employees within the Help Desk that works on the midnight shift. Now we have a Midnight Shift group. To add these users to that group, we have a couple of different options. One of the easiest ways is to double-click the group, click Members, and click Add. Then enter in the users that we want to add. First, we'll add Roger. Click OK. Click Add again. This time we'll add Tom. Type in his name and click OK. And we don't want to forget about Dustin. Let's make sure we add him. Click OK, and our three lucky midnight help desk employees are added. Click OK. Now Roger, Tom, and Dustin are all members of the Midnight Shift group. Group accounts are really useful because, more than likely, all of the users within this group that work in the Help Desk group are going to need very similar levels of access to domain resources. Instead of going to each and every user account and making the same assignments over and over again on every user account, we can just make the assignments once, to the group, and then make all the users who need that level of access members of that group. This makes things really easy.",
      "summary": "Group Creation: Now we have three user accounts for our Help Desk employees. You can also create group accounts using Active Directory Users and Computers.",
      "metadata": {
        "chapter_num": "4",
        "section_num": "4.4.3",
        "title": "Managing Active Directory Objects",
        "content_type": "video",
        "filename": "4.4.3_Managing_Active_Directory_Objects_[video].txt",
        "file_path": "/Users/basantabaral/CompTia/data_raw/04_Identity_and_Access_Management/4.4.3_Managing_Active_Directory_Objects_[video].txt",
        "word_count": 1708,
        "has_content": true
      },
      "section_header": "Group Creation",
      "timestamp_range": "07:42-09:11"
    },
    {
      "chunk_id": "4.4.3_chunk_8",
      "content": "All right, that's all for our demo on managing Active Directory objects, specifically user objects.",
      "summary": "All right, that's all for our demo on managing Active Directory objects, specifically user objects.",
      "metadata": {
        "chapter_num": "4",
        "section_num": "4.4.3",
        "title": "Managing Active Directory Objects",
        "content_type": "video",
        "filename": "4.4.3_Managing_Active_Directory_Objects_[video].txt",
        "file_path": "/Users/basantabaral/CompTia/data_raw/04_Identity_and_Access_Management/4.4.3_Managing_Active_Directory_Objects_[video].txt",
        "word_count": 1708,
        "has_content": true
      },
      "section_header": "Summary",
      "timestamp_range": "09:11-09:18"
    }
  ],
  "num_chunks": 8,
  "document_summary": "Managing Active Directory Objects (video): You can also use these user accounts to control what the user is allowed to access. Basically, that user object is used to authenticate and to control access to domain resources. Usually, the user logon name you provide is dictated by your organization's security policy."
}