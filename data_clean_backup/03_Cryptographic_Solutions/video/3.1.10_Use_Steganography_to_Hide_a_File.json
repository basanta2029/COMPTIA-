{
  "metadata": {
    "chapter_num": "3",
    "section_num": "3.1.10",
    "title": "Use Steganography to Hide a File",
    "content_type": "video",
    "filename": "3.1.10_Use_Steganography_to_Hide_a_File_[video].txt",
    "file_path": "/Users/basantabaral/CompTia/data_raw/03_Cryptographic_Solutions/3.1.10_Use_Steganography_to_Hide_a_File_[video].txt",
    "word_count": 684,
    "has_content": true
  },
  "full_content": "Sometimes, in order to maintain access to a network or system, malicious users try to transfer files. In this demo, we'll discuss how to hide the contents of a file inside another file using a technique called steganography. People have used steganography to send secret messages for hundreds of years. Typically, this method is used when the sender is concerned that their traffic is being inspected by a third party. We're going to use a free tool called OpenStego that's able to hide a file inside of an image. This tool is very easy to use and has a graphical user interface. We're going to run the tool on Linux, but it's also available on Windows. When we open up the tool, the first thing we see is the Hide Data screen; since this is the screen we want, let's move on to the fields that need to be filled out. Message File is the name of the file we want to hide in the Cover File, and it will be saved to the Output Stego File. I already have a file I want to hide, so I'll select that now. I'll come over here and navigate down until I find my file, secret-information.txt. Let's click OK. Now that we've selected the message file, we need to select the file we want to save the message into. I've already downloaded a picture, so we'll select it and then continue. Once again, I'll navigate to my Pictures folder, where I've stored the PNG we're going to use. Lastly, we need to select where we would like to save the file that we've encoded information into. Let's just call it secret-forest.png and save it in the same folder. I'll click over here and enter in 'secret-forest.png'. We could enter a password here, but we'll just leave it for now. Since that's all the information we need, let's click Hide Data. That's it! To see that it worked, let's check to see that the Secret Forest file has been created. I'll browse through my folders to get to the Pictures folder. This is the file we created that contains the hidden data. Let's take a look at the original file to see whether there are any major visual differences. This side-by-side comparison shows that, visually, the images appear to be identical. If we look at the file sizes, though, we can see a bit of a difference between the two. In the lower right-hand corner, you can see that the original image is 10 megabytes, and the file that we encoded data into is almost 12 megabytes. This kind of difference would be difficult to detect if you didn't know the size of the original file. Now that we see that the new file has been created, we should make sure that the data was stored properly. Let's try to extract the data. Let's go back to OpenStego and click on the Extract Data button. This page is a bit simpler, since the program only needs the new file and a folder to save the extracted file. I'll provide that data now and attempt to extract the data. I'll come over here and select my file. Click OK. Next, we'll just save it in the Pictures folder and select the Extract Data button. We'll wait for a second while it processes. You can see that a text file was created in the folder. The file has the same name as the file we originally stored in the image, since the steganography tool saves that information in the image as well. We should make sure that the data inside the file is actually correct by opening it. I'll come up here and open the text file. And here's all our secret passwords. In this demo, we discussed steganography and methods for saving data to an image and extracting data from an image.",
  "chunks": [
    {
      "chunk_id": "3.1.10_chunk_1",
      "content": "Sometimes, in order to maintain access to a network or system, malicious users try to transfer files. In this demo, we'll discuss how to hide the contents of a file inside another file using a technique called steganography. People have used steganography to send secret messages for hundreds of years. Typically, this method is used when the sender is concerned that their traffic is being inspected by a third party.",
      "summary": "Use Steganography to Hide a File: Sometimes, in order to maintain access to a network or system, malicious users try to transfer files. In this demo, we'll discuss how to hide the contents of a file inside another file using a technique called steganography.",
      "metadata": {
        "chapter_num": "3",
        "section_num": "3.1.10",
        "title": "Use Steganography to Hide a File",
        "content_type": "video",
        "filename": "3.1.10_Use_Steganography_to_Hide_a_File_[video].txt",
        "file_path": "/Users/basantabaral/CompTia/data_raw/03_Cryptographic_Solutions/3.1.10_Use_Steganography_to_Hide_a_File_[video].txt",
        "word_count": 684,
        "has_content": true
      },
      "section_header": "Use Steganography to Hide a File",
      "timestamp_range": "00:00-00:26"
    },
    {
      "chunk_id": "3.1.10_chunk_2",
      "content": "We're going to use a free tool called OpenStego that's able to hide a file inside of an image. This tool is very easy to use and has a graphical user interface. We're going to run the tool on Linux, but it's also available on Windows.",
      "summary": "Use OpenStego: We're going to use a free tool called OpenStego that's able to hide a file inside of an image. This tool is very easy to use and has a graphical user interface.",
      "metadata": {
        "chapter_num": "3",
        "section_num": "3.1.10",
        "title": "Use Steganography to Hide a File",
        "content_type": "video",
        "filename": "3.1.10_Use_Steganography_to_Hide_a_File_[video].txt",
        "file_path": "/Users/basantabaral/CompTia/data_raw/03_Cryptographic_Solutions/3.1.10_Use_Steganography_to_Hide_a_File_[video].txt",
        "word_count": 684,
        "has_content": true
      },
      "section_header": "Use OpenStego",
      "timestamp_range": "00:26-00:39"
    },
    {
      "chunk_id": "3.1.10_chunk_3",
      "content": "When we open up the tool, the first thing we see is the Hide Data screen; since this is the screen we want, let's move on to the fields that need to be filled out. Message File is the name of the file we want to hide in the Cover File, and it will be saved to the Output Stego File. I already have a file I want to hide, so I'll select that now. I'll come over here and navigate down until I find my file, secret-information.txt. Let's click OK. Now that we've selected the message file, we need to select the file we want to save the message into. I've already downloaded a picture, so we'll select it and then continue. Once again, I'll navigate to my Pictures folder, where I've stored the PNG we're going to use. Lastly, we need to select where we would like to save the file that we've encoded information into. Let's just call it secret-forest.png and save it in the same folder. I'll click over here and enter in 'secret-forest.png'. We could enter a password here, but we'll just leave it for now. Since that's all the information we need, let's click Hide Data.",
      "summary": "Hide Data: When we open up the tool, the first thing we see is the Hide Data screen; since this is the screen we want, let's move on to the fields that need to be filled out. Since that's all the information we need, let's click Hide Data.",
      "metadata": {
        "chapter_num": "3",
        "section_num": "3.1.10",
        "title": "Use Steganography to Hide a File",
        "content_type": "video",
        "filename": "3.1.10_Use_Steganography_to_Hide_a_File_[video].txt",
        "file_path": "/Users/basantabaral/CompTia/data_raw/03_Cryptographic_Solutions/3.1.10_Use_Steganography_to_Hide_a_File_[video].txt",
        "word_count": 684,
        "has_content": true
      },
      "section_header": "Hide Data",
      "timestamp_range": "00:39-01:39"
    },
    {
      "chunk_id": "3.1.10_chunk_4",
      "content": "That's it! To see that it worked, let's check to see that the Secret Forest file has been created. I'll browse through my folders to get to the Pictures folder. This is the file we created that contains the hidden data. Let's take a look at the original file to see whether there are any major visual differences. This side-by-side comparison shows that, visually, the images appear to be identical. If we look at the file sizes, though, we can see a bit of a difference between the two. In the lower right-hand corner, you can see that the original image is 10 megabytes, and the file that we encoded data into is almost 12 megabytes. This kind of difference would be difficult to detect if you didn't know the size of the original file.",
      "summary": "Compare the Files: This is the file we created that contains the hidden data. In the lower right-hand corner, you can see that the original image is 10 megabytes, and the file that we encoded data into is almost 12 megabytes.",
      "metadata": {
        "chapter_num": "3",
        "section_num": "3.1.10",
        "title": "Use Steganography to Hide a File",
        "content_type": "video",
        "filename": "3.1.10_Use_Steganography_to_Hide_a_File_[video].txt",
        "file_path": "/Users/basantabaral/CompTia/data_raw/03_Cryptographic_Solutions/3.1.10_Use_Steganography_to_Hide_a_File_[video].txt",
        "word_count": 684,
        "has_content": true
      },
      "section_header": "Compare the Files",
      "timestamp_range": "01:39-02:20"
    },
    {
      "chunk_id": "3.1.10_chunk_5",
      "content": "Now that we see that the new file has been created, we should make sure that the data was stored properly. Let's try to extract the data. Let's go back to OpenStego and click on the Extract Data button. This page is a bit simpler, since the program only needs the new file and a folder to save the extracted file. I'll provide that data now and attempt to extract the data. I'll come over here and select my file. Click OK. Next, we'll just save it in the Pictures folder and select the Extract Data button. We'll wait for a second while it processes. You can see that a text file was created in the folder. The file has the same name as the file we originally stored in the image, since the steganography tool saves that information in the image as well. We should make sure that the data inside the file is actually correct by opening it. I'll come up here and open the text file. And here's all our secret passwords.",
      "summary": "Extract Data: Now that we see that the new file has been created, we should make sure that the data was stored properly. Let's go back to OpenStego and click on the Extract Data button.",
      "metadata": {
        "chapter_num": "3",
        "section_num": "3.1.10",
        "title": "Use Steganography to Hide a File",
        "content_type": "video",
        "filename": "3.1.10_Use_Steganography_to_Hide_a_File_[video].txt",
        "file_path": "/Users/basantabaral/CompTia/data_raw/03_Cryptographic_Solutions/3.1.10_Use_Steganography_to_Hide_a_File_[video].txt",
        "word_count": 684,
        "has_content": true
      },
      "section_header": "Extract Data",
      "timestamp_range": "02:20-03:10"
    },
    {
      "chunk_id": "3.1.10_chunk_6",
      "content": "In this demo, we discussed steganography and methods for saving data to an image and extracting data from an image.",
      "summary": "In this demo, we discussed steganography and methods for saving data to an image and extracting data from an image.",
      "metadata": {
        "chapter_num": "3",
        "section_num": "3.1.10",
        "title": "Use Steganography to Hide a File",
        "content_type": "video",
        "filename": "3.1.10_Use_Steganography_to_Hide_a_File_[video].txt",
        "file_path": "/Users/basantabaral/CompTia/data_raw/03_Cryptographic_Solutions/3.1.10_Use_Steganography_to_Hide_a_File_[video].txt",
        "word_count": 684,
        "has_content": true
      },
      "section_header": "Summary",
      "timestamp_range": "03:10-03:17"
    }
  ],
  "num_chunks": 6,
  "document_summary": "Use Steganography to Hide a File (video): Sometimes, in order to maintain access to a network or system, malicious users try to transfer files. Since that's all the information we need, let's click Hide Data. This is the file we created that contains the hidden data."
}