{
  "metadata": {
    "chapter_num": "10",
    "section_num": "10.2.1",
    "title": "Virtual Networking Overview",
    "content_type": "video",
    "filename": "10.2.1_Virtual_Networking_Overview_[video].txt",
    "file_path": "data_raw/10_Protocol_App_and_Cloud_Security/10.2.1_Virtual_Networking_Overview_[video].txt",
    "word_count": 1208,
    "has_content": true
  },
  "full_content": "Transcript close interactive script One of the benefits of virtualization is the fact that the network environment can be virtualized, as well as the hardware environment. Each virtual machine on a hypervisor can be assigned a virtual network adapter. The virtual network adapter can be connected to either a physical network segment or to a virtual network segment. A virtual network segment has all the components that you would find on a physical network segment. You have the virtual network adapters, you have virtual network switches, and so on. Let's take a look at how a virtual network works. Over here we have a typical physical network switch; we have traditional user desktops all interconnected using the switch and standard UTP cable, but notice over here that we also have a hypervisor host. This hypervisor host is also connected to the physical network switch with a UTP cable just like any other physical host would be. However, within the hypervisor we have four virtual machines running. One option for configuring virtual networking for these virtual machines is to take their virtual network adapters and bridge them logically--not with actual physical cables--but logically to the physical network interface installed in the hypervisor host, which of course is connected to the physical switch. By doing this, each of these virtual machines then appears on the physical network as if they were a physical host, just like the systems over here are. The virtual adapter in each one of these virtual machines has their own MAC address and their own IP address. Therefore, they appear to be just a regular host on the physical network. This isn't the only option you have when networking virtual machines. In this example, we've created a virtual switch within the hypervisor. This is not a physical switch with real ports; instead, it's a switch that's running as software in the RAM of the hypervisor itself. You can actually connect each one of these virtual network adapters and each one of these virtual machines to this virtual switch. We've depicted it here with what appears to be drop cables, but they're not really drop cables they're just logical electrical connections using the hardware, the hypervisor itself, to connect the virtual network adapters to this virtual switch. By doing this, we've created a virtual network segment. Notice that this virtual switch is not connected in any way to the physical interface and the hypervisor at this time. Therefore, each one of these virtual machines can see each other on the virtual network through the virtual switch, but they cannot see any of these hosts out here on the physical network. This is sometimes called a sandbox environment. If you wanted to, you could actually connect the hypervisor itself to this virtual switch so the hypervisor can interact with these virtual machines on the virtual network. But it still keeps these virtual machines themselves isolated from the physical network and this can be a very valuable configuration, especially if you're in a testing environment. For example, suppose you're about to roll out a new patch to all of your physical servers. You could set up virtual servers connected to an isolated virtual switch within the hypervisor and then test that update to see if it's going to break anything before you actually roll it out into your production environment. You can even create a router within your hypervisor. In this case, we've set up a net router that connects our virtual network segment to the physical switch through the physical interface in the hypervisor. In this scenario, we've essentially created a virtual network segment that goes to the NAT router and then out on to your physical network segment. In this configuration, all of these internal virtual hosts are able to contact these physical hosts out here. However, because we're dealing with a NAT router, we can't initiate connections in the other direction of course, but you can go out in this direction. These hosts would be able to get out on the internet, for example, and download patches and updates. There are a variety of different ways in which virtualization could be implemented. For example, you could implement virtualize servers. However, you could also virtualize desktops, using the virtual desktop interface, or VDI. There are actually many ways to do this. For example, you could create multiple virtual desktops on the same local workstation host. This is very useful in a situation where you're testing an application on multiple platforms to make sure that it runs properly. Another strategy would be to implement multiple desktops on one physical server, and then allow all of your end users to access those virtual desktops remotely. Essentially, all of your user desktops are provided as virtual machines from a limited number of hypervisor hosts. This strategy could save you a lot of money in your desktop budget. You simply purchase a few high-end servers that will host the hypervisor and as desktop virtual machines. The end users on the other hand will require only very low-end workstations. In fact, they don't even need a hard drive if you have a basic operating system in the firmware of the system. These low-end workstations connect remotely to the hypervisor server and then run the desktop. You can even use virtualization to provide offsite virtualized network components. For example, you could use virtualization to move your entire data center offsite. Instead of managing it onsite, it's taken care of by a vendor whose physical facility might be miles away from your physical location. In this scenario, the vendor manages your hardware and your software to provide the virtual network that's accessed by your end users. This can be very useful because it only requires very minimal hardware to be maintained at your physical site. That's it for this lesson. It's important that you're familiar with how virtualization works. Almost all organizations are moving in that direction because of the cost savings associated with virtualization. In this lesson, we talked about how virtual bridging works. We talked about creating a sandbox with virtual networking. We talked about using a NAT router with virtual networking, and then we talked about virtualizing the network infrastructure.",
  "chunks": [
    {
      "chunk_id": "10.2.1_chunk_1",
      "content": "One of the benefits of virtualization is the fact that the network environment can be virtualized, as well as the hardware environment. Each virtual machine on a hypervisor can be assigned a virtual network adapter. The virtual network adapter can be connected to either a physical network segment or to a virtual network segment. A virtual network segment has all the components that you would find on a physical network segment. You have the virtual network adapters, you have virtual network switches, and so on.",
      "summary": "Virtual networking implementations leverage virtualization technology to create network environments that mirror physical networks. Each virtual machine on a hypervisor can utilize virtual network adapters, which can connect to either physical or virtual network segments, complete with components like virtual switches. This setup enhances flexibility and resource management in network design and security.",
      "metadata": {
        "chapter_num": "10",
        "section_num": "10.2.1",
        "title": "Virtual Networking Overview",
        "content_type": "video",
        "filename": "10.2.1_Virtual_Networking_Overview_[video].txt",
        "file_path": "data_raw/10_Protocol_App_and_Cloud_Security/10.2.1_Virtual_Networking_Overview_[video].txt",
        "word_count": 1208,
        "has_content": true
      },
      "section_header": "Virtual Networking Implementations",
      "timestamp_range": ""
    },
    {
      "chunk_id": "10.2.1_chunk_2",
      "content": "Let's take a look at how a virtual network works. Over here we have a typical physical network switch; we have traditional user desktops all interconnected using the switch and standard UTP cable, but notice over here that we also have a hypervisor host. This hypervisor host is also connected to the physical network switch with a UTP cable just like any other physical host would be. However, within the hypervisor we have four virtual machines running. One option for configuring virtual networking for these virtual machines is to take their virtual network adapters and bridge them logically--not with actual physical cables--but logically to the physical network interface installed in the hypervisor host, which of course is connected to the physical switch. By doing this, each of these virtual machines then appears on the physical network as if they were a physical host, just like the systems over here are. The virtual adapter in each one of these virtual machines has their own MAC address and their own IP address. Therefore, they appear to be just a regular host on the physical network. This isn't the only option you have when networking virtual machines. In this example, we've created a virtual switch within the hypervisor. This is not a physical switch with real ports; instead, it's a switch that's running as software in the RAM of the hypervisor itself. You can actually connect each one of these virtual network adapters and each one of these virtual machines to this virtual switch. We've depicted it here with what appears to be drop cables, but they're not really drop cables they're just logical electrical connections using the hardware, the hypervisor itself, to connect the virtual network adapters to this virtual switch. By doing this, we've created a virtual network segment.",
      "summary": "This section explains how virtual networking operates within a hypervisor environment, where virtual machines (VMs) can be connected to a physical network switch or a virtual switch created in the hypervisor's RAM. By bridging virtual network adapters to the physical network interface, VMs appear as distinct hosts on the physical network, each with unique MAC and IP addresses. Additionally, the use of a virtual switch allows for the creation of isolated virtual network segments, enhancing flexibility and management of network resources.",
      "metadata": {
        "chapter_num": "10",
        "section_num": "10.2.1",
        "title": "Virtual Networking Overview",
        "content_type": "video",
        "filename": "10.2.1_Virtual_Networking_Overview_[video].txt",
        "file_path": "data_raw/10_Protocol_App_and_Cloud_Security/10.2.1_Virtual_Networking_Overview_[video].txt",
        "word_count": 1208,
        "has_content": true
      },
      "section_header": "How Virtual Bridging Works",
      "timestamp_range": ""
    },
    {
      "chunk_id": "10.2.1_chunk_3",
      "content": "Notice that this virtual switch is not connected in any way to the physical interface and the hypervisor at this time. Therefore, each one of these virtual machines can see each other on the virtual network through the virtual switch, but they cannot see any of these hosts out here on the physical network. This is sometimes called a sandbox environment. If you wanted to, you could actually connect the hypervisor itself to this virtual switch so the hypervisor can interact with these virtual machines on the virtual network. But it still keeps these virtual machines themselves isolated from the physical network and this can be a very valuable configuration, especially if you're in a testing environment. For example, suppose you're about to roll out a new patch to all of your physical servers. You could set up virtual servers connected to an isolated virtual switch within the hypervisor and then test that update to see if it's going to break anything before you actually roll it out into your production environment. You can even create a router within your hypervisor.",
      "summary": "Creating a sandbox environment using a virtual switch allows virtual machines to communicate with each other while remaining isolated from the physical network, enhancing security during testing. This setup is particularly useful for safely testing updates or patches on virtual servers before deploying them to production systems. Additionally, the hypervisor can be connected to the virtual switch for interaction with the virtual machines, further facilitating controlled testing scenarios.",
      "metadata": {
        "chapter_num": "10",
        "section_num": "10.2.1",
        "title": "Virtual Networking Overview",
        "content_type": "video",
        "filename": "10.2.1_Virtual_Networking_Overview_[video].txt",
        "file_path": "data_raw/10_Protocol_App_and_Cloud_Security/10.2.1_Virtual_Networking_Overview_[video].txt",
        "word_count": 1208,
        "has_content": true
      },
      "section_header": "Creating a Sandbox",
      "timestamp_range": ""
    },
    {
      "chunk_id": "10.2.1_chunk_4",
      "content": "In this case, we've set up a net router that connects our virtual network segment to the physical switch through the physical interface in the hypervisor. In this scenario, we've essentially created a virtual network segment that goes to the NAT router and then out on to your physical network segment. In this configuration, all of these internal virtual hosts are able to contact these physical hosts out here. However, because we're dealing with a NAT router, we can't initiate connections in the other direction of course, but you can go out in this direction. These hosts would be able to get out on the internet, for example, and download patches and updates.",
      "summary": "The section on using a NAT router explains how to connect a virtual network segment to a physical network through a NAT router, allowing internal virtual hosts to access external resources like the internet for updates and patches. While this setup enables outbound communication, it restricts inbound connections, enhancing security by preventing external entities from initiating contact with the internal network. This practical application of NAT helps manage IP address usage and protects the internal network from external threats.",
      "metadata": {
        "chapter_num": "10",
        "section_num": "10.2.1",
        "title": "Virtual Networking Overview",
        "content_type": "video",
        "filename": "10.2.1_Virtual_Networking_Overview_[video].txt",
        "file_path": "data_raw/10_Protocol_App_and_Cloud_Security/10.2.1_Virtual_Networking_Overview_[video].txt",
        "word_count": 1208,
        "has_content": true
      },
      "section_header": "Using a NAT Router",
      "timestamp_range": ""
    },
    {
      "chunk_id": "10.2.1_chunk_5",
      "content": "There are a variety of different ways in which virtualization could be implemented. For example, you could implement virtualize servers. However, you could also virtualize desktops, using the virtual desktop interface, or VDI. There are actually many ways to do this. For example, you could create multiple virtual desktops on the same local workstation host. This is very useful in a situation where you're testing an application on multiple platforms to make sure that it runs properly. Another strategy would be to implement multiple desktops on one physical server, and then allow all of your end users to access those virtual desktops remotely. Essentially, all of your user desktops are provided as virtual machines from a limited number of hypervisor hosts. This strategy could save you a lot of money in your desktop budget. You simply purchase a few high-end servers that will host the hypervisor and as desktop virtual machines. The end users on the other hand will require only very low-end workstations. In fact, they don't even need a hard drive if you have a basic operating system in the firmware of the system. These low-end workstations connect remotely to the hypervisor server and then run the desktop. You can even use virtualization to provide offsite virtualized network components. For example, you could use virtualization to move your entire data center offsite. Instead of managing it onsite, it's taken care of by a vendor whose physical facility might be miles away from your physical location. In this scenario, the vendor manages your hardware and your software to provide the virtual network that's accessed by your end users. This can be very useful because it only requires very minimal hardware to be maintained at your physical site.",
      "summary": "The \"Virtualizing the Network Infrastructure\" section of the CompTIA Security+ course explores various virtualization strategies, including server and desktop virtualization, such as Virtual Desktop Infrastructure (VDI). It highlights the cost-saving benefits of consolidating multiple virtual desktops on high-end servers, allowing low-end workstations to access these resources remotely. Additionally, the course discusses the advantages of offsite virtualization, where a vendor manages the hardware and software, reducing the need for extensive on-site infrastructure.",
      "metadata": {
        "chapter_num": "10",
        "section_num": "10.2.1",
        "title": "Virtual Networking Overview",
        "content_type": "video",
        "filename": "10.2.1_Virtual_Networking_Overview_[video].txt",
        "file_path": "data_raw/10_Protocol_App_and_Cloud_Security/10.2.1_Virtual_Networking_Overview_[video].txt",
        "word_count": 1208,
        "has_content": true
      },
      "section_header": "Virtualizing the Network Infrastructure",
      "timestamp_range": ""
    },
    {
      "chunk_id": "10.2.1_chunk_6",
      "content": "That's it for this lesson. It's important that you're familiar with how virtualization works. Almost all organizations are moving in that direction because of the cost savings associated with virtualization. In this lesson, we talked about how virtual bridging works. We talked about creating a sandbox with virtual networking. We talked about using a NAT router with virtual networking, and then we talked about virtualizing the network infrastructure.",
      "summary": "This lesson emphasizes the significance of virtualization in modern organizations, highlighting its cost-saving benefits. Key topics include the mechanics of virtual bridging, the creation of sandboxes through virtual networking, and the application of NAT routers within virtualized environments, all of which contribute to effective network infrastructure virtualization. Understanding these concepts is essential for implementing secure and efficient network solutions.",
      "metadata": {
        "chapter_num": "10",
        "section_num": "10.2.1",
        "title": "Virtual Networking Overview",
        "content_type": "video",
        "filename": "10.2.1_Virtual_Networking_Overview_[video].txt",
        "file_path": "data_raw/10_Protocol_App_and_Cloud_Security/10.2.1_Virtual_Networking_Overview_[video].txt",
        "word_count": 1208,
        "has_content": true
      },
      "section_header": "Summary",
      "timestamp_range": ""
    }
  ],
  "num_chunks": 6
}