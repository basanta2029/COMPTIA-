{
  "metadata": {
    "chapter_num": "10",
    "section_num": "10.8.3",
    "title": "Constraints and Security of Embedded Devices",
    "content_type": "video",
    "filename": "10.8.3_Constraints_and_Security_of_Embedded_Devices_[video].txt",
    "file_path": "data_raw/10_Protocol_App_and_Cloud_Security/10.8.3_Constraints_and_Security_of_Embedded_Devices_[video].txt",
    "word_count": 919,
    "has_content": true
  },
  "full_content": "Transcript close interactive script Embedded systems are usually dedicated to performing a precise function. They can vary in size, complexity, and function and can range from tiny, portable devices like smart watches to large traffic controllers. Some have low complexity, like a single micro-controller chip that opens and closes a gate, and some have very high complexity, like the embedded systems in an automated aircraft. Nowadays, devices are becoming more intelligent and capable than ever. Manufacturers are always competing to be the first to release the latest and greatest device. But in the process of beating their competitors to market, many end up neglecting some of the most important security issues. These circumstances make it so devices are often sent out unchecked and undertested, making them easy for hackers to exploit. In this lesson, I'll go over some of the security constraints that affect modern embedded devices. Smart devices collect data for many reasons, such as improving efficiency, experience, and decision-making. Again, the problem is that some devices lack the most basic security and data-protection policies. Because you're dealing with sensitive information, you absolutely have to store and process data securely across your network. This means that you should redact sensitive data before you store it. An alternative is to use data separation to decouple personally identifiable information from data payloads. Data that isn't useful anymore should be disposed of in a safe manner. No measure is ever fail-proof, and every device needs regular patches to address attacks that uncover new flaws. Patching has its downsides as well, and many times a patch ends up causing just as many problems as it was intended to solve. First of all, the patch might break the device's functionality. Second, most manufacturers are more concerned with producing and releasing products faster than their competition than mitigating security risks. Third, manufacturers often stop releasing patches and support for devices once they start working on a different product. Fourth, many devices use unsupported legacy Linux kernels. Ideally, each device should undergo proper testing before it's released to the market, and patches should happen on a regular basis. But, sometimes the cost to go through all the testing is more than manufacturers are willing to spend. Many times, they simply accept the risks, even though skipping these important steps is bad for customers and manufacturers. After all, it only takes one large-scale data breach for a company to lose sensitive information, the public's trust, and maybe their entire fortune. For this reason, you should always implement secure authentication for users and apps. Authentication is an area that's often overlooked in embedded-technology development. The Mirai botnet was one of the biggest and most troublesome DDoS attacks in recent history. This attack was so successful because it found vulnerable IoT devices and used default usernames and passwords to log in and infect them. Although almost all devices have to authenticate before they access a network, many allow easy-to-guess default passwords. The main problem is that there's no set regulation for smart devices that companies are legally forced to abide by. With this in mind, some ways to strengthen your own authentication practices are to use two-factor authentication, enforce strong passwords, and use certificates. Even if you secure your devices with authentication, there's another vulnerability called lack of encryption. Data encryption and decryption is an ongoing process. Most network sensors aren't capable of supporting this process, which means that most data is transferred and received as cleartext. In addition, ports listening to the internet are many times left open continuously. Both factors make data extremely vulnerable to theft, breaches, and other malicious acts. In order to try to standardize platforms and create trust in the embedded world, a group of experts got together in 2003 and created the Trusted Computing Group, or TCG. Together, they released a standard called Trusted Platform Module, or TPM. Although trust and security are often spoken of as one and the same, they're actually quite different. Consider the fact that a secure system that can be bypassed without detection isn't trustworthy. At the same time, a trusted system with undiscovered vulnerabilities isn't secure. To be trusted, a system must behave as expected and be able to detect that something is wrong. That's why TPM is so valuable to trusted computing. It provides essential services such as strong identity, secure storage, and integrity measurement. That's it for this video. As embedded devices grow and develop, they become more susceptible to exploitation from hackers and other bad actors. Understanding the present challenges in the world of embedded devices can help you protect your data and stand out in your technological career.",
  "chunks": [
    {
      "chunk_id": "10.8.3_chunk_1",
      "content": "Embedded systems are usually dedicated to performing a precise function. They can vary in size, complexity, and function and can range from tiny, portable devices like smart watches to large traffic controllers. Some have low complexity, like a single micro-controller chip that opens and closes a gate, and some have very high complexity, like the embedded systems in an automated aircraft. Nowadays, devices are becoming more intelligent and capable than ever. Manufacturers are always competing to be the first to release the latest and greatest device. But in the process of beating their competitors to market, many end up neglecting some of the most important security issues. These circumstances make it so devices are often sent out unchecked and undertested, making them easy for hackers to exploit. In this lesson, I'll go over some of the security constraints that affect modern embedded devices.",
      "summary": "Embedded devices, ranging from simple microcontrollers to complex systems like those in automated aircraft, are increasingly prevalent but often released without thorough security testing due to competitive pressures. This oversight can lead to vulnerabilities that hackers can exploit. The lesson highlights the security constraints faced by these devices, emphasizing the importance of addressing security issues in the design and deployment phases.",
      "metadata": {
        "chapter_num": "10",
        "section_num": "10.8.3",
        "title": "Constraints and Security of Embedded Devices",
        "content_type": "video",
        "filename": "10.8.3_Constraints_and_Security_of_Embedded_Devices_[video].txt",
        "file_path": "data_raw/10_Protocol_App_and_Cloud_Security/10.8.3_Constraints_and_Security_of_Embedded_Devices_[video].txt",
        "word_count": 919,
        "has_content": true
      },
      "section_header": "Embedded Device Security Constraints",
      "timestamp_range": ""
    },
    {
      "chunk_id": "10.8.3_chunk_2",
      "content": "Smart devices collect data for many reasons, such as improving efficiency, experience, and decision-making. Again, the problem is that some devices lack the most basic security and data-protection policies. Because you're dealing with sensitive information, you absolutely have to store and process data securely across your network. This means that you should redact sensitive data before you store it. An alternative is to use data separation to decouple personally identifiable information from data payloads. Data that isn't useful anymore should be disposed of in a safe manner. No measure is ever fail-proof, and every device needs regular patches to address attacks that uncover new flaws.",
      "summary": "Smart devices often collect sensitive data to enhance efficiency and decision-making, but many lack adequate security measures. To protect this information, it's essential to securely store and process data by redacting sensitive details or separating personally identifiable information from data payloads. Additionally, regular patching of devices and safe disposal of unnecessary data are critical practices to mitigate vulnerabilities and enhance overall security.",
      "metadata": {
        "chapter_num": "10",
        "section_num": "10.8.3",
        "title": "Constraints and Security of Embedded Devices",
        "content_type": "video",
        "filename": "10.8.3_Constraints_and_Security_of_Embedded_Devices_[video].txt",
        "file_path": "data_raw/10_Protocol_App_and_Cloud_Security/10.8.3_Constraints_and_Security_of_Embedded_Devices_[video].txt",
        "word_count": 919,
        "has_content": true
      },
      "section_header": "Security Issues",
      "timestamp_range": ""
    },
    {
      "chunk_id": "10.8.3_chunk_3",
      "content": "Patching has its downsides as well, and many times a patch ends up causing just as many problems as it was intended to solve. First of all, the patch might break the device's functionality. Second, most manufacturers are more concerned with producing and releasing products faster than their competition than mitigating security risks. Third, manufacturers often stop releasing patches and support for devices once they start working on a different product. Fourth, many devices use unsupported legacy Linux kernels. Ideally, each device should undergo proper testing before it's released to the market, and patches should happen on a regular basis. But, sometimes the cost to go through all the testing is more than manufacturers are willing to spend. Many times, they simply accept the risks, even though skipping these important steps is bad for customers and manufacturers. After all, it only takes one large-scale data breach for a company to lose sensitive information, the public's trust, and maybe their entire fortune.",
      "summary": "Patching is essential for maintaining device security, but it can introduce new issues, such as functionality problems and the risk of unsupported legacy systems. Manufacturers often prioritize speed over security, leading to inadequate testing and a lack of ongoing support for older products. This negligence can result in significant vulnerabilities, potentially culminating in large-scale data breaches that jeopardize sensitive information and erode public trust.",
      "metadata": {
        "chapter_num": "10",
        "section_num": "10.8.3",
        "title": "Constraints and Security of Embedded Devices",
        "content_type": "video",
        "filename": "10.8.3_Constraints_and_Security_of_Embedded_Devices_[video].txt",
        "file_path": "data_raw/10_Protocol_App_and_Cloud_Security/10.8.3_Constraints_and_Security_of_Embedded_Devices_[video].txt",
        "word_count": 919,
        "has_content": true
      },
      "section_header": "Security Issues",
      "timestamp_range": ""
    },
    {
      "chunk_id": "10.8.3_chunk_4",
      "content": "For this reason, you should always implement secure authentication for users and apps. Authentication is an area that's often overlooked in embedded-technology development. The Mirai botnet was one of the biggest and most troublesome DDoS attacks in recent history. This attack was so successful because it found vulnerable IoT devices and used default usernames and passwords to log in and infect them. Although almost all devices have to authenticate before they access a network, many allow easy-to-guess default passwords. The main problem is that there's no set regulation for smart devices that companies are legally forced to abide by. With this in mind, some ways to strengthen your own authentication practices are to use two-factor authentication, enforce strong passwords, and use certificates.",
      "summary": "The Authentication section emphasizes the critical importance of secure authentication practices for users and applications, particularly in the context of IoT devices, which are often compromised due to weak default credentials. Highlighting the Mirai botnet attack as a case study, it underscores the lack of regulatory standards for smart devices and recommends strategies such as two-factor authentication, strong password enforcement, and the use of certificates to enhance security. These measures are essential to protect networks from unauthorized access and potential cyber threats.",
      "metadata": {
        "chapter_num": "10",
        "section_num": "10.8.3",
        "title": "Constraints and Security of Embedded Devices",
        "content_type": "video",
        "filename": "10.8.3_Constraints_and_Security_of_Embedded_Devices_[video].txt",
        "file_path": "data_raw/10_Protocol_App_and_Cloud_Security/10.8.3_Constraints_and_Security_of_Embedded_Devices_[video].txt",
        "word_count": 919,
        "has_content": true
      },
      "section_header": "Authentication",
      "timestamp_range": ""
    },
    {
      "chunk_id": "10.8.3_chunk_5",
      "content": "Even if you secure your devices with authentication, there's another vulnerability called lack of encryption. Data encryption and decryption is an ongoing process. Most network sensors aren't capable of supporting this process, which means that most data is transferred and received as cleartext. In addition, ports listening to the internet are many times left open continuously. Both factors make data extremely vulnerable to theft, breaches, and other malicious acts.",
      "summary": "The Encryption section emphasizes the critical role of data encryption in securing information against theft and breaches, highlighting that without it, data is often transmitted as cleartext, making it vulnerable. It points out that many network sensors lack the capability to support encryption processes, and open internet ports further exacerbate security risks. Understanding and implementing encryption is essential for protecting sensitive data in transit.",
      "metadata": {
        "chapter_num": "10",
        "section_num": "10.8.3",
        "title": "Constraints and Security of Embedded Devices",
        "content_type": "video",
        "filename": "10.8.3_Constraints_and_Security_of_Embedded_Devices_[video].txt",
        "file_path": "data_raw/10_Protocol_App_and_Cloud_Security/10.8.3_Constraints_and_Security_of_Embedded_Devices_[video].txt",
        "word_count": 919,
        "has_content": true
      },
      "section_header": "Encryption",
      "timestamp_range": ""
    },
    {
      "chunk_id": "10.8.3_chunk_6",
      "content": "In order to try to standardize platforms and create trust in the embedded world, a group of experts got together in 2003 and created the Trusted Computing Group, or TCG. Together, they released a standard called Trusted Platform Module, or TPM. Although trust and security are often spoken of as one and the same, they're actually quite different. Consider the fact that a secure system that can be bypassed without detection isn't trustworthy. At the same time, a trusted system with undiscovered vulnerabilities isn't secure. To be trusted, a system must behave as expected and be able to detect that something is wrong. That's why TPM is so valuable to trusted computing. It provides essential services such as strong identity, secure storage, and integrity measurement.",
      "summary": "The Trusted Computing Group (TCG) established the Trusted Platform Module (TPM) standard in 2003 to enhance trust and security in embedded systems. While trust and security are related, they are distinct concepts; a secure system must be reliable and capable of detecting issues, while a trusted system must be free from undiscovered vulnerabilities. TPM plays a crucial role by offering strong identity, secure storage, and integrity measurement, ensuring that systems behave as expected and maintain their trustworthiness.",
      "metadata": {
        "chapter_num": "10",
        "section_num": "10.8.3",
        "title": "Constraints and Security of Embedded Devices",
        "content_type": "video",
        "filename": "10.8.3_Constraints_and_Security_of_Embedded_Devices_[video].txt",
        "file_path": "data_raw/10_Protocol_App_and_Cloud_Security/10.8.3_Constraints_and_Security_of_Embedded_Devices_[video].txt",
        "word_count": 919,
        "has_content": true
      },
      "section_header": "Trust and Security",
      "timestamp_range": ""
    },
    {
      "chunk_id": "10.8.3_chunk_7",
      "content": "That's it for this video. As embedded devices grow and develop, they become more susceptible to exploitation from hackers and other bad actors. Understanding the present challenges in the world of embedded devices can help you protect your data and stand out in your technological career.",
      "summary": "The CompTIA Security+ course emphasizes the increasing vulnerabilities of embedded devices as they evolve, highlighting the importance of understanding current security challenges to safeguard data. Key topics include identifying potential threats and implementing protective measures, which are essential for advancing in a technology-focused career. Practical applications involve applying security best practices to mitigate risks associated with embedded systems.",
      "metadata": {
        "chapter_num": "10",
        "section_num": "10.8.3",
        "title": "Constraints and Security of Embedded Devices",
        "content_type": "video",
        "filename": "10.8.3_Constraints_and_Security_of_Embedded_Devices_[video].txt",
        "file_path": "data_raw/10_Protocol_App_and_Cloud_Security/10.8.3_Constraints_and_Security_of_Embedded_Devices_[video].txt",
        "word_count": 919,
        "has_content": true
      },
      "section_header": "Summary",
      "timestamp_range": ""
    }
  ],
  "num_chunks": 7
}