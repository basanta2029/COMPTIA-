{
  "metadata": {
    "chapter_num": "4",
    "section_num": "4.5.3",
    "title": "Configure Account Policies and UAC Settings",
    "content_type": "video",
    "filename": "4.5.3_Configure_Account_Policies_and_UAC_Settings_[video].txt",
    "file_path": "/Users/basantabaral/CompTia/data_raw/04_Identity_and_Access_Management/4.5.3_Configure_Account_Policies_and_UAC_Settings_[video].txt",
    "word_count": 988,
    "has_content": true
  },
  "full_content": "In this demonstration, we'll show you actions you can take to harden Windows authentication. First, we'll configure account policies that will be applied to all the users in the domain. Then, we'll enforce UAC settings. An easy way to enforce UAC settings is to make the configuration changes to a GPO in the domain. When you use a GPO, settings are automatically enforced on each workstation whenever a user logs in to the domain. Using Group Policy, you make the changes once, instead of having to do it manually on each workstation. Let's go to Tools > Group Policy Management and right-click Default Domain Policy. Click Edit. That opens the Group Policy Management Editor. Then, let's go to Computer Configuration > Policies > Window Settings > Security Settings > Account Policies > Password Policy. Here, you see the password policies that are available. First, let's change the minimum password length from seven characters to a more secure 10 characters. The value you choose for many of these settings depends on your environment, the organization, and how you want to balance security with ease of use for the users. If you set the password policy too high, it might be difficult for users to manage. We'll set the password length at 10 because that's a reasonable number of characters for a password. Now, let's go to Enforce Password History. The value is set to 24. This means the system keeps a 24-password history. That prevents users from repeating recent passwords. This policy makes sure that users can't reuse a password until they have made 24 different password changes. Click OK. That's fine where it's set. Let's change our maximum password age. We're going to change that to 30 days. A minimum password age of one day means the user could change the password every day. Some users might try changing the password every day, so they get back to an old password after 24 days of passwords changes. We don't want to allow that. Let's change the minimum password age to 10 days. That means users have to keep a password for 10 days. Now, let's look at password complexity requirements. These are basic complexity requirements that Windows has defined. In most cases when you click the Explain tab, it'll provide more information about the policy setting. Here you can see all the password requirements that Windows has set. So, we'll click OK. After configuring password policies, let's configure the account lockout policies. If we go here, the first one we'll look at is the account lockout threshold. You can see that it's currently set to 0 invalid logon attempts. Let's double-click it. Zero invalid logon attempts mean it's not enabled. It's defined, but a policy set at zero is, by definition, not enabled. Let's change this to 3. That means, after three invalid password entries, the account will lock. Click OK. If you look, this automatically sets the other two values for the account lockout policy to 10 minutes each. Let's go into these. The Account Lockout duration determines the length of time before a locked account will automatically be unlocked. The Reset Account Lockout Counter determines how long an invalid password attempt will be counted toward the Account Lockout Threshold. 10 minutes is fine for both of these settings, so I'm going to leave them as-is. The next thing we'll look at is the User Account Control. If we go to Local Policies > Security Options, we can look at the UAC settings. A word of caution â€“ configuring the UAC incorrectly can cause some real problems. It can generate excessive elevation prompts, it can cause applications not to install correctly, and be a source of frustration for your users and your help desk. For this video, we're going to go through each of these settings and configure the group policy according to how the UAC behaves by default. It's always a good idea to put new settings into a new group policy object. So, let's close this and go back to the Group Policy Management. We'll go into the Group Policy Objects folder and right click, then select New to create a new GPO. We'll call this UAC Settings. We'll edit this GPO and go to Computer Configuration, Policies, Windows Settings, Security Settings, Local Policies, Security Settings, and scroll down to the bottom. You can read more about what each of these settings do in the description. Here is how we are going to configure them for this video. Admin Approval Mode for the Built-in Administrator account will be enabled. Allow UIAccess applications to prompt for elevation without using the Secure Desktop will be disabled. Behavior of the elevation prompt for administrators in Admin Approval Mode will be set to \"Prompt for consent for non-Windows binaries\". Behavior of the elevation prompt for standard users will be set to \"Prompt for credentials on the secure desktop\". Detect application installations and prompt for elevation will be enabled. Only elevate executables that are signed and validated will be disabled. Only elevate UIAccess applications that are installed in secure locations will be enabled. Run all administrators in Admin Approval Mode will be enabled. Switch to the secure desktop when prompting for elevation will be enabled. And last, virtualize file and registry write failures to per-user locations will be enabled. Now that I have the GPO configured the way I want, I just need to apply it to an OU, and all the computers beneath that OU will inherit the settings from it. That concludes this demo. In this demonstration, we hardened Windows authentication.",
  "chunks": [
    {
      "chunk_id": "4.5.3_chunk_1",
      "content": "In this demonstration, we'll show you actions you can take to harden Windows authentication. First, we'll configure account policies that will be applied to all the users in the domain. Then, we'll enforce UAC settings. An easy way to enforce UAC settings is to make the configuration changes to a GPO in the domain. When you use a GPO, settings are automatically enforced on each workstation whenever a user logs in to the domain. Using Group Policy, you make the changes once, instead of having to do it manually on each workstation.",
      "summary": "This demonstration covers hardening Windows authentication through domain-wide account policies and User Account Control (UAC) enforcement using Group Policy Objects (GPOs). Account policies establish security parameters for all domain users, while UAC settings control privilege escalation and administrative access. GPOs enable centralized security configuration management, automatically applying authentication hardening settings across all domain workstations during user login instead of requiring manual configuration on each system.",
      "metadata": {
        "chapter_num": "4",
        "section_num": "4.5.3",
        "title": "Configure Account Policies and UAC Settings",
        "content_type": "video",
        "filename": "4.5.3_Configure_Account_Policies_and_UAC_Settings_[video].txt",
        "file_path": "/Users/basantabaral/CompTia/data_raw/04_Identity_and_Access_Management/4.5.3_Configure_Account_Policies_and_UAC_Settings_[video].txt",
        "word_count": 988,
        "has_content": true
      },
      "section_header": "Account Policies and UAC Settings",
      "timestamp_range": "00:00-00:40"
    },
    {
      "chunk_id": "4.5.3_chunk_2",
      "content": "Let's go to Tools > Group Policy Management and right-click Default Domain Policy. Click Edit. That opens the Group Policy Management Editor. Then, let's go to Computer Configuration > Policies > Window Settings > Security Settings > Account Policies > Password Policy. Here, you see the password policies that are available.",
      "summary": "Password policies in Active Directory are configured through Group Policy Management by navigating to Computer Configuration > Policies > Windows Settings > Security Settings > Account Policies > Password Policy within the Default Domain Policy. This centralized approach allows administrators to enforce domain-wide password security requirements and standards across all user accounts. The Group Policy Management Editor provides access to various password policy settings that control password complexity, length, age, and history requirements for enhanced security posture.",
      "metadata": {
        "chapter_num": "4",
        "section_num": "4.5.3",
        "title": "Configure Account Policies and UAC Settings",
        "content_type": "video",
        "filename": "4.5.3_Configure_Account_Policies_and_UAC_Settings_[video].txt",
        "file_path": "/Users/basantabaral/CompTia/data_raw/04_Identity_and_Access_Management/4.5.3_Configure_Account_Policies_and_UAC_Settings_[video].txt",
        "word_count": 988,
        "has_content": true
      },
      "section_header": "Password Policies",
      "timestamp_range": "00:40-01:16"
    },
    {
      "chunk_id": "4.5.3_chunk_3",
      "content": "First, let's change the minimum password length from seven characters to a more secure 10 characters. The value you choose for many of these settings depends on your environment, the organization, and how you want to balance security with ease of use for the users. If you set the password policy too high, it might be difficult for users to manage. We'll set the password length at 10 because that's a reasonable number of characters for a password.",
      "summary": "Minimum password length should be configured to balance security requirements with user usability, with 10 characters representing a reasonable secure baseline that improves upon weaker 7-character defaults. Organizations must evaluate their specific environment and user needs when setting password length policies, as overly restrictive requirements can create user management difficulties while insufficient length compromises security.",
      "metadata": {
        "chapter_num": "4",
        "section_num": "4.5.3",
        "title": "Configure Account Policies and UAC Settings",
        "content_type": "video",
        "filename": "4.5.3_Configure_Account_Policies_and_UAC_Settings_[video].txt",
        "file_path": "/Users/basantabaral/CompTia/data_raw/04_Identity_and_Access_Management/4.5.3_Configure_Account_Policies_and_UAC_Settings_[video].txt",
        "word_count": 988,
        "has_content": true
      },
      "section_header": "Minimum Password Length",
      "timestamp_range": "01:16-01:44"
    },
    {
      "chunk_id": "4.5.3_chunk_4",
      "content": "Now, let's go to Enforce Password History. The value is set to 24. This means the system keeps a 24-password history. That prevents users from repeating recent passwords. This policy makes sure that users can't reuse a password until they have made 24 different password changes. Click OK. That's fine where it's set.",
      "summary": "The Enforce Password History policy setting maintains a record of previously used passwords to prevent password reuse, with a value of 24 meaning the system stores the last 24 passwords for each user account. This security control forces users to create 24 unique passwords before they can reuse any previous password, preventing common password cycling behaviors that weaken authentication security.",
      "metadata": {
        "chapter_num": "4",
        "section_num": "4.5.3",
        "title": "Configure Account Policies and UAC Settings",
        "content_type": "video",
        "filename": "4.5.3_Configure_Account_Policies_and_UAC_Settings_[video].txt",
        "file_path": "/Users/basantabaral/CompTia/data_raw/04_Identity_and_Access_Management/4.5.3_Configure_Account_Policies_and_UAC_Settings_[video].txt",
        "word_count": 988,
        "has_content": true
      },
      "section_header": "Password History",
      "timestamp_range": "01:44-02:07"
    },
    {
      "chunk_id": "4.5.3_chunk_5",
      "content": "Let's change our maximum password age. We're going to change that to 30 days. A minimum password age of one day means the user could change the password every day. Some users might try changing the password every day, so they get back to an old password after 24 days of passwords changes. We don't want to allow that. Let's change the minimum password age to 10 days. That means users have to keep a password for 10 days.",
      "summary": "Maximum password age policies should be set to 30 days to enforce regular password changes, while minimum password age should be configured to 10 days to prevent users from rapidly cycling through passwords to reuse old ones. This dual policy approach blocks password history circumvention where users might change passwords daily for 24 days to return to a previously used password.",
      "metadata": {
        "chapter_num": "4",
        "section_num": "4.5.3",
        "title": "Configure Account Policies and UAC Settings",
        "content_type": "video",
        "filename": "4.5.3_Configure_Account_Policies_and_UAC_Settings_[video].txt",
        "file_path": "/Users/basantabaral/CompTia/data_raw/04_Identity_and_Access_Management/4.5.3_Configure_Account_Policies_and_UAC_Settings_[video].txt",
        "word_count": 988,
        "has_content": true
      },
      "section_header": "Maximum Password Age",
      "timestamp_range": "02:07-02:42"
    },
    {
      "chunk_id": "4.5.3_chunk_6",
      "content": "Now, let's look at password complexity requirements. These are basic complexity requirements that Windows has defined. In most cases when you click the Explain tab, it'll provide more information about the policy setting. Here you can see all the password requirements that Windows has set. So, we'll click OK.",
      "summary": "Windows password complexity requirements define basic security standards for user account passwords, with detailed policy explanations accessible through the Explain tab in policy settings. These built-in complexity requirements establish minimum password security criteria that administrators can configure to enforce stronger authentication controls. Password complexity policies are essential components of identity and access management that help prevent unauthorized access through weak credential attacks.",
      "metadata": {
        "chapter_num": "4",
        "section_num": "4.5.3",
        "title": "Configure Account Policies and UAC Settings",
        "content_type": "video",
        "filename": "4.5.3_Configure_Account_Policies_and_UAC_Settings_[video].txt",
        "file_path": "/Users/basantabaral/CompTia/data_raw/04_Identity_and_Access_Management/4.5.3_Configure_Account_Policies_and_UAC_Settings_[video].txt",
        "word_count": 988,
        "has_content": true
      },
      "section_header": "Password Complexity",
      "timestamp_range": "02:42-03:03"
    },
    {
      "chunk_id": "4.5.3_chunk_7",
      "content": "After configuring password policies, let's configure the account lockout policies. If we go here, the first one we'll look at is the account lockout threshold. You can see that it's currently set to 0 invalid logon attempts. Let's double-click it. Zero invalid logon attempts mean it's not enabled. It's defined, but a policy set at zero is, by definition, not enabled. Let's change this to 3. That means, after three invalid password entries, the account will lock. Click OK. If you look, this automatically sets the other two values for the account lockout policy to 10 minutes each. Let's go into these.",
      "summary": "Account lockout threshold defines the number of invalid logon attempts before an account is automatically locked, with a default setting of 0 (disabled) that should be configured to a specific value like 3 attempts for security. When the lockout threshold is enabled, Windows automatically configures the account lockout duration and reset counter to 10 minutes each. This policy prevents brute force password attacks by temporarily disabling accounts after repeated failed authentication attempts.",
      "metadata": {
        "chapter_num": "4",
        "section_num": "4.5.3",
        "title": "Configure Account Policies and UAC Settings",
        "content_type": "video",
        "filename": "4.5.3_Configure_Account_Policies_and_UAC_Settings_[video].txt",
        "file_path": "/Users/basantabaral/CompTia/data_raw/04_Identity_and_Access_Management/4.5.3_Configure_Account_Policies_and_UAC_Settings_[video].txt",
        "word_count": 988,
        "has_content": true
      },
      "section_header": "Account Lockout Policies",
      "timestamp_range": "03:03-03:49"
    },
    {
      "chunk_id": "4.5.3_chunk_8",
      "content": "The Account Lockout duration determines the length of time before a locked account will automatically be unlocked. The Reset Account Lockout Counter determines how long an invalid password attempt will be counted toward the Account Lockout Threshold. 10 minutes is fine for both of these settings, so I'm going to leave them as-is.",
      "summary": "Account Lockout Duration controls how long a locked user account remains inaccessible before automatically unlocking, while Reset Account Lockout Counter determines the time window for counting invalid password attempts toward the lockout threshold. Both settings are typically configured to 10 minutes to balance security protection against brute force attacks with user accessibility. These account lockout policies are essential components of identity and access management that prevent unauthorized access attempts while minimizing user disruption.",
      "metadata": {
        "chapter_num": "4",
        "section_num": "4.5.3",
        "title": "Configure Account Policies and UAC Settings",
        "content_type": "video",
        "filename": "4.5.3_Configure_Account_Policies_and_UAC_Settings_[video].txt",
        "file_path": "/Users/basantabaral/CompTia/data_raw/04_Identity_and_Access_Management/4.5.3_Configure_Account_Policies_and_UAC_Settings_[video].txt",
        "word_count": 988,
        "has_content": true
      },
      "section_header": "Reset Account Lockout Counter and Account Lockout Duration",
      "timestamp_range": "03:49-04:09"
    },
    {
      "chunk_id": "4.5.3_chunk_9",
      "content": "The next thing we'll look at is the User Account Control. If we go to Local Policies > Security Options, we can look at the UAC settings. A word of caution â€“ configuring the UAC incorrectly can cause some real problems. It can generate excessive elevation prompts, it can cause applications not to install correctly, and be a source of frustration for your users and your help desk. For this video, we're going to go through each of these settings and configure the group policy according to how the UAC behaves by default. It's always a good idea to put new settings into a new group policy object. So, let's close this and go back to the Group Policy Management. We'll go into the Group Policy Objects folder and right click, then select New to create a new GPO. We'll call this UAC Settings. We'll edit this GPO and go to Computer Configuration, Policies, Windows Settings, Security Settings, Local Policies, Security Settings, and scroll down to the bottom. You can read more about what each of these settings do in the description. Here is how we are going to configure them for this video. Admin Approval Mode for the Built-in Administrator account will be enabled. Allow UIAccess applications to prompt for elevation without using the Secure Desktop will be disabled. Behavior of the elevation prompt for administrators in Admin Approval Mode will be set to \"Prompt for consent for non-Windows binaries\". Behavior of the elevation prompt for standard users will be set to \"Prompt for credentials on the secure desktop\". Detect application installations and prompt for elevation will be enabled. Only elevate executables that are signed and validated will be disabled. Only elevate UIAccess applications that are installed in secure locations will be enabled. Run all administrators in Admin Approval Mode will be enabled. Switch to the secure desktop when prompting for elevation will be enabled. And last, virtualize file and registry write failures to per-user locations will be enabled. Now that I have the GPO configured the way I want, I just need to apply it to an OU, and all the computers beneath that OU will inherit the settings from it.",
      "summary": "User Account Control (UAC) settings in Group Policy require careful configuration to balance security and usability, as incorrect settings can cause excessive elevation prompts and application installation failures. Key UAC security configurations include enabling Admin Approval Mode for built-in administrators, setting elevation prompts to require credentials on secure desktop for standard users, and enabling secure desktop switching during elevation requests. These UAC policies should be implemented through dedicated Group Policy Objects and applied to organizational units to enforce consistent privilege escalation controls across domain computers.",
      "metadata": {
        "chapter_num": "4",
        "section_num": "4.5.3",
        "title": "Configure Account Policies and UAC Settings",
        "content_type": "video",
        "filename": "4.5.3_Configure_Account_Policies_and_UAC_Settings_[video].txt",
        "file_path": "/Users/basantabaral/CompTia/data_raw/04_Identity_and_Access_Management/4.5.3_Configure_Account_Policies_and_UAC_Settings_[video].txt",
        "word_count": 988,
        "has_content": true
      },
      "section_header": "User Account Control Settings",
      "timestamp_range": "04:09-06:53"
    },
    {
      "chunk_id": "4.5.3_chunk_10",
      "content": "That concludes this demo. In this demonstration, we hardened Windows authentication.",
      "summary": "This demonstration covered Windows authentication hardening techniques through account policy configuration and User Account Control (UAC) settings. The training focused on implementing security controls to strengthen user authentication mechanisms and access management within Windows environments. These hardening measures are essential for reducing attack surfaces and enforcing proper identity verification protocols.",
      "metadata": {
        "chapter_num": "4",
        "section_num": "4.5.3",
        "title": "Configure Account Policies and UAC Settings",
        "content_type": "video",
        "filename": "4.5.3_Configure_Account_Policies_and_UAC_Settings_[video].txt",
        "file_path": "/Users/basantabaral/CompTia/data_raw/04_Identity_and_Access_Management/4.5.3_Configure_Account_Policies_and_UAC_Settings_[video].txt",
        "word_count": 988,
        "has_content": true
      },
      "section_header": "Summary",
      "timestamp_range": "06:53-06:58"
    }
  ],
  "num_chunks": 10,
  "document_summary": "Configure Account Policies and UAC Settings (video): Let's go to Tools > Group Policy Management and right-click Default Domain Policy. Then, let's go to Computer Configuration > Policies > Window Settings > Security Settings > Account Policies > Password Policy. So, let's close this and go back to the Group Policy Management."
}