{
  "metadata": {
    "chapter_num": "4",
    "section_num": "4.6.3",
    "title": "Linux User Commands and Files",
    "content_type": "text",
    "filename": "4.6.3_Linux_User_Commands_and_Files_[text].txt",
    "file_path": "/Users/basantabaral/CompTia/data_raw/04_Identity_and_Access_Management/4.6.3_Linux_User_Commands_and_Files_[text].txt",
    "word_count": 924,
    "has_content": true
  },
  "full_content": "Security Pro 8.0 This lesson covers the following topics: User files User management commands User Files Linux is highly flexible regarding where user and group information is stored. The options for storing the data are: Local file system. LDAP-compliant database. Network Information System (NIS). NIS allows many Linux computers to share common user accounts, group accounts, and passwords. A Windows domain. File Description /etc/passwd The /etc/passwd file contains the user account information. Each user's data is stored in a single line on this file. There are two types of accounts in a Linux system: Standard accounts (these are user accounts). System user accounts (these are used by services). /etc/shadow In Linux, local user account names are stored in /etc/passwd. When a user logs in to a local interactive shell, the password is checked against a hash stored in /etc/shadow. There are corresponding entries in both files, and they must stay synchronized. The system provides password and user management utilities, allowing you to edit and keep the files synchronized. You can use the following commands to identify errors and synchronize the files: pwck verifies each line in the two files and identifies discrepancies. pwconv adds the necessary information to synchronize the files. Interactive login over a network is typically accomplished using Secure Shell (SSH). With SSH, the user can be authenticated using cryptographic keys instead of a password. A pluggable authentication module (PAM) is a package for enabling different authentication providers, such as smart-card log-in. The PAM framework can also be used to implement authentication to network directory services. /etc/group\tAs with Active Directory, groups can be used to simplify user access to network resources. The /etc/group file contains information about each group. File Description /etc/default/useradd The /etc/default/useradd file contains default values used by the useradd utility when creating a user account, including: Group ID. Home directory. Account expiration. Default shell. Secondary group membership. /etc/login.defs Values used for the group and user ID numbers. Parameters for password encryption in the shadow file. Password expiration values for user accounts. /etc/skel The /etc/skel directory contains a set of configuration file templates that are copied into a new user's home directory when it is created, including the following files: .bashrc .bash_logout .bash_profile .kshrc User Management Commands Although it is possible to edit the /etc/passwd and /etc/shadow files manually to manage user accounts, doing so can disable your system. Instead, use the following commands to manage user accounts: Command Command Function useradd Create a user account. The following options override the settings as found in /etc/default/useradd: -c adds a description for the account in the GECOS field of /etc/passwd. -d assigns an absolute pathname to a custom home directory location. -D displays the default values specified in the /etc/default/useradd file. -e specifies the date on which the user account will be disabled. -f specifies the number of days after a password expires until the account is permanently disabled. -M defines the secondary group membership. -m creates the user's home directory (if it does not exist). -n does not create a group with the same name as the user (Red Hat and Fedora, respectively). -p defines the encrypted password. -r specifies that the user account is a system user. -s defines the default shell. -u assigns the user a custom UID. This is useful when assigning ownership of files and directories to a different user. passwd passwd (without a username or options) changes the current user's password. Users can change their own passwords. The root user can execute all other passwd commands. -S username displays the status of the user account. LK indicates that the user account is locked, and PS indicates the user account has a password. -l disables (locks) an account. This command inserts a !! before the password in the /etc/shadow file, effectively disabling the account. -u enables (unlocks) an account. -d removes the password from an account. -n sets the minimum days before a password can be changed. -x sets the number of days before a user must change the password (password expiration time). -w sets the number of days before the password expires that the user is warned. -t sets the number of days following the password expiration that the account will be disabled. usermod Used to modify an existing user account; usermod uses several of the same switches as useradd. Be aware of the following switches: -c changes the description for the account. -l renames a user account. -L locks the user account. This command inserts a ! before the password in the /etc/shadow file, effectively disabling the account. -U unlocks the user account. userdel userdel [username] (without options) removes the user account. -r removes the user's home directory. -f forces removing the user account even when the user is logged into the system. If you are logged in as the root user, the commands in the table can be run by typing the applicable command and its options. However, if you are not logged in as the root user, you must use the sudo or su command to gain the permissions required. For example, to create a new user named Kim Sanders, you would run: sudo useradd -c \"Kim Sanders\" -m ksanders",
  "chunks": [
    {
      "chunk_id": "4.6.3_chunk_1",
      "content": "Security Pro 8.0",
      "summary": "The CompTIA Security+ course introduces fundamental security concepts essential for protecting information systems and data. Key topics include risk management, threat detection, incident response, and security architecture, along with practical applications such as implementing security controls and compliance measures. This foundational knowledge equips learners to effectively safeguard networks and respond to security incidents in various environments.",
      "metadata": {
        "chapter_num": "4",
        "section_num": "4.6.3",
        "title": "Linux User Commands and Files",
        "content_type": "text",
        "filename": "4.6.3_Linux_User_Commands_and_Files_[text].txt",
        "file_path": "/Users/basantabaral/CompTia/data_raw/04_Identity_and_Access_Management/4.6.3_Linux_User_Commands_and_Files_[text].txt",
        "word_count": 924,
        "has_content": true
      },
      "section_header": "Introduction",
      "timestamp_range": null
    },
    {
      "chunk_id": "4.6.3_chunk_2",
      "content": "This lesson covers the following topics: User files User management commands User Files Linux is highly flexible regarding where user and group information is stored. The options for storing the data are: Local file system. LDAP-compliant database. Network Information System (NIS). NIS allows many Linux computers to share common user accounts, group accounts, and passwords. A Windows domain.",
      "summary": "This lesson focuses on managing user files and user accounts in Linux, highlighting the flexibility of data storage options such as the local file system, LDAP-compliant databases, and Network Information System (NIS). NIS facilitates the sharing of user and group accounts across multiple Linux systems, enhancing administrative efficiency. Understanding these commands and storage methods is crucial for effective user management in a Linux environment.",
      "metadata": {
        "chapter_num": "4",
        "section_num": "4.6.3",
        "title": "Linux User Commands and Files",
        "content_type": "text",
        "filename": "4.6.3_Linux_User_Commands_and_Files_[text].txt",
        "file_path": "/Users/basantabaral/CompTia/data_raw/04_Identity_and_Access_Management/4.6.3_Linux_User_Commands_and_Files_[text].txt",
        "word_count": 924,
        "has_content": true
      },
      "section_header": "4.6.3 Linux User Commands and Files",
      "timestamp_range": null
    },
    {
      "chunk_id": "4.6.3_chunk_3",
      "content": "File Description /etc/passwd The /etc/passwd file contains the user account information. Each user's data is stored in a single line on this file. There are two types of accounts in a Linux system: Standard accounts (these are user accounts). System user accounts (these are used by services). /etc/shadow In Linux, local user account names are stored in /etc/passwd. When a user logs in to a local interactive shell, the password is checked against a hash stored in /etc/shadow. There are corresponding entries in both files, and they must stay synchronized. The system provides password and user management utilities, allowing you to edit and keep the files synchronized. You can use the following commands to identify errors and synchronize the files: pwck verifies each line in the two files and identifies discrepancies. pwconv adds the necessary information to synchronize the files. Interactive login over a network is typically accomplished using Secure Shell (SSH). With SSH, the user can be authenticated using cryptographic keys instead of a password. A pluggable authentication module (PAM) is a package for enabling different authentication providers, such as smart-card log-in. The PAM framework can also be used to implement authentication to network directory services. /etc/group\tAs with Active Directory, groups can be used to simplify user access to network resources. The /etc/group file contains information about each group.",
      "summary": "The CompTIA Security+ course covers essential Linux file management for user accounts, focusing on the /etc/passwd and /etc/shadow files, which store user information and password hashes, respectively. It emphasizes the importance of synchronizing these files using utilities like pwck and pwconv, and highlights the use of Secure Shell (SSH) for secure network logins, along with the Pluggable Authentication Module (PAM) for flexible authentication methods. Additionally, the /etc/group file is discussed as a means to manage user access to network resources efficiently.",
      "metadata": {
        "chapter_num": "4",
        "section_num": "4.6.3",
        "title": "Linux User Commands and Files",
        "content_type": "text",
        "filename": "4.6.3_Linux_User_Commands_and_Files_[text].txt",
        "file_path": "/Users/basantabaral/CompTia/data_raw/04_Identity_and_Access_Management/4.6.3_Linux_User_Commands_and_Files_[text].txt",
        "word_count": 924,
        "has_content": true
      },
      "section_header": "When files are stored in the local file system, the following files are used:",
      "timestamp_range": null
    },
    {
      "chunk_id": "4.6.3_chunk_4",
      "content": "File Description /etc/default/useradd The /etc/default/useradd file contains default values used by the useradd utility when creating a user account, including: Group ID. Home directory. Account expiration. Default shell. Secondary group membership. /etc/login.defs",
      "summary": "The CompTIA Security+ course emphasizes the importance of understanding key configuration files in user account management, specifically the /etc/default/useradd and /etc/login.defs files. The /etc/default/useradd file sets default parameters for new user accounts, such as group ID, home directory, account expiration, default shell, and secondary group memberships. Familiarity with these files is crucial for ensuring secure and efficient user account creation and management in a Linux environment.",
      "metadata": {
        "chapter_num": "4",
        "section_num": "4.6.3",
        "title": "Linux User Commands and Files",
        "content_type": "text",
        "filename": "4.6.3_Linux_User_Commands_and_Files_[text].txt",
        "file_path": "/Users/basantabaral/CompTia/data_raw/04_Identity_and_Access_Management/4.6.3_Linux_User_Commands_and_Files_[text].txt",
        "word_count": 924,
        "has_content": true
      },
      "section_header": "Be aware of the following configuration files when managing user accounts:",
      "timestamp_range": null
    },
    {
      "chunk_id": "4.6.3_chunk_5",
      "content": "Values used for the group and user ID numbers. Parameters for password encryption in the shadow file. Password expiration values for user accounts. /etc/skel The /etc/skel directory contains a set of configuration file templates that are copied into a new user's home directory when it is created, including the following files: .bashrc .bash_logout .bash_profile .kshrc User Management Commands Although it is possible to edit the /etc/passwd and /etc/shadow files manually to manage user accounts, doing so can disable your system. Instead, use the following commands to manage user accounts: Command Command Function useradd Create a user account. The following options override the settings as found in /etc/default/useradd: -c adds a description for the account in the GECOS field of /etc/passwd. -d assigns an absolute pathname to a custom home directory location. -D displays the default values specified in the /etc/default/useradd file. -e specifies the date on which the user account will be disabled. -f specifies the number of days after a password expires until the account is permanently disabled. -M defines the secondary group membership. -m creates the user's home directory (if it does not exist). -n does not create a group with the same name as the user (Red Hat and Fedora, respectively). -p defines the encrypted password. -r specifies that the user account is a system user. -s defines the default shell. -u assigns the user a custom UID. This is useful when assigning ownership of files and directories to a different user. passwd",
      "summary": "The /etc/login.defs file in Linux systems defines critical parameters for user account management, including user and group ID numbers, password encryption settings, and expiration values. The /etc/skel directory provides template files for new user home directories, while user management commands like `useradd` allow for safe and efficient creation and modification of user accounts without directly editing sensitive files. Understanding these components is essential for maintaining secure and organized user management in a Linux environment.",
      "metadata": {
        "chapter_num": "4",
        "section_num": "4.6.3",
        "title": "Linux User Commands and Files",
        "content_type": "text",
        "filename": "4.6.3_Linux_User_Commands_and_Files_[text].txt",
        "file_path": "/Users/basantabaral/CompTia/data_raw/04_Identity_and_Access_Management/4.6.3_Linux_User_Commands_and_Files_[text].txt",
        "word_count": 924,
        "has_content": true
      },
      "section_header": "The /etc/login.defs file contains:",
      "timestamp_range": null
    },
    {
      "chunk_id": "4.6.3_chunk_6",
      "content": "passwd (without a username or options) changes the current user's password. Users can change their own passwords. The root user can execute all other passwd commands.",
      "summary": "The \"passwd\" command allows users to change their own passwords, enhancing account security by enabling personal password management. The root user has the authority to execute additional password-related commands, providing administrative control over user accounts. This functionality is essential for maintaining secure access to systems and protecting sensitive information.",
      "metadata": {
        "chapter_num": "4",
        "section_num": "4.6.3",
        "title": "Linux User Commands and Files",
        "content_type": "text",
        "filename": "4.6.3_Linux_User_Commands_and_Files_[text].txt",
        "file_path": "/Users/basantabaral/CompTia/data_raw/04_Identity_and_Access_Management/4.6.3_Linux_User_Commands_and_Files_[text].txt",
        "word_count": 924,
        "has_content": true
      },
      "section_header": "Assign or change a password for a user:",
      "timestamp_range": null
    },
    {
      "chunk_id": "4.6.3_chunk_7",
      "content": "-S username displays the status of the user account. LK indicates that the user account is locked, and PS indicates the user account has a password. -l disables (locks) an account. This command inserts a !! before the password in the /etc/shadow file, effectively disabling the account. -u enables (unlocks) an account. -d removes the password from an account. -n sets the minimum days before a password can be changed. -x sets the number of days before a user must change the password (password expiration time). -w sets the number of days before the password expires that the user is warned. -t sets the number of days following the password expiration that the account will be disabled. usermod Used to modify an existing user account; usermod uses several of the same switches as useradd. Be aware of the following switches: -c changes the description for the account. -l renames a user account. -L locks the user account. This command inserts a ! before the password in the /etc/shadow file, effectively disabling the account. -U unlocks the user account. userdel",
      "summary": "The CompTIA Security+ course covers essential user account management commands in Linux, focusing on the implications of account status indicators like LK (locked) and PS (password set). Key commands include usermod for modifying accounts, with options to lock, unlock, and change password settings, as well as userdel for account deletion. Understanding these commands is crucial for maintaining security and managing user access effectively in a system environment.",
      "metadata": {
        "chapter_num": "4",
        "section_num": "4.6.3",
        "title": "Linux User Commands and Files",
        "content_type": "text",
        "filename": "4.6.3_Linux_User_Commands_and_Files_[text].txt",
        "file_path": "/Users/basantabaral/CompTia/data_raw/04_Identity_and_Access_Management/4.6.3_Linux_User_Commands_and_Files_[text].txt",
        "word_count": 924,
        "has_content": true
      },
      "section_header": "Be aware of the following options:",
      "timestamp_range": null
    },
    {
      "chunk_id": "4.6.3_chunk_8",
      "content": "userdel [username] (without options) removes the user account. -r removes the user's home directory. -f forces removing the user account even when the user is logged into the system. If you are logged in as the root user, the commands in the table can be run by typing the applicable command and its options. However, if you are not logged in as the root user, you must use the sudo or su command to gain the permissions required. For example, to create a new user named Kim Sanders, you would run: sudo useradd -c \"Kim Sanders\" -m ksanders",
      "summary": "The CompTIA Security+ course covers user account management, emphasizing the command-line utility for removing user accounts in a Linux environment. Key commands include `userdel` for account removal, with options to delete home directories and force removal of logged-in users. It also highlights the necessity of root or elevated permissions using `sudo` or `su` for executing these commands, ensuring secure and proper user management practices.",
      "metadata": {
        "chapter_num": "4",
        "section_num": "4.6.3",
        "title": "Linux User Commands and Files",
        "content_type": "text",
        "filename": "4.6.3_Linux_User_Commands_and_Files_[text].txt",
        "file_path": "/Users/basantabaral/CompTia/data_raw/04_Identity_and_Access_Management/4.6.3_Linux_User_Commands_and_Files_[text].txt",
        "word_count": 924,
        "has_content": true
      },
      "section_header": "Remove the user from the system. Be aware of the following options:",
      "timestamp_range": null
    }
  ],
  "num_chunks": 8
}