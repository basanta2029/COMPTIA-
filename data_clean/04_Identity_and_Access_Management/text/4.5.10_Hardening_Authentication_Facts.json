{
  "metadata": {
    "chapter_num": "4",
    "section_num": "4.5.10",
    "title": "Hardening Authentication Facts",
    "content_type": "text",
    "filename": "4.5.10_Hardening_Authentication_Facts_[text].txt",
    "file_path": "/Users/basantabaral/CompTia/data_raw/04_Identity_and_Access_Management/4.5.10_Hardening_Authentication_Facts_[text].txt",
    "word_count": 1459,
    "has_content": true
  },
  "full_content": "Security Pro 8.0 This lesson covers the following topics: Authentication-related indicators of compromise Hardening authentication methods Authentication-Related Indicators of Compromise A threat actor often exploits an existing account to achieve objectives. The following indicators can reveal suspicious account behavior: Account lockoutâ€”the system has prevented access to the account because too many failed authentication attempts have been made. Lockout could also mean the user's password no longer works because the threat actor changed it. Concurrent session usage indicates that the threat actor has obtained the account credentials and is signed in on another workstation or over a remote access connection. Impossible travel indicates that the threat actor is attempting to use remote access to sign in to an account from a geographic location they would not have physically been able to move to since their last sign-in. Hardening Authentication Methods Hardening means to strengthen. You want to make sure your authentication methods are strong so that you can be confident that users accessing your network are who they say they are. The following table provides various methods for strengthening your authentication. Method Description Password policies Account policies help you control the composition and use of passwords. Password policies include: Enforce password history - This determines the number of unique new passwords that have to be used before an old password can be reused. This helps to prevent users from reusing any recent passwords. Maximum password age - This requires users to change their password after a given number of days. Minimum password age - This determines the number of days that a password must be used before the user can change it. This prevents users from reverting back to their original password immediately after they have changed it. Minimum password length - This identifies the minimum number of characters in a password. Password must meet complexity requirements - A complex password prevents using passwords that are easy to guess or crack. Complex passwords must meet the following minimum requirements: Cannot contain the user's account name or parts of the user's full name that exceed two consecutive characters Must be at least six characters in length English uppercase characters (A through Z) English lowercase characters (a through z) Base-10 digits (0 through 9) Non-alphabetic characters (for example, !, $, #, or %) Complexity requirements are enforced when passwords are changed or created. Multifactor authentication When possible, multifactor authentication should be used. This means using more than one method to authenticate your users. End users can be authenticated using three types of factors: Something you know Something you have Something you are Robust authentication processes use two or more of these factors. Account restrictions Account restrictions place restrictions on the use of a user account for login. For example, you can: Prohibit multiple concurrent logins Allow logins only during certain days and hours Allow logins only from specific computers Create expiration dates for user accounts for temporary users to prevent them from being used past a certain date Account monitoring Account monitoring can help you detect unusual or risky behavior. You should monitor for the following: Login activity. Suspicious logins for the user (spikes, logins at unusual time of day, and/or frequent or failed logins). Remote-access traffic. Account maintenance Delete an employee's account when the employee leaves the organization. Disable inactive accounts. Use automatic account expiration when applicable. Restrict remote access only to authorized clients (filtering by IP address). Limit remote access Allow remote access to the network only for those users who need it to perform their duties (not standard for all users). Do not allow remote access clients to connect directly to the internal network. Allow remote access clients to connect to a screened subnet and then monitor the traffic. Restrict remote access only to authorized clients. You can filter by IP address. Account lockout policies Account lockout disables a user account after a specified number of incorrect login attempts. Account lockout policies include: Account lockout duration - Specifies the number of minutes a locked-out account remains locked out before automatically becoming unlocked. When set to 0, an administrator must unlock the account. Account lockout threshold - Specifies the number of failed logon attempts that causes a user account to be locked out. Reset account lockout counter after - Specifies the number of minutes that must elapse after a failed logon attempt before the failed logon attempt counter is reset to 0 bad logon attempts. For example, if this value is set to 60 minutes and the account lockout threshold is set to 5, the user can enter up to four incorrect passwords within one hour without the account being locked. Account lockout can be used to prevent attackers from guessing passwords, but it can also be used maliciously to lock an account and prevent a valid user from logging in. Password managers Users often adopt poor credential management practices that are hard to control, such as using the same password for corporate networks and consumer websites. This makes enterprise network security vulnerable to data breaches from these websites. This risk is mitigated by a password manager: The user selects a password manager app or service. Most operating systems and browsers implement password managers. Examples include Windows Credential Manager and Apple's iCloud Keychain. If using a third-party password manager, the user installs a plug-in for their chosen browser. The user secures the password vault with a master password. The vault is likely to be stored in the cloud so that accounts can be accessed across multiple devices, but some password managers offer local storage only. When the user creates or updates an account, the password manager generates a random password. The parameters can be adjusted to meet whatever length and complexity policy is required by the site. When the user subsequently browses a site, the password manager validates the site's identity using its digital certificate and presents an option for the user to fill in the password. The main risks from password managers are the selection of a weak master password, compromising the vendor's cloud storage or systems, and impersonation attacks designed to trick the manager into filling a password to a spoofed site. Passwordless Passwordless means that the whole authentication system no longer processes knowledge-based factors. The FIDO2 with WebAuthn specifications provides a framework for passwordless authentication. It works as follows: The user chooses either a roaming authenticator, such as a security key, or a platform authenticator implemented by the device OS, such as Windows Hello or Face ID/Touch ID for macOS and iOS. The user configures a secure method or local gesture to confirm the presence and authenticates the device. This gesture could be a fingerprint, face recognition, or PIN. This credential is only ever validated locally by the authenticator. The user registers with a web application or service, called a relying party. The authenticator generates a public/private key pair for each new relying party. The user's client browser obtains the public key from the authenticator. It registers it to associate it with an account on the relying party. When presented with an authentication challenge, the user performs the local gesture to unlock the private key. The private key is used to sign a confirmation that the local gesture worked, which is then sent to the relying party. The relying party uses the public key to verify the signature and authenticate the account session. As with FIDO U2F, this provides similar security to smart card authentication but does not require accounts to have digital certificates and PKI, reducing the management burden. FIDO2 WebAuthn improves FIDO U2F by adding an application programming interface (API) that allows web applications to work without a password element for authentication. Most FIDO U2F authenticators should also support FIDO2/WebAuthn. For a passwordless system to be secure, the authenticator must be trusted and resistant to spoofing or cloning attacks. Attestation is a mechanism for an authenticator device, such as a FIDO security key or the TPM in a PC or laptop, to prove that it is a root of trust. Each security key is manufactured with an attestation and model ID. The authenticator uses this key during the registration step to send a report if the relying party requires attestation. The relying party can check the attestation report to verify that the authenticator is a known brand and model and supports whatever cryptographic properties the relying party demands. Note that the attestation key is not unique; if it were unique, it would be easy to identify individuals and be a severe threat to privacy. Instead, it identifies a particular brand and model.",
  "chunks": [
    {
      "chunk_id": "4.5.10_chunk_1",
      "content": "Security Pro 8.0",
      "summary": "Security Pro 8.0",
      "metadata": {
        "chapter_num": "4",
        "section_num": "4.5.10",
        "title": "Hardening Authentication Facts",
        "content_type": "text",
        "filename": "4.5.10_Hardening_Authentication_Facts_[text].txt",
        "file_path": "/Users/basantabaral/CompTia/data_raw/04_Identity_and_Access_Management/4.5.10_Hardening_Authentication_Facts_[text].txt",
        "word_count": 1459,
        "has_content": true
      },
      "section_header": "Introduction",
      "timestamp_range": null
    },
    {
      "chunk_id": "4.5.10_chunk_2",
      "content": "This lesson covers the following topics: Authentication-related indicators of compromise Hardening authentication methods Authentication-Related Indicators of Compromise A threat actor often exploits an existing account to achieve objectives. The following indicators can reveal suspicious account behavior: Account lockoutâ€”the system has prevented access to the account because too many failed authentication attempts have been made. Lockout could also mean the user's password no longer works because the threat actor changed it. Concurrent session usage indicates that the threat actor has obtained the account credentials and is signed in on another workstation or over a remote access connection. Impossible travel indicates that the threat actor is attempting to use remote access to sign in to an account from a geographic location they would not have physically been able to move to since their last sign-in. Hardening Authentication Methods Hardening means to strengthen. You want to make sure your authentication methods are strong so that you can be confident that users accessing your network are who they say they are. The following table provides various methods for strengthening your authentication. Method Description Password policies Account policies help you control the composition and use of passwords. Password policies include: Enforce password history - This determines the number of unique new passwords that have to be used before an old password can be reused. This helps to prevent users from reusing any recent passwords. Maximum password age - This requires users to change their password after a given number of days. Minimum password age - This determines the number of days that a password must be used before the user can change it. This prevents users from reverting back to their original password immediately after they have changed it. Minimum password length - This identifies the minimum number of characters in a password. Password must meet complexity requirements - A complex password prevents using passwords that are easy to guess or crack. Complex passwords must meet the following minimum requirements: Cannot contain the user's account name or parts of the user's full name that exceed two consecutive characters Must be at least six characters in length",
      "summary": "4.5.10 Hardening Authentication Facts: This lesson covers the following topics: Authentication-related indicators of compromise Hardening authentication methods Authentication-Related Indicators of Compromise A threat actor often exploits an existing account to achieve objectives. You want to make sure your authentication methods are strong so that you can be confident that users accessing your network are who they say they are.",
      "metadata": {
        "chapter_num": "4",
        "section_num": "4.5.10",
        "title": "Hardening Authentication Facts",
        "content_type": "text",
        "filename": "4.5.10_Hardening_Authentication_Facts_[text].txt",
        "file_path": "/Users/basantabaral/CompTia/data_raw/04_Identity_and_Access_Management/4.5.10_Hardening_Authentication_Facts_[text].txt",
        "word_count": 1459,
        "has_content": true
      },
      "section_header": "4.5.10 Hardening Authentication Facts",
      "timestamp_range": null
    },
    {
      "chunk_id": "4.5.10_chunk_3",
      "content": "English uppercase characters (A through Z) English lowercase characters (a through z) Base-10 digits (0 through 9) Non-alphabetic characters (for example, !, $, #, or %) Complexity requirements are enforced when passwords are changed or created. Multifactor authentication When possible, multifactor authentication should be used. This means using more than one method to authenticate your users. End users can be authenticated using three types of factors: Something you know Something you have Something you are Robust authentication processes use two or more of these factors. Account restrictions Account restrictions place restrictions on the use of a user account for login. For example, you can: Prohibit multiple concurrent logins Allow logins only during certain days and hours Allow logins only from specific computers Create expiration dates for user accounts for temporary users to prevent them from being used past a certain date Account monitoring Account monitoring can help you detect unusual or risky behavior. You should monitor for the following: Login activity. Suspicious logins for the user (spikes, logins at unusual time of day, and/or frequent or failed logins). Remote-access traffic. Account maintenance",
      "summary": "Must contain characters from three of the following four categories:: English uppercase characters (A through Z) English lowercase characters (a through z) Base-10 digits (0 through 9) Non-alphabetic characters (for example,. End users can be authenticated using three types of factors: Something you know Something you have Something you are Robust authentication processes use two or more of these factors.",
      "metadata": {
        "chapter_num": "4",
        "section_num": "4.5.10",
        "title": "Hardening Authentication Facts",
        "content_type": "text",
        "filename": "4.5.10_Hardening_Authentication_Facts_[text].txt",
        "file_path": "/Users/basantabaral/CompTia/data_raw/04_Identity_and_Access_Management/4.5.10_Hardening_Authentication_Facts_[text].txt",
        "word_count": 1459,
        "has_content": true
      },
      "section_header": "Must contain characters from three of the following four categories:",
      "timestamp_range": null
    },
    {
      "chunk_id": "4.5.10_chunk_4",
      "content": "Delete an employee's account when the employee leaves the organization. Disable inactive accounts. Use automatic account expiration when applicable. Restrict remote access only to authorized clients (filtering by IP address). Limit remote access",
      "summary": "The following list provides best practices for account maintenance:: Delete an employee's account when the employee leaves the organization. Restrict remote access only to authorized clients (filtering by IP address).",
      "metadata": {
        "chapter_num": "4",
        "section_num": "4.5.10",
        "title": "Hardening Authentication Facts",
        "content_type": "text",
        "filename": "4.5.10_Hardening_Authentication_Facts_[text].txt",
        "file_path": "/Users/basantabaral/CompTia/data_raw/04_Identity_and_Access_Management/4.5.10_Hardening_Authentication_Facts_[text].txt",
        "word_count": 1459,
        "has_content": true
      },
      "section_header": "The following list provides best practices for account maintenance:",
      "timestamp_range": null
    },
    {
      "chunk_id": "4.5.10_chunk_5",
      "content": "Allow remote access to the network only for those users who need it to perform their duties (not standard for all users). Do not allow remote access clients to connect directly to the internal network. Allow remote access clients to connect to a screened subnet and then monitor the traffic. Restrict remote access only to authorized clients. You can filter by IP address. Account lockout policies Account lockout disables a user account after a specified number of incorrect login attempts. Account lockout policies include: Account lockout duration - Specifies the number of minutes a locked-out account remains locked out before automatically becoming unlocked. When set to 0, an administrator must unlock the account. Account lockout threshold - Specifies the number of failed logon attempts that causes a user account to be locked out. Reset account lockout counter after - Specifies the number of minutes that must elapse after a failed logon attempt before the failed logon attempt counter is reset to 0 bad logon attempts. For example, if this value is set to 60 minutes and the account lockout threshold is set to 5, the user can enter up to four incorrect passwords within one hour without the account being locked. Account lockout can be used to prevent attackers from guessing passwords, but it can also be used maliciously to lock an account and prevent a valid user from logging in. Password managers Users often adopt poor credential management practices that are hard to control, such as using the same password for corporate networks and consumer websites. This makes enterprise network security vulnerable to data breaches from these websites. This risk is mitigated by a password manager: The user selects a password manager app or service. Most operating systems and browsers implement password managers. Examples include Windows Credential Manager and Apple's iCloud Keychain. If using a third-party password manager, the user installs a plug-in for their chosen browser. The user secures the password vault with a master password. The vault is likely to be stored in the cloud so that accounts can be accessed across multiple devices, but some password managers offer local storage only. When the user creates or updates an account, the password manager generates a random password. The parameters can be adjusted to meet whatever length and complexity policy is required by the site. When the user subsequently browses a site, the password manager validates the site's identity using its digital certificate and presents an option for the user to fill in the password. The main risks from password managers are the selection of a weak master password, compromising the vendor's cloud storage or systems, and impersonation attacks designed to trick the manager into filling a password to a spoofed site. Passwordless Passwordless means that the whole authentication system no longer processes knowledge-based factors. The FIDO2 with WebAuthn specifications provides a framework for passwordless authentication. It works as follows: The user chooses either a roaming authenticator, such as a security key, or a platform authenticator implemented by the device OS, such as Windows Hello or Face ID/Touch ID for macOS and iOS. The user configures a secure method or local gesture to confirm the presence and authenticates the device. This gesture could be a fingerprint, face recognition, or PIN. This credential is only ever validated locally by the authenticator. The user registers with a web application or service, called a relying party. The authenticator generates a public/private key pair for each new relying party. The user's client browser obtains the public key from the authenticator. It registers it to associate it with an account on the relying party. When presented with an authentication challenge, the user performs the local gesture to unlock the private key. The private key is used to sign a confirmation that the local gesture worked, which is then sent to the relying party. The relying party uses the public key to verify the signature and authenticate the account session. As with FIDO U2F, this provides similar security to smart card authentication but does not require accounts to have digital certificates and PKI, reducing the management burden. FIDO2 WebAuthn improves FIDO U2F by adding an application programming interface (API) that allows web applications to work without a password element for authentication. Most FIDO U2F authenticators should also support FIDO2/WebAuthn. For a passwordless system to be secure, the authenticator must be trusted and resistant to spoofing or cloning attacks. Attestation is a mechanism for an authenticator device, such as a FIDO security key or the TPM in a PC or laptop, to prove that it is a root of trust. Each security key is manufactured with an attestation and model ID. The authenticator uses this key during the registration step to send a report if the relying party requires attestation. The relying party can check the attestation report to verify that the authenticator is a known brand and model and supports whatever cryptographic properties the relying party demands. Note that the attestation key is not unique; if it were unique, it would be easy to identify individuals and be a severe threat to privacy. Instead, it identifies a particular brand and model.",
      "summary": "The following precautions should be taken when administering remote access:: Password managers Users often adopt poor credential management practices that are hard to control, such as using the same password for corporate networks and consumer websites. This makes enterprise network security vulnerable to data breaches from these websites.",
      "metadata": {
        "chapter_num": "4",
        "section_num": "4.5.10",
        "title": "Hardening Authentication Facts",
        "content_type": "text",
        "filename": "4.5.10_Hardening_Authentication_Facts_[text].txt",
        "file_path": "/Users/basantabaral/CompTia/data_raw/04_Identity_and_Access_Management/4.5.10_Hardening_Authentication_Facts_[text].txt",
        "word_count": 1459,
        "has_content": true
      },
      "section_header": "The following precautions should be taken when administering remote access:",
      "timestamp_range": null
    }
  ],
  "num_chunks": 5,
  "document_summary": "Hardening Authentication Facts (text): You want to make sure your authentication methods are strong so that you can be confident that users accessing your network are who they say they are. Password managers Users often adopt poor credential management practices that are hard to control, such as using the same password for corporate networks and consumer websites. This makes enterprise network security vulnerable to data breaches from these websites."
}