{
  "metadata": {
    "chapter_num": "4",
    "section_num": "4.3.3",
    "title": "Authorization Facts",
    "content_type": "text",
    "filename": "4.3.3_Authorization_Facts_[text].txt",
    "file_path": "/Users/basantabaral/CompTia/data_raw/04_Identity_and_Access_Management/4.3.3_Authorization_Facts_[text].txt",
    "word_count": 1573,
    "has_content": true
  },
  "full_content": "Security Pro 8.0 Authorization is the process of determining what rights and privileges a particular entity should have on available resources and then enforcing those rights. Authorization Permissions, privileges, and roles Access control lists (ACLs) Authorization with single sign-on Authorization Examine the access token Learning Outcomes How is authorization different from authentication? How does an access control list (ACL) help to increase network security? What is the difference between a Discretionary access control list (DACL) and a system access control list (SACL)? Key Terms Term Definition Authorization\tGranting a user on the computer system the right to use a resource. Access control list (ACL)\tA collection of access control entries that determines which users are allowed or denied access to an object and the privileges given to that user. Effective permissions\tAccess rights are cumulative, giving the user combined permissions from multiple groups. Deny permissions\tAlways override Allow permissions. Certification Exam Objectives Exam Objective CompTIA Security+ SY0-701 Authentication, Authorization, and Accounting (AAA) Authorization models Obfuscation Tokenization Access control Access control list (ACL) Permissions Permission assignments and implications Single sign-on (SSO) Access controls Discretionary TestOut Security Pro 5.2.1 Access control list (ACL) 4.6.8 Access control Permissions, Privileges, and Roles A crucial part of any security administrator's job is to control access to resources. For example, with file system security, each object in the file system has an access control list (ACL) associated with it. The ACL contains a list of accounts (principals) allowed to access the resource and the permissions they have over it. The order of ACEs in the ACL is essential in determining effective permissions for a given account. ACLs can be enforced by a file system that supports permissions, such as NTFS, ext3/ext4, or ZFS. Types of permissions are described in the table below. Permission Type Description Effective permissions\tAccess rights (permissions) are cumulative. If you are a member of two groups with different permissions, you have the combined permissions of both groups (this is known as effective permissions). Effective permissions are the combination of inherited permissions and explicit permissions. Deny permissions\tDeny permissions always override Allow permissions. For example, if a user belongs to two groups and specific permission is allowed for one group and denied for the other, the permission is denied. However, the exception to this rule comes with inherited permissions. If an object has an explicit Allow permission entry, inherited Deny permissions do not prevent access to the object. Explicit permissions override inherited permissions, including Deny permissions. Cumulative permissions The following suggestions will help you plan permissions and mitigate issues related to cumulative permissions: Identify the users and their access needs (the actions each user needs to be able to perform). Create a group for each type of user with similar needs. Then, make the users members of the appropriate group. Assign each group (not the user) the permissions appropriate to the group's data access needs. Grant only the necessary permissions. Take inheritance into account as you assign permissions. Inheritance means permissions granted to a parent container object flow down to child objects within the container. Set permissions as high as possible on the parent container and allow each child container to inherit the permissions. Override inheritance on a case-by-case basis when necessary. Access Control Lists (ACLs) Access control lists (ACLs) in computer systems and networks are used to enforce access control policies. An ACL is a list of rules or entries that specify which users or groups are allowed or denied access to specific resources or perform certain actions. In networks, ACLs are associated with routers, firewalls, or similar devices and define rules that determine how network traffic is filtered or forwarded based on criteria like source IP addresses, destination IP addresses, ports, or protocols. ACLs can help to control network access and protect against unauthorized or malicious activities. ACLs control access to files, directories, or system resources in operating systems and file systems. Each access control entry (ACE) typically contains a user or group identifier and associated permissions controlling actions that are allowed or denied. These permissions often include read, write, execute, and sometimes more granular limits such as modify, delete, or list. While ACLs offer flexibility and control, managing complex access control policies with numerous ACL entries can become challenging. Complexity increases the risk of misconfigurations. Therefore, proper planning, periodic reviews, and best practice configurations are essential when implementing and maintaining ACLs. For example,  Discretionary access control (DAC) is based on the primacy of the resource owner. In a DAC model, every resource has an owner. The owner creates a file or service, although ownership can be assigned to another user. The owner has full control over the resource, and they can modify its access control list (ACL) to grant rights to others. An access control system ensures that an information system meets the goals of the CIA triad. Access control governs how subjects/principals may interact with objects. Subjects are people, devices, software processes, or any other system that can request and be granted access to a resource. Objects are the resources. An object could be a network, server, database, app, or file. Subjects are assigned rights or permissions on resources. A security principal is an object that can be given permissions to an object. Security principals include user accounts, computer accounts, and security group accounts. Each security principal is given a unique identification number called a Security ID (SID). When a security principal logs on, an access token is generated. The access token controls access to resources and contains the SID for the user or computer, for all groups the user or computer is a member of, and the user rights granted to the security principal. When the security principal tries to access a resource or take action, information in the access token is checked. For example, when a user tries to access a file, the access token is checked for the user's SID and all groups. The SIDs are then compared to those in the object's DACL to identify permissions that apply. On a Microsoft system, the access token is only generated during authentication. Changes to group memberships or user rights do not occur until the user logs on again and a new access token is created. Authorization with Single Sign-on After completing authentication, the client can decrypt the Ticket Granting Service (TGS) session key but not the Ticket Granting Ticket (TGT). This establishes that the client and key distribution center(KDC) know the same shared secret and that the client cannot interfere with the TGT. To access resources within the domain, the principal requests a service ticket (a token that grants access to a target application server). This process of granting service tickets is handled by the TGS. The principal sends the TGS a copy of its TGT and the name of the application server it wishes to access, plus an authenticator consisting of a time-stamped client ID encrypted using the TGS session key. The TGS should be able to decrypt both messages using the KDC's secret key for the first and the TGS session key for the second. This confirms that the request is genuine. It also checks that the ticket has not expired and has not been used before (replay attack). The TGS service responds with the following: A Service session key — is used between the client and the application server. This is encrypted with the TGS session key. A Service ticket — contains information about the principal, such as a time stamp, system IP address, Security Identifier (SID) and the SIDs of groups to which it belongs, and the service session key. This is encrypted using the application server's secret key. The principal forwards the service ticket, which it cannot decrypt, to the application server and adds another time-stamped authenticator, which is encrypted using the service session key. Kerberos Ticket Granting Service Images © 123RF.com Description The application server decrypts the service ticket to obtain the service session key using its secret key, confirming that the principal has sent it an untampered message. It then decrypts the authenticator using the service session key. Optionally, the application server responds to the principal with the time stamp used in the authenticator, which is encrypted using the service session key. The principal decrypts the time stamp, verifies that it matches the value already sent, and concludes that the application server is trustworthy. This means that the server is authenticated to the principal (referred to as mutual authentication). This prevents an on-path attack, where a malicious user could intercept communications between the principal and server. The server now responds to access requests (assuming they conform to the server's access control list). One of the noted drawbacks of Kerberos is that the KDC represents a single point of failure for the network. In practice, backup KDC servers can be implemented (for example, Active Directory supports multiple domain controllers, each of which is running the KDC service).",
  "chunks": [
    {
      "chunk_id": "4.3.3_chunk_1",
      "content": "Security Pro 8.0",
      "summary": "The CompTIA Security+ course introduces essential security concepts, emphasizing the importance of risk management, threat analysis, and security controls. Key topics include network security, compliance, operational security, and incident response, providing a comprehensive foundation for understanding cybersecurity principles. Practical applications focus on implementing security measures and best practices to protect organizational assets and data.",
      "metadata": {
        "chapter_num": "4",
        "section_num": "4.3.3",
        "title": "Authorization Facts",
        "content_type": "text",
        "filename": "4.3.3_Authorization_Facts_[text].txt",
        "file_path": "/Users/basantabaral/CompTia/data_raw/04_Identity_and_Access_Management/4.3.3_Authorization_Facts_[text].txt",
        "word_count": 1573,
        "has_content": true
      },
      "section_header": "Introduction",
      "timestamp_range": null
    },
    {
      "chunk_id": "4.3.3_chunk_2",
      "content": "Authorization is the process of determining what rights and privileges a particular entity should have on available resources and then enforcing those rights.",
      "summary": "Authorization is a critical security process that involves assessing and enforcing the rights and privileges assigned to users or entities regarding access to resources. It ensures that individuals can only perform actions and access information that align with their designated roles, thereby enhancing security and minimizing the risk of unauthorized access. Practical applications include role-based access control (RBAC) and implementing policies that govern user permissions within an organization.",
      "metadata": {
        "chapter_num": "4",
        "section_num": "4.3.3",
        "title": "Authorization Facts",
        "content_type": "text",
        "filename": "4.3.3_Authorization_Facts_[text].txt",
        "file_path": "/Users/basantabaral/CompTia/data_raw/04_Identity_and_Access_Management/4.3.3_Authorization_Facts_[text].txt",
        "word_count": 1573,
        "has_content": true
      },
      "section_header": "4.3.3 Authorization Facts",
      "timestamp_range": null
    },
    {
      "chunk_id": "4.3.3_chunk_3",
      "content": "Authorization Permissions, privileges, and roles Access control lists (ACLs) Authorization with single sign-on Authorization",
      "summary": "This lesson focuses on the key concepts of authorization in cybersecurity, including the distinction between permissions, privileges, and roles. It explores the implementation of Access Control Lists (ACLs) and the benefits of using single sign-on (SSO) for streamlined access management. Understanding these elements is crucial for effectively managing user access and enhancing organizational security.",
      "metadata": {
        "chapter_num": "4",
        "section_num": "4.3.3",
        "title": "Authorization Facts",
        "content_type": "text",
        "filename": "4.3.3_Authorization_Facts_[text].txt",
        "file_path": "/Users/basantabaral/CompTia/data_raw/04_Identity_and_Access_Management/4.3.3_Authorization_Facts_[text].txt",
        "word_count": 1573,
        "has_content": true
      },
      "section_header": "This lesson covers the following topics:",
      "timestamp_range": null
    },
    {
      "chunk_id": "4.3.3_chunk_4",
      "content": "Examine the access token Learning Outcomes",
      "summary": "In this lesson, you will explore access tokens, which are crucial for managing user permissions and authentication in a secure environment. Key concepts include understanding how access tokens function within operating systems, their role in granting or denying access to resources, and the implications for security policies. Practical applications involve analyzing access token attributes to enhance security measures and ensure proper user access control.",
      "metadata": {
        "chapter_num": "4",
        "section_num": "4.3.3",
        "title": "Authorization Facts",
        "content_type": "text",
        "filename": "4.3.3_Authorization_Facts_[text].txt",
        "file_path": "/Users/basantabaral/CompTia/data_raw/04_Identity_and_Access_Management/4.3.3_Authorization_Facts_[text].txt",
        "word_count": 1573,
        "has_content": true
      },
      "section_header": "In this lesson, you will learn to:",
      "timestamp_range": null
    },
    {
      "chunk_id": "4.3.3_chunk_5",
      "content": "How is authorization different from authentication? How does an access control list (ACL) help to increase network security? What is the difference between a Discretionary access control list (DACL) and a system access control list (SACL)? Key Terms",
      "summary": "This section of the CompTIA Security+ course distinguishes between authentication, which verifies identity, and authorization, which determines access rights. It emphasizes the role of access control lists (ACLs) in enhancing network security by specifying permissions for users and groups. Additionally, it clarifies the difference between Discretionary Access Control Lists (DACLs), which define user permissions, and System Access Control Lists (SACLs), which are used for auditing access attempts.",
      "metadata": {
        "chapter_num": "4",
        "section_num": "4.3.3",
        "title": "Authorization Facts",
        "content_type": "text",
        "filename": "4.3.3_Authorization_Facts_[text].txt",
        "file_path": "/Users/basantabaral/CompTia/data_raw/04_Identity_and_Access_Management/4.3.3_Authorization_Facts_[text].txt",
        "word_count": 1573,
        "has_content": true
      },
      "section_header": "As you study this lesson, answer the following questions:",
      "timestamp_range": null
    },
    {
      "chunk_id": "4.3.3_chunk_6",
      "content": "Term Definition Authorization\tGranting a user on the computer system the right to use a resource. Access control list (ACL)\tA collection of access control entries that determines which users are allowed or denied access to an object and the privileges given to that user. Effective permissions\tAccess rights are cumulative, giving the user combined permissions from multiple groups. Deny permissions\tAlways override Allow permissions. Certification Exam Objectives",
      "summary": "This section covers essential security concepts, including authorization, which involves granting users access to system resources, and access control lists (ACLs), which specify user permissions for objects. It also highlights effective permissions, where access rights are cumulative from multiple groups, and emphasizes that deny permissions take precedence over allow permissions. Understanding these terms is crucial for managing user access and ensuring system security in practical applications.",
      "metadata": {
        "chapter_num": "4",
        "section_num": "4.3.3",
        "title": "Authorization Facts",
        "content_type": "text",
        "filename": "4.3.3_Authorization_Facts_[text].txt",
        "file_path": "/Users/basantabaral/CompTia/data_raw/04_Identity_and_Access_Management/4.3.3_Authorization_Facts_[text].txt",
        "word_count": 1573,
        "has_content": true
      },
      "section_header": "The key terms for this lesson include:",
      "timestamp_range": null
    },
    {
      "chunk_id": "4.3.3_chunk_7",
      "content": "Exam Objective CompTIA Security+ SY0-701",
      "summary": "The CompTIA Security+ SY0-701 course covers essential security concepts, including risk management, threat analysis, and incident response. Key topics include network security, identity and access management, cryptography, and compliance, all aimed at equipping learners with practical skills to protect organizational assets. This course prepares candidates for the certification exam by emphasizing real-world applications and best practices in cybersecurity.",
      "metadata": {
        "chapter_num": "4",
        "section_num": "4.3.3",
        "title": "Authorization Facts",
        "content_type": "text",
        "filename": "4.3.3_Authorization_Facts_[text].txt",
        "file_path": "/Users/basantabaral/CompTia/data_raw/04_Identity_and_Access_Management/4.3.3_Authorization_Facts_[text].txt",
        "word_count": 1573,
        "has_content": true
      },
      "section_header": "This section helps you prepare for the following certification exam objectives:",
      "timestamp_range": null
    },
    {
      "chunk_id": "4.3.3_chunk_8",
      "content": "Authentication, Authorization, and Accounting (AAA) Authorization models",
      "summary": "The CompTIA Security+ course emphasizes the fundamental security concepts of Authentication, Authorization, and Accounting (AAA), which are critical for managing user access and ensuring data integrity. It covers various authorization models that dictate how permissions are granted and monitored, providing a framework for securing systems and resources. Practical applications include implementing access controls and auditing user activities to enhance organizational security.",
      "metadata": {
        "chapter_num": "4",
        "section_num": "4.3.3",
        "title": "Authorization Facts",
        "content_type": "text",
        "filename": "4.3.3_Authorization_Facts_[text].txt",
        "file_path": "/Users/basantabaral/CompTia/data_raw/04_Identity_and_Access_Management/4.3.3_Authorization_Facts_[text].txt",
        "word_count": 1573,
        "has_content": true
      },
      "section_header": "1.2 Summarize fundamental security concepts.",
      "timestamp_range": null
    },
    {
      "chunk_id": "4.3.3_chunk_9",
      "content": "Obfuscation Tokenization",
      "summary": "This section emphasizes the significance of employing suitable cryptographic solutions to protect sensitive data. Key concepts include obfuscation, which disguises data to prevent unauthorized access, and tokenization, which replaces sensitive information with non-sensitive equivalents to enhance security. Understanding and implementing these techniques are crucial for safeguarding information in various applications, ensuring compliance with regulations and mitigating risks.",
      "metadata": {
        "chapter_num": "4",
        "section_num": "4.3.3",
        "title": "Authorization Facts",
        "content_type": "text",
        "filename": "4.3.3_Authorization_Facts_[text].txt",
        "file_path": "/Users/basantabaral/CompTia/data_raw/04_Identity_and_Access_Management/4.3.3_Authorization_Facts_[text].txt",
        "word_count": 1573,
        "has_content": true
      },
      "section_header": "1.4 Explain the importance of using appropriate cryptographic solutions.",
      "timestamp_range": null
    },
    {
      "chunk_id": "4.3.3_chunk_10",
      "content": "Access control Access control list (ACL) Permissions",
      "summary": "Mitigation techniques, such as access control and access control lists (ACLs), are essential for securing an enterprise by regulating who can access specific resources and what actions they can perform. By implementing permissions effectively, organizations can minimize the risk of unauthorized access and data breaches, ensuring that sensitive information remains protected. These techniques are critical for maintaining the integrity and confidentiality of enterprise systems.",
      "metadata": {
        "chapter_num": "4",
        "section_num": "4.3.3",
        "title": "Authorization Facts",
        "content_type": "text",
        "filename": "4.3.3_Authorization_Facts_[text].txt",
        "file_path": "/Users/basantabaral/CompTia/data_raw/04_Identity_and_Access_Management/4.3.3_Authorization_Facts_[text].txt",
        "word_count": 1573,
        "has_content": true
      },
      "section_header": "2.5 Explain the purpose of mitigation techniques used to secure the enterprise.",
      "timestamp_range": null
    },
    {
      "chunk_id": "4.3.3_chunk_11",
      "content": "Permission assignments and implications Single sign-on (SSO) Access controls Discretionary TestOut Security Pro",
      "summary": "In this section, the course covers key concepts of identity and access management, including the implications of permission assignments and the implementation of access controls. It emphasizes the use of Single Sign-On (SSO) to streamline user authentication while maintaining security. Practical applications involve using tools like TestOut Security Pro to reinforce these concepts in real-world scenarios.",
      "metadata": {
        "chapter_num": "4",
        "section_num": "4.3.3",
        "title": "Authorization Facts",
        "content_type": "text",
        "filename": "4.3.3_Authorization_Facts_[text].txt",
        "file_path": "/Users/basantabaral/CompTia/data_raw/04_Identity_and_Access_Management/4.3.3_Authorization_Facts_[text].txt",
        "word_count": 1573,
        "has_content": true
      },
      "section_header": "4.6 Given a scenario, implement and maintain identity and access management.",
      "timestamp_range": null
    },
    {
      "chunk_id": "4.3.3_chunk_12",
      "content": "5.2.1 Access control list (ACL)",
      "summary": "Access control involves managing who can access resources within a system, primarily through mechanisms like Access Control Lists (ACLs). ACLs specify which users or groups have permissions to perform actions on specific resources, enhancing security by restricting access based on defined policies. Understanding and implementing ACLs is crucial for protecting sensitive data and ensuring compliance with security standards.",
      "metadata": {
        "chapter_num": "4",
        "section_num": "4.3.3",
        "title": "Authorization Facts",
        "content_type": "text",
        "filename": "4.3.3_Authorization_Facts_[text].txt",
        "file_path": "/Users/basantabaral/CompTia/data_raw/04_Identity_and_Access_Management/4.3.3_Authorization_Facts_[text].txt",
        "word_count": 1573,
        "has_content": true
      },
      "section_header": "2.5.2 Access control",
      "timestamp_range": null
    },
    {
      "chunk_id": "4.3.3_chunk_13",
      "content": "4.6.8 Access control",
      "summary": "Section 5.2.2 on Permissions covers the principles of access control, emphasizing the importance of defining user permissions to protect sensitive information. Key topics include the types of access controls (discretionary, mandatory, and role-based), the principle of least privilege, and the implementation of permissions to ensure that users have only the access necessary for their roles. Practical applications involve configuring user permissions in systems and applications to mitigate security risks and safeguard data integrity.",
      "metadata": {
        "chapter_num": "4",
        "section_num": "4.3.3",
        "title": "Authorization Facts",
        "content_type": "text",
        "filename": "4.3.3_Authorization_Facts_[text].txt",
        "file_path": "/Users/basantabaral/CompTia/data_raw/04_Identity_and_Access_Management/4.3.3_Authorization_Facts_[text].txt",
        "word_count": 1573,
        "has_content": true
      },
      "section_header": "5.2.2 Permissions",
      "timestamp_range": null
    },
    {
      "chunk_id": "4.3.3_chunk_14",
      "content": "Permissions, Privileges, and Roles A crucial part of any security administrator's job is to control access to resources. For example, with file system security, each object in the file system has an access control list (ACL) associated with it. The ACL contains a list of accounts (principals) allowed to access the resource and the permissions they have over it. The order of ACEs in the ACL is essential in determining effective permissions for a given account. ACLs can be enforced by a file system that supports permissions, such as NTFS, ext3/ext4, or ZFS. Types of permissions are described in the table below. Permission Type Description Effective permissions\tAccess rights (permissions) are cumulative. If you are a member of two groups with different permissions, you have the combined permissions of both groups (this is known as effective permissions). Effective permissions are the combination of inherited permissions and explicit permissions. Deny permissions\tDeny permissions always override Allow permissions. For example, if a user belongs to two groups and specific permission is allowed for one group and denied for the other, the permission is denied. However, the exception to this rule comes with inherited permissions. If an object has an explicit Allow permission entry, inherited Deny permissions do not prevent access to the object. Explicit permissions override inherited permissions, including Deny permissions. Cumulative permissions The following suggestions will help you plan permissions and mitigate issues related to cumulative permissions: Identify the users and their access needs (the actions each user needs to be able to perform). Create a group for each type of user with similar needs. Then, make the users members of the appropriate group. Assign each group (not the user) the permissions appropriate to the group's data access needs. Grant only the necessary permissions. Take inheritance into account as you assign permissions. Inheritance means permissions granted to a parent container object flow down to child objects within the container. Set permissions as high as possible on the parent container and allow each child container to inherit the permissions. Override inheritance on a case-by-case basis when necessary. Access Control Lists (ACLs) Access control lists (ACLs) in computer systems and networks are used to enforce access control policies. An ACL is a list of rules or entries that specify which users or groups are allowed or denied access to specific resources or perform certain actions. In networks, ACLs are associated with routers, firewalls, or similar devices and define rules that determine how network traffic is filtered or forwarded based on criteria like source IP addresses, destination IP addresses, ports, or protocols. ACLs can help to control network access and protect against unauthorized or malicious activities. ACLs control access to files, directories, or system resources in operating systems and file systems. Each access control entry (ACE) typically contains a user or group identifier and associated permissions controlling actions that are allowed or denied. These permissions often include read, write, execute, and sometimes more granular limits such as modify, delete, or list. While ACLs offer flexibility and control, managing complex access control policies with numerous ACL entries can become challenging. Complexity increases the risk of misconfigurations. Therefore, proper planning, periodic reviews, and best practice configurations are essential when implementing and maintaining ACLs. For example,  Discretionary access control (DAC) is based on the primacy of the resource owner. In a DAC model, every resource has an owner. The owner creates a file or service, although ownership can be assigned to another user. The owner has full control over the resource, and they can modify its access control list (ACL) to grant rights to others. An access control system ensures that an information system meets the goals of the CIA triad. Access control governs how subjects/principals may interact with objects. Subjects are people, devices, software processes, or any other system that can request and be granted access to a resource. Objects are the resources. An object could be a network, server, database, app, or file. Subjects are assigned rights or permissions on resources. A security principal is an object that can be given permissions to an object. Security principals include user accounts, computer accounts, and security group accounts. Each security principal is given a unique identification number called a Security ID (SID). When a security principal logs on, an access token is generated. The access token controls access to resources and contains the SID for the user or computer, for all groups the user or computer is a member of, and the user rights granted to the security principal. When the security principal tries to access a resource or take action, information in the access token is checked. For example, when a user tries to access a file, the access token is checked for the user's SID and all groups. The SIDs are then compared to those in the object's DACL to identify permissions that apply. On a Microsoft system, the access token is only generated during authentication. Changes to group memberships or user rights do not occur until the user logs on again and a new access token is created. Authorization with Single Sign-on After completing authentication, the client can decrypt the Ticket Granting Service (TGS) session key but not the Ticket Granting Ticket (TGT). This establishes that the client and key distribution center(KDC) know the same shared secret and that the client cannot interfere with the TGT. To access resources within the domain, the principal requests a service ticket (a token that grants access to a target application server). This process of granting service tickets is handled by the TGS. The principal sends the TGS a copy of its TGT and the name of the application server it wishes to access, plus an authenticator consisting of a time-stamped client ID encrypted using the TGS session key. The TGS should be able to decrypt both messages using the KDC's secret key for the first and the TGS session key for the second. This confirms that the request is genuine. It also checks that the ticket has not expired and has not been used before (replay attack). The TGS service responds with the following: A Service session key — is used between the client and the application server. This is encrypted with the TGS session key. A Service ticket — contains information about the principal, such as a time stamp, system IP address, Security Identifier (SID) and the SIDs of groups to which it belongs, and the service session key. This is encrypted using the application server's secret key. The principal forwards the service ticket, which it cannot decrypt, to the application server and adds another time-stamped authenticator, which is encrypted using the service session key. Kerberos Ticket Granting Service Images © 123RF.com Description The application server decrypts the service ticket to obtain the service session key using its secret key, confirming that the principal has sent it an untampered message. It then decrypts the authenticator using the service session key. Optionally, the application server responds to the principal with the time stamp used in the authenticator, which is encrypted using the service session key. The principal decrypts the time stamp, verifies that it matches the value already sent, and concludes that the application server is trustworthy. This means that the server is authenticated to the principal (referred to as mutual authentication). This prevents an on-path attack, where a malicious user could intercept communications between the principal and server. The server now responds to access requests (assuming they conform to the server's access control list). One of the noted drawbacks of Kerberos is that the KDC represents a single point of failure for the network. In practice, backup KDC servers can be implemented (for example, Active Directory supports multiple domain controllers, each of which is running the KDC service).",
      "summary": "In the CompTIA Security+ course, the section on role-based access emphasizes the importance of managing permissions, privileges, and roles through Access Control Lists (ACLs) to ensure secure resource access. It covers the concepts of effective permissions, cumulative permissions, and the significance of explicit versus inherited permissions, alongside practical applications such as Discretionary Access Control (DAC) and the Kerberos authentication process for secure resource access. Proper planning and management of ACLs are essential to mitigate risks associated with misconfigurations and to uphold the principles of the CIA triad (Confidentiality, Integrity, Availability).",
      "metadata": {
        "chapter_num": "4",
        "section_num": "4.3.3",
        "title": "Authorization Facts",
        "content_type": "text",
        "filename": "4.3.3_Authorization_Facts_[text].txt",
        "file_path": "/Users/basantabaral/CompTia/data_raw/04_Identity_and_Access_Management/4.3.3_Authorization_Facts_[text].txt",
        "word_count": 1573,
        "has_content": true
      },
      "section_header": "6.8.3 Role-based",
      "timestamp_range": null
    }
  ],
  "num_chunks": 14
}