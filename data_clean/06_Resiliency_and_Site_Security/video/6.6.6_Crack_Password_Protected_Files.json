{
  "metadata": {
    "chapter_num": "6",
    "section_num": "6.6.6",
    "title": "Crack Password Protected Files",
    "content_type": "video",
    "filename": "6.6.6_Crack_Password_Protected_Files_[video].txt",
    "file_path": "data_raw/06_Resiliency_and_Site_Security/6.6.6_Crack_Password_Protected_Files_[video].txt",
    "word_count": 674,
    "has_content": true
  },
  "full_content": "Transcript close interactive script Password-protected files are extremely common, but they're not 100 percent secure. Some files natively support password protection, like PDFs. Other types of files are easy to store in a password-protected zip archive. Today, we're going to extract the password hash from these kinds of files and use John the Ripper to crack the hash. As a reminder, John the Ripper only works with hashes. It doesn't natively know how to work directly with password-protected files, so we need to extract the hash from the file we're interested in. The process of extracting a hash is similar for most files. The toolkit provided with John the Ripper provides many scripts, but some of them aren't included on Kali Linux by default. We can obtain these tools by cloning the project from GitHub, but I've already downloaded the tools we need. Let's extract the hashes from the zip file we're interested in. I'll open a terminal and go to the Documents directory. I'll list the folder contents to see what we have in there. I have a file called protected.zip. This is the zip file we'll attempt to crack the password on. We also have a wordlist that we'll use called words.txt. Most tools that exist to help us extract hashes from files follow the standard for file type, in this case, zip followed by the number 2 and the word \"john\". So, I'll type, 'zip2john'. This makes it easier to remember what command we need. These tools output the hash straight to the screen, so we use the angle bracket to redirect that output to a file. We will finish our command with 'protected.zip > ziphash'. Now that we have the hash for the zip file, we can crack it with John the Ripper. We need to specify the format of the hash, the file name, and the wordlist we want to facilitate cracking the hash. So, I'll type, 'john - -format=pkzip ziphash - -wordlist=words.txt'. We have the password. It's a variation of the word password. Now, let's extract the zipped file with that password! I'll do that from the command line by typing 'unzip protected.zip'. It prompts for the password, so I'll type in the password that we just cracked. I get a message that the file is inflating. Let's list the folder contents. Now I see another file called password.pdf. This is a PDF file that's also password-protected, so whoever set this up was really concerned about this document's security. If this PDF's password is just as weak as the first one, we can crack it, too. Let's go ahead and do that now. Getting the hash from the PDF is pretty much the same process as getting the hash from the zipped file. Let's type 'pdf2john password.pdf > pdfhash' and press Enter. Now let's crack the password, just like we did for the zipped file password, by typing 'john - -format=pdf pdfhash - -wordlist=words.txt' and pressing Enter. There's the password! It's the word 'secret\". Let's try it to make sure it works. I'll go to my Documents folder and open the PDF. It prompts me for a password, so I'll type in 'secret', and my file opens up. And that's all there is to it. In this demo, we talked about extracting hashes from password-protected files. We extracted hashes from a zip file and then a PDF file. Then we used John the Ripper to crack those hashes.",
  "chunks": [
    {
      "chunk_id": "6.6.6_chunk_1",
      "content": "Password-protected files are extremely common, but they're not 100 percent secure. Some files natively support password protection, like PDFs. Other types of files are easy to store in a password-protected zip archive. Today, we're going to extract the password hash from these kinds of files and use John the Ripper to crack the hash. As a reminder, John the Ripper only works with hashes. It doesn't natively know how to work directly with password-protected files, so we need to extract the hash from the file we're interested in.",
      "summary": "The introduction to the CompTIA Security+ course emphasizes the limitations of password protection for files, highlighting that while formats like PDFs and zip archives can be secured, they are not foolproof. The session focuses on the practical application of extracting password hashes from these files and using John the Ripper, a password-cracking tool, to demonstrate how hashes can be compromised. This illustrates key security concepts related to password management and the importance of understanding file security vulnerabilities.",
      "metadata": {
        "chapter_num": "6",
        "section_num": "6.6.6",
        "title": "Crack Password Protected Files",
        "content_type": "video",
        "filename": "6.6.6_Crack_Password_Protected_Files_[video].txt",
        "file_path": "data_raw/06_Resiliency_and_Site_Security/6.6.6_Crack_Password_Protected_Files_[video].txt",
        "word_count": 674,
        "has_content": true
      },
      "section_header": "Introduction",
      "timestamp_range": ""
    },
    {
      "chunk_id": "6.6.6_chunk_2",
      "content": "The process of extracting a hash is similar for most files. The toolkit provided with John the Ripper provides many scripts, but some of them aren't included on Kali Linux by default. We can obtain these tools by cloning the project from GitHub, but I've already downloaded the tools we need. Let's extract the hashes from the zip file we're interested in. I'll open a terminal and go to the Documents directory. I'll list the folder contents to see what we have in there. I have a file called protected.zip. This is the zip file we'll attempt to crack the password on. We also have a wordlist that we'll use called words.txt. Most tools that exist to help us extract hashes from files follow the standard for file type, in this case, zip followed by the number 2 and the word \"john\". So, I'll type, 'zip2john'. This makes it easier to remember what command we need. These tools output the hash straight to the screen, so we use the angle bracket to redirect that output to a file. We will finish our command with 'protected.zip > ziphash'. Now that we have the hash for the zip file, we can crack it with John the Ripper. We need to specify the format of the hash, the file name, and the wordlist we want to facilitate cracking the hash. So, I'll type, 'john - -format=pkzip ziphash - -wordlist=words.txt'. We have the password. It's a variation of the word password. Now, let's extract the zipped file with that password! I'll do that from the command line by typing 'unzip protected.zip'. It prompts for the password, so I'll type in the password that we just cracked. I get a message that the file is inflating. Let's list the folder contents. Now I see another file called password.pdf. This is a PDF file that's also password-protected, so whoever set this up was really concerned about this document's security.",
      "summary": "In this section, learners explore the process of cracking a password-protected ZIP file using John the Ripper, a popular password recovery tool. The tutorial demonstrates how to extract the hash from the ZIP file using the 'zip2john' command, redirect the output to a file, and then utilize a wordlist to crack the password with the 'john' command. This practical application highlights key security concepts related to password protection and file encryption, emphasizing the importance of understanding hash extraction and password cracking techniques in cybersecurity.",
      "metadata": {
        "chapter_num": "6",
        "section_num": "6.6.6",
        "title": "Crack Password Protected Files",
        "content_type": "video",
        "filename": "6.6.6_Crack_Password_Protected_Files_[video].txt",
        "file_path": "data_raw/06_Resiliency_and_Site_Security/6.6.6_Crack_Password_Protected_Files_[video].txt",
        "word_count": 674,
        "has_content": true
      },
      "section_header": "Crack a Zip Password",
      "timestamp_range": ""
    },
    {
      "chunk_id": "6.6.6_chunk_3",
      "content": "If this PDF's password is just as weak as the first one, we can crack it, too. Let's go ahead and do that now. Getting the hash from the PDF is pretty much the same process as getting the hash from the zipped file. Let's type 'pdf2john password.pdf > pdfhash' and press Enter. Now let's crack the password, just like we did for the zipped file password, by typing 'john - -format=pdf pdfhash - -wordlist=words.txt' and pressing Enter. There's the password! It's the word 'secret\". Let's try it to make sure it works. I'll go to my Documents folder and open the PDF. It prompts me for a password, so I'll type in 'secret', and my file opens up.",
      "summary": "In this section, learners are guided through the process of cracking a weak PDF password using hash extraction and a password-cracking tool. By employing the 'pdf2john' command to obtain the hash and then using 'john' with a wordlist, participants successfully retrieve the password, demonstrating practical applications of password recovery techniques. This exercise highlights the importance of strong passwords and the vulnerabilities associated with weak ones.",
      "metadata": {
        "chapter_num": "6",
        "section_num": "6.6.6",
        "title": "Crack Password Protected Files",
        "content_type": "video",
        "filename": "6.6.6_Crack_Password_Protected_Files_[video].txt",
        "file_path": "data_raw/06_Resiliency_and_Site_Security/6.6.6_Crack_Password_Protected_Files_[video].txt",
        "word_count": 674,
        "has_content": true
      },
      "section_header": "Crack a PDF Password",
      "timestamp_range": ""
    },
    {
      "chunk_id": "6.6.6_chunk_4",
      "content": "And that's all there is to it. In this demo, we talked about extracting hashes from password-protected files. We extracted hashes from a zip file and then a PDF file. Then we used John the Ripper to crack those hashes.",
      "summary": "In this demo, participants learned how to extract hashes from password-protected files, specifically from zip and PDF formats. The session included practical applications of using John the Ripper, a popular password-cracking tool, to crack the extracted hashes, reinforcing key concepts in password security and hash extraction techniques. This hands-on experience highlights the importance of understanding cryptographic methods in cybersecurity.",
      "metadata": {
        "chapter_num": "6",
        "section_num": "6.6.6",
        "title": "Crack Password Protected Files",
        "content_type": "video",
        "filename": "6.6.6_Crack_Password_Protected_Files_[video].txt",
        "file_path": "data_raw/06_Resiliency_and_Site_Security/6.6.6_Crack_Password_Protected_Files_[video].txt",
        "word_count": 674,
        "has_content": true
      },
      "section_header": "Summary",
      "timestamp_range": ""
    }
  ],
  "num_chunks": 4
}