{
  "metadata": {
    "chapter_num": "7",
    "section_num": "7.3.6",
    "title": "Data Loss Prevention",
    "content_type": "video",
    "filename": "7.3.6_Data_Loss_Prevention_[video].txt",
    "file_path": "data_raw/07_Vulnerability_Management/7.3.6_Data_Loss_Prevention_[video].txt",
    "word_count": 1284,
    "has_content": true
  },
  "full_content": "Transcript close interactive script Every business has sensitive data in its system, and protecting it is a high priority. A data leakage incident happens when sensitive data like credit card numbers, intellectual property, financial information, or proprietary company information is disclosed to an unauthorized person. In this lesson, we'll look at five approaches to data security, including data loss prevention, or DLP; masking; encryption; tokenization; and rights management. Data can exist in one of three states, and it's important to use the right security approach for each state. The first state is while the data is in use on an endpoint system, like a workstation. The second state is while the data is in motion, such as when it's transmitted over the network or to the cloud. The third state is while the data rests on a storage medium, like a hard disk drive, or in a database. Let's look at data protection through a DLP system. A DLP system works like a guard at the perimeter of your network, allowing unsensitive data to leave, but restricting sensitive data from being transmitted out of the company. A DLP analyzes the network traffic in accordance with the organization's security policies. For example, an e-commerce retailer could use a network DLP solution to monitor for files containing credit card numbers. If one of those files were being transmitted out of the company, the DLP software would flag it as a potential security problem. Next, let's look at the masking approach. Masking works by replacing sensitive data with realistic fictional data. There are different types of masking. We'll look at dynamic data masking, and then we'll look at static data masking. Let's start with dynamic. Dynamic masking replaces original information with a mask that mimics the original in form and function, making it useful for data that's in use or in processing. For example, someone's name would be replaced with another name, or credit card numbers would be replaced with a random number that contains the same number of characters. This method can be used to control which users can see the actual data. A bank could have third-party analytics performed on their accounts while masking the account numbers and clients' names. With dynamic data masking, the original data can be retrieved. Another type of masking is static data masking. This type is helpful for data at rest in a database and can be specified by field or column. You may want to use this method if you're making copies of a database for testing, development, or reporting. The complex algorithms in static masking make the original data irretrievable through reverse-engineering, so making a masked copy may be a better choice than masking the original database. All right. Next, let's briefly review encryption. Encryption happens when an algorithm changes plain text data into unreadable ciphertext. The encryption algorithm has a variable that's called a key. The authorized user that receives the encrypted data can decrypt it through the cipher key. This helps to protect data in motion. Now let's look at a tokenization approach. Tokenization is similar to encryption and masking--it replaces actual data with something else. But tokenization uses a randomly generated alphanumeric character set called a token to replace the original data. The token server stores the original data and is protected by security measures like authentication and authorization protocols so that the original information is disclosed only when the correct token is presented. This method is frequently used for credit card numbers, bank accounts, medical records, and other personally identifiable information. For example, when you have a credit card number stored on your mobile phone through an app, the app connects with the remote token server, which creates the token and replaces the credit card number stored in your phone. Then, when you go to use your phone's app to pay for your purchase at the store, the store's point of sale terminal will contact a merchant acquirer. The merchant acquirer presents the token value to the remote token server. The server uses the token to map back to your actual credit card number and authorize the purchase. An authorization is sent to the merchant, and a message from the server is sent to your phone. Finally, we have rights management. Rights management is data protection at the file level. With rights management, you identify sensitive files in the file system and embed them with your organization's security policy. The key benefit of this approach is that the security policy travels with the specific file even if it's moved or copied. You can continue to control access to the file, such as restricting who it can be transferred to, even when the file is no longer on your system. Rights management falls into two categories: Digital Rights Management, or DRM, and Information Rights Management, or IRM. DRM is file level management applied to rich media like music, videos, and software. This strategy uses security technologies such as encryption, permissions, product keys, limited install applications, and persistent online authentication to prevent editing, sharing, and unauthorized copying. The purpose is to protect copyrighted media and software. For example, when a consumer purchases a software program, the program is not accessible without a product key provided by the manufacturer at the time of purchase. An example of continuous online authentication is when a consumer logs in to an online application or streams the information through an account that requires authentication. Now let's move on to IRM, or Information Rights Management. It's also called Enterprise Rights Management sometimes. It focuses on business-to-business transfers for files such as documents, emails, spreadsheets, and financial data. Information rights management utilizes encryption and permissions to create rules for the files, which can allow or deny copying and pasting, editing, forwarding, and printing. An example is a contract document that only the recipient can open and digitally sign and is denied forwarding abilities. That's it for this lesson. In this video, we review five approaches to data protection. First, we looked at data loss prevention. Next, we discussed two types of masking, dynamic and static. We talked about encryption, which uses a cipher with a key to encode information that can be decoded with a key by the receiver. Next, we discussed tokenization, which uses an alphanumeric value as a token to replace sensitive information that's protected by the token server. And finally, we went over rights management, which protects data through permissions at the file level that stay with the file even if it leaves your network.",
  "chunks": [
    {
      "chunk_id": "7.3.6_chunk_1",
      "content": "Every business has sensitive data in its system, and protecting it is a high priority. A data leakage incident happens when sensitive data like credit card numbers, intellectual property, financial information, or proprietary company information is disclosed to an unauthorized person. In this lesson, we'll look at five approaches to data security, including data loss prevention, or DLP; masking; encryption; tokenization; and rights management.",
      "summary": "The Data Loss Prevention (DLP) section of the CompTIA Security+ course emphasizes the importance of safeguarding sensitive information, such as credit card numbers and proprietary data, from unauthorized access. It covers five key strategies for data security: DLP, masking, encryption, tokenization, and rights management, each designed to mitigate the risk of data leakage incidents. Understanding and implementing these approaches is crucial for maintaining data integrity and compliance within an organization.",
      "metadata": {
        "chapter_num": "7",
        "section_num": "7.3.6",
        "title": "Data Loss Prevention",
        "content_type": "video",
        "filename": "7.3.6_Data_Loss_Prevention_[video].txt",
        "file_path": "data_raw/07_Vulnerability_Management/7.3.6_Data_Loss_Prevention_[video].txt",
        "word_count": 1284,
        "has_content": true
      },
      "section_header": "Data Loss Prevention",
      "timestamp_range": ""
    },
    {
      "chunk_id": "7.3.6_chunk_2",
      "content": "Data can exist in one of three states, and it's important to use the right security approach for each state. The first state is while the data is in use on an endpoint system, like a workstation. The second state is while the data is in motion, such as when it's transmitted over the network or to the cloud. The third state is while the data rests on a storage medium, like a hard disk drive, or in a database.",
      "summary": "Data exists in three states: in use, in motion, and at rest, each requiring distinct security measures. When data is in use on an endpoint, it needs protection against unauthorized access; while in motion, encryption is crucial to safeguard it during transmission; and when at rest, strong access controls and encryption help prevent data breaches. Understanding these states is essential for implementing effective cybersecurity strategies.",
      "metadata": {
        "chapter_num": "7",
        "section_num": "7.3.6",
        "title": "Data Loss Prevention",
        "content_type": "video",
        "filename": "7.3.6_Data_Loss_Prevention_[video].txt",
        "file_path": "data_raw/07_Vulnerability_Management/7.3.6_Data_Loss_Prevention_[video].txt",
        "word_count": 1284,
        "has_content": true
      },
      "section_header": "Data States",
      "timestamp_range": ""
    },
    {
      "chunk_id": "7.3.6_chunk_3",
      "content": "Let's look at data protection through a DLP system. A DLP system works like a guard at the perimeter of your network, allowing unsensitive data to leave, but restricting sensitive data from being transmitted out of the company. A DLP analyzes the network traffic in accordance with the organization's security policies. For example, an e-commerce retailer could use a network DLP solution to monitor for files containing credit card numbers. If one of those files were being transmitted out of the company, the DLP software would flag it as a potential security problem.",
      "summary": "Data Loss Prevention (DLP) systems serve as a protective barrier for organizations by monitoring network traffic and enforcing security policies to prevent sensitive data from being transmitted outside the company. For instance, an e-commerce retailer can utilize DLP to detect and flag the unauthorized transmission of sensitive information, such as credit card numbers, ensuring compliance and safeguarding customer data. This proactive approach helps mitigate the risk of data breaches and enhances overall cybersecurity posture.",
      "metadata": {
        "chapter_num": "7",
        "section_num": "7.3.6",
        "title": "Data Loss Prevention",
        "content_type": "video",
        "filename": "7.3.6_Data_Loss_Prevention_[video].txt",
        "file_path": "data_raw/07_Vulnerability_Management/7.3.6_Data_Loss_Prevention_[video].txt",
        "word_count": 1284,
        "has_content": true
      },
      "section_header": "DLP",
      "timestamp_range": ""
    },
    {
      "chunk_id": "7.3.6_chunk_4",
      "content": "Next, let's look at the masking approach. Masking works by replacing sensitive data with realistic fictional data. There are different types of masking. We'll look at dynamic data masking, and then we'll look at static data masking.",
      "summary": "Masking is a data protection technique that replaces sensitive information with realistic but fictional data to safeguard privacy. Key types include dynamic data masking, which alters data in real-time for user access, and static data masking, which creates a permanent, non-sensitive version of the data. This approach is essential for maintaining data confidentiality while allowing for practical data use in testing and development environments.",
      "metadata": {
        "chapter_num": "7",
        "section_num": "7.3.6",
        "title": "Data Loss Prevention",
        "content_type": "video",
        "filename": "7.3.6_Data_Loss_Prevention_[video].txt",
        "file_path": "data_raw/07_Vulnerability_Management/7.3.6_Data_Loss_Prevention_[video].txt",
        "word_count": 1284,
        "has_content": true
      },
      "section_header": "Masking",
      "timestamp_range": ""
    },
    {
      "chunk_id": "7.3.6_chunk_5",
      "content": "Let's start with dynamic. Dynamic masking replaces original information with a mask that mimics the original in form and function, making it useful for data that's in use or in processing. For example, someone's name would be replaced with another name, or credit card numbers would be replaced with a random number that contains the same number of characters.",
      "summary": "Dynamic Data Masking is a security technique that replaces sensitive information with a masked version that retains the original format, allowing for safe data processing and usage. This method is particularly useful for protecting personal data, such as names or credit card numbers, by substituting them with random characters while maintaining the same character length. Its practical application helps organizations comply with data privacy regulations while enabling data analysis and processing without exposing sensitive information.",
      "metadata": {
        "chapter_num": "7",
        "section_num": "7.3.6",
        "title": "Data Loss Prevention",
        "content_type": "video",
        "filename": "7.3.6_Data_Loss_Prevention_[video].txt",
        "file_path": "data_raw/07_Vulnerability_Management/7.3.6_Data_Loss_Prevention_[video].txt",
        "word_count": 1284,
        "has_content": true
      },
      "section_header": "Dynamic Data Masking",
      "timestamp_range": ""
    },
    {
      "chunk_id": "7.3.6_chunk_6",
      "content": "This method can be used to control which users can see the actual data. A bank could have third-party analytics performed on their accounts while masking the account numbers and clients' names. With dynamic data masking, the original data can be retrieved.",
      "summary": "Dynamic Data Masking is a security technique that restricts user access to sensitive data by obscuring specific information, such as account numbers and client names, while still allowing for data analysis. This method enables organizations, like banks, to perform third-party analytics without exposing confidential information. The original data remains intact and can be retrieved when necessary, ensuring both security and usability.",
      "metadata": {
        "chapter_num": "7",
        "section_num": "7.3.6",
        "title": "Data Loss Prevention",
        "content_type": "video",
        "filename": "7.3.6_Data_Loss_Prevention_[video].txt",
        "file_path": "data_raw/07_Vulnerability_Management/7.3.6_Data_Loss_Prevention_[video].txt",
        "word_count": 1284,
        "has_content": true
      },
      "section_header": "Dynamic Data Masking",
      "timestamp_range": ""
    },
    {
      "chunk_id": "7.3.6_chunk_7",
      "content": "Another type of masking is static data masking. This type is helpful for data at rest in a database and can be specified by field or column. You may want to use this method if you're making copies of a database for testing, development, or reporting. The complex algorithms in static masking make the original data irretrievable through reverse-engineering, so making a masked copy may be a better choice than masking the original database.",
      "summary": "Static data masking is a technique used to protect sensitive information in databases by obscuring data at rest, typically at the field or column level. This method is particularly useful for creating copies of databases for testing, development, or reporting purposes, as it employs complex algorithms that prevent the original data from being recovered through reverse-engineering. By using static masking, organizations can ensure data privacy while still allowing for necessary data access in non-production environments.",
      "metadata": {
        "chapter_num": "7",
        "section_num": "7.3.6",
        "title": "Data Loss Prevention",
        "content_type": "video",
        "filename": "7.3.6_Data_Loss_Prevention_[video].txt",
        "file_path": "data_raw/07_Vulnerability_Management/7.3.6_Data_Loss_Prevention_[video].txt",
        "word_count": 1284,
        "has_content": true
      },
      "section_header": "Static Data Masking",
      "timestamp_range": ""
    },
    {
      "chunk_id": "7.3.6_chunk_8",
      "content": "All right. Next, let's briefly review encryption. Encryption happens when an algorithm changes plain text data into unreadable ciphertext. The encryption algorithm has a variable that's called a key. The authorized user that receives the encrypted data can decrypt it through the cipher key. This helps to protect data in motion.",
      "summary": "Encryption is the process of converting plain text data into unreadable ciphertext using an algorithm and a key. This key allows authorized users to decrypt the data, ensuring its confidentiality and integrity during transmission. It is a fundamental security measure for protecting sensitive information in motion.",
      "metadata": {
        "chapter_num": "7",
        "section_num": "7.3.6",
        "title": "Data Loss Prevention",
        "content_type": "video",
        "filename": "7.3.6_Data_Loss_Prevention_[video].txt",
        "file_path": "data_raw/07_Vulnerability_Management/7.3.6_Data_Loss_Prevention_[video].txt",
        "word_count": 1284,
        "has_content": true
      },
      "section_header": "Encryption",
      "timestamp_range": ""
    },
    {
      "chunk_id": "7.3.6_chunk_9",
      "content": "Now let's look at a tokenization approach. Tokenization is similar to encryption and masking--it replaces actual data with something else. But tokenization uses a randomly generated alphanumeric character set called a token to replace the original data. The token server stores the original data and is protected by security measures like authentication and authorization protocols so that the original information is disclosed only when the correct token is presented. This method is frequently used for credit card numbers, bank accounts, medical records, and other personally identifiable information.",
      "summary": "Tokenization is a data protection technique that replaces sensitive information with randomly generated tokens, which are stored securely on a token server. This approach enhances security by ensuring that the original data is only accessible through proper authentication and authorization, making it particularly useful for safeguarding credit card numbers, bank accounts, medical records, and other personally identifiable information. By minimizing exposure of sensitive data, tokenization helps organizations comply with privacy regulations and reduce the risk of data breaches.",
      "metadata": {
        "chapter_num": "7",
        "section_num": "7.3.6",
        "title": "Data Loss Prevention",
        "content_type": "video",
        "filename": "7.3.6_Data_Loss_Prevention_[video].txt",
        "file_path": "data_raw/07_Vulnerability_Management/7.3.6_Data_Loss_Prevention_[video].txt",
        "word_count": 1284,
        "has_content": true
      },
      "section_header": "Tokenization",
      "timestamp_range": ""
    },
    {
      "chunk_id": "7.3.6_chunk_10",
      "content": "For example, when you have a credit card number stored on your mobile phone through an app, the app connects with the remote token server, which creates the token and replaces the credit card number stored in your phone. Then, when you go to use your phone's app to pay for your purchase at the store, the store's point of sale terminal will contact a merchant acquirer. The merchant acquirer presents the token value to the remote token server. The server uses the token to map back to your actual credit card number and authorize the purchase. An authorization is sent to the merchant, and a message from the server is sent to your phone.",
      "summary": "Tokenization is a security process that replaces sensitive data, such as credit card numbers, with a unique identifier or token to protect it during transactions. When a user makes a purchase using a mobile app, the app communicates with a remote token server to generate a token, which is then used by the merchant's point of sale system to retrieve the actual credit card information securely for authorization. This method enhances data security by minimizing the exposure of sensitive information during payment processes.",
      "metadata": {
        "chapter_num": "7",
        "section_num": "7.3.6",
        "title": "Data Loss Prevention",
        "content_type": "video",
        "filename": "7.3.6_Data_Loss_Prevention_[video].txt",
        "file_path": "data_raw/07_Vulnerability_Management/7.3.6_Data_Loss_Prevention_[video].txt",
        "word_count": 1284,
        "has_content": true
      },
      "section_header": "Tokenization",
      "timestamp_range": ""
    },
    {
      "chunk_id": "7.3.6_chunk_11",
      "content": "Finally, we have rights management. Rights management is data protection at the file level. With rights management, you identify sensitive files in the file system and embed them with your organization's security policy. The key benefit of this approach is that the security policy travels with the specific file even if it's moved or copied. You can continue to control access to the file, such as restricting who it can be transferred to, even when the file is no longer on your system. Rights management falls into two categories: Digital Rights Management, or DRM, and Information Rights Management, or IRM.",
      "summary": "Rights management is a crucial aspect of data protection that operates at the file level, allowing organizations to embed security policies directly into sensitive files. This ensures that access controls remain intact even when files are moved or copied, effectively safeguarding data beyond its original location. Rights management is divided into two categories: Digital Rights Management (DRM) and Information Rights Management (IRM), both of which help maintain control over file distribution and usage.",
      "metadata": {
        "chapter_num": "7",
        "section_num": "7.3.6",
        "title": "Data Loss Prevention",
        "content_type": "video",
        "filename": "7.3.6_Data_Loss_Prevention_[video].txt",
        "file_path": "data_raw/07_Vulnerability_Management/7.3.6_Data_Loss_Prevention_[video].txt",
        "word_count": 1284,
        "has_content": true
      },
      "section_header": "Rights Management",
      "timestamp_range": ""
    },
    {
      "chunk_id": "7.3.6_chunk_12",
      "content": "DRM is file level management applied to rich media like music, videos, and software. This strategy uses security technologies such as encryption, permissions, product keys, limited install applications, and persistent online authentication to prevent editing, sharing, and unauthorized copying. The purpose is to protect copyrighted media and software. For example, when a consumer purchases a software program, the program is not accessible without a product key provided by the manufacturer at the time of purchase. An example of continuous online authentication is when a consumer logs in to an online application or streams the information through an account that requires authentication.",
      "summary": "Data Rights Management (DRM) is a security strategy focused on protecting rich media like music, videos, and software through file-level management. It employs technologies such as encryption, permissions, product keys, and continuous online authentication to prevent unauthorized access, editing, and sharing of copyrighted content. For instance, software access is often restricted by requiring a product key, while streaming services necessitate user authentication to ensure content protection.",
      "metadata": {
        "chapter_num": "7",
        "section_num": "7.3.6",
        "title": "Data Loss Prevention",
        "content_type": "video",
        "filename": "7.3.6_Data_Loss_Prevention_[video].txt",
        "file_path": "data_raw/07_Vulnerability_Management/7.3.6_Data_Loss_Prevention_[video].txt",
        "word_count": 1284,
        "has_content": true
      },
      "section_header": "Data Rights Management",
      "timestamp_range": ""
    },
    {
      "chunk_id": "7.3.6_chunk_13",
      "content": "Now let's move on to IRM, or Information Rights Management. It's also called Enterprise Rights Management sometimes. It focuses on business-to-business transfers for files such as documents, emails, spreadsheets, and financial data. Information rights management utilizes encryption and permissions to create rules for the files, which can allow or deny copying and pasting, editing, forwarding, and printing. An example is a contract document that only the recipient can open and digitally sign and is denied forwarding abilities.",
      "summary": "Information Rights Management (IRM), also known as Enterprise Rights Management, is a security framework that governs the sharing of sensitive files like documents and emails in business-to-business transactions. It employs encryption and permission settings to enforce rules on file usage, such as restricting copying, editing, and printing. A practical application of IRM is in contract management, where only designated recipients can access and digitally sign documents while preventing further distribution.",
      "metadata": {
        "chapter_num": "7",
        "section_num": "7.3.6",
        "title": "Data Loss Prevention",
        "content_type": "video",
        "filename": "7.3.6_Data_Loss_Prevention_[video].txt",
        "file_path": "data_raw/07_Vulnerability_Management/7.3.6_Data_Loss_Prevention_[video].txt",
        "word_count": 1284,
        "has_content": true
      },
      "section_header": "Information Rights Management",
      "timestamp_range": ""
    },
    {
      "chunk_id": "7.3.6_chunk_14",
      "content": "That's it for this lesson. In this video, we review five approaches to data protection. First, we looked at data loss prevention. Next, we discussed two types of masking, dynamic and static. We talked about encryption, which uses a cipher with a key to encode information that can be decoded with a key by the receiver. Next, we discussed tokenization, which uses an alphanumeric value as a token to replace sensitive information that's protected by the token server. And finally, we went over rights management, which protects data through permissions at the file level that stay with the file even if it leaves your network.",
      "summary": "This lesson covers five key approaches to data protection: data loss prevention, dynamic and static masking, encryption, tokenization, and rights management. Each method offers unique strategies for safeguarding sensitive information, such as using ciphers for encryption, replacing sensitive data with tokens, and enforcing file-level permissions. Understanding these concepts is crucial for implementing effective data security measures in various environments.",
      "metadata": {
        "chapter_num": "7",
        "section_num": "7.3.6",
        "title": "Data Loss Prevention",
        "content_type": "video",
        "filename": "7.3.6_Data_Loss_Prevention_[video].txt",
        "file_path": "data_raw/07_Vulnerability_Management/7.3.6_Data_Loss_Prevention_[video].txt",
        "word_count": 1284,
        "has_content": true
      },
      "section_header": "Summary",
      "timestamp_range": ""
    }
  ],
  "num_chunks": 14
}