{
  "metadata": {
    "chapter_num": "5",
    "section_num": "5.4.2",
    "title": "Firewall Facts",
    "content_type": "text",
    "filename": "5.4.2_Firewall_Facts_[text].txt",
    "file_path": "data_raw/05_Network_Architecture/5.4.2_Firewall_Facts_[text].txt",
    "word_count": 1708,
    "has_content": true
  },
  "full_content": "Security Pro 8.0 This lesson covers the following topics: Firewall types ACLs and firewall rules Firewall Types A firewall is a network security device or software application that is designed to monitor, filter, and control incoming and outgoing network traffic based on predetermined security rules. The primary purpose of a firewall is to establish a barrier between a trusted internal network (such as a company's local area network or LAN) and untrusted external networks (such as the internet), thereby protecting the internal network from unauthorized access, cyberattacks, and other security threats. The evolution of network security has given rise to specialized firewalls that offer different levels of protection and control. Depending on the specific security requirements and network architecture, organizations may use a combination of the following firewall types to secure their systems and data. Type\tDescription Host-based firewall\tA host-based firewall inspects traffic received by a host. Use a host-based firewall to protect against attacks when there is no network-based firewall, such as when you connect to the internet from a public location. Host-based firewalls are typically software programs. A host-based firewall can be configured to meet the security requirements of the specific host and add an additional layer of security even when a network firewall has been implemented. Network-based firewall\tA network-based firewall inspects traffic as it flows between networks. For example, you can install a network-based firewall on the edge of your private network that connects to the internet to protect against attacks from internet hosts. Network-based firewalls are typically dedicated hardware devices. Web application firewall A web application firewall (WAF) is designed to protect software running on web servers and their back-end databases from code injection and denial-of-service attacks. WAFs use application-aware processing rules to filter traffic and perform application-specific intrusion detection. The WAF can be programmed with signatures of known attacks and use pattern matching to block requests containing suspect code. The output from a WAF will be written to a log, which can reveal potential threats to the web application. Description With the ModSecurity WAF installed to this IIS server, a scanning attempt has been detected and logged as an Application event. As you can see, the default ruleset generates a lot of events. (Screenshot used with permission from Microsoft.) A WAF may be deployed as an appliance protecting the zone that the web server is placed in or as plug-in software for a web server platform. Next-generation firewall While intrusion detection was originally produced as stand-alone software or appliances, its functionality quickly became incorporated into a new generation of firewalls. The original next-generation firewall (NGFW) was released in 2010 by Palo Alto Networks. There is no official specification for what an NGFW can do, but the following features are typical: Layer 7 application-aware filtering, including inspection of Transport Layer Security (TLS) encrypted traffic. Integration with network directories, facilitating per-user or per-role content and time-based filtering policies, providing better protection against an insider threat. Intrusion prevention system (IPS) functionality. Next-generation firewalls can combine traditional firewall functionalities with advanced capabilities, such as deep packet inspection, intrusion prevention, and application awareness. Integration with cloud networking. Unified threat management Unified threat management (UTM) refers to a security product that centralizes many types of security controls—firewall, antimalware, network intrusion prevention, spam filtering, content filtering, data loss prevention, virtual private networking (VPN), cloud access gateway, and endpoint protection/malware scanning—into a single appliance. This means monitoring and management of diverse controls are consolidated into a single console. UTM has some downsides. When a defense is unified under a single system, this creates the potential for a single point of failure that could affect an entire network. Distinct security systems, if they fail, might only compromise that particular avenue of attack. Additionally, UTM systems can struggle with latency issues if subject to too much network activity. Also, a UTM might not perform as well as software or a device with a single dedicated security function. To some extent, NGFW and UTM are just marketing terms. UTM is commonly deployed in small and medium-sized businesses that require a comprehensive security solution but have limited resources and IT expertise. A UTM is seen as a turnkey \"do everything\" solution, while a NGFW is an enterprise product with fewer features but better performance. Stateless firewall\tA basic packet filtering firewall is stateless. This means that it does not preserve information about network sessions. Each packet is analyzed independently, with no record of previously processed packets. This type of filtering requires the least processing effort, but it can be vulnerable to attacks spread over a sequence of packets. A stateless firewall can also introduce problems in traffic flow, especially when using some sort of load balancing or when clients or servers need to use dynamically assigned ports. Stateful firewall\tA stateful inspection firewall tracks information about the session established between two hosts. All firewalls now incorporate some level of stateful inspection capability. Session data is stored in a state table. When a packet arrives, the firewall checks it to confirm whether it belongs to an existing connection. If it does not, it applies the ordinary packet filtering rules to determine whether to allow it. Once the connection has been allowed, the firewall usually allows traffic to pass unmonitored in order to conserve processing effort. Layer 4 firewall\tLayer 4 is the OSI transport layer. A layer 4 firewall examines the TCP three-way handshake to distinguish new from established connections. A legitimate TCP connection should follow a SYN > SYN/ACK > ACK sequence to establish a session, which is then tracked using sequence numbers. Deviations from this, such as SYN without ACK or sequence number anomalies, can be dropped as malicious flooding or session hijacking attempts. The firewall can be configured to respond to such attacks by blocking source IP addresses and throttling sessions. It can also track UDP traffic, though this is harder as UDP is a protocol without connections. It is also likely to be able to detect IP header and ICMP anomalies. Layer 7 firewall A layer 7 firewall can inspect the headers and payload of application-layer packets. One key feature is to verify the application protocol matches the port because malware can try to send raw TCP data over port 80 just because port 80 is open, for instance. As another example, a web application firewall could analyze the HTTP headers and the webpage formatting code present in HTTP packets to identify strings that match a pattern in its threat database. Application-aware firewalls have many different names, including application layer gateway, stateful multilayer inspection, and deep packet inspection. Application layer gateways offer features such as reassembling entire messages and stopping each packet at the firewall for inspection. Application-aware devices have to be configured with separate filters for each type of traffic (HTTP and HTTPS, SMTP/POP/IMAP, FTP, and so on). ACLs and Firewall Rules An access control list (ACL) is a list of permissions associated with a network object, such as a router or switch, that controls traffic at a network interface level. ACLs typically use packet information like source and destination IP addresses, port numbers, and the protocol to decide whether to permit or deny the traffic. They are usually implemented on network devices to provide traffic control across the network, adding a layer of security and efficiency. In contrast, a firewall rule dictates how firewalls should handle inbound or outbound network traffic for specific IP addresses, IP ranges, or network interfaces. Firewalls typically provide both network and application-level control. They are designed to protect a network perimeter by preventing unauthorized access to or from a network. Firewall rules can be based on various factors, such as IP addresses, port numbers, protocols, or even specific application traffic patterns. The rules in a firewall's ACL are processed from top to bottom. If traffic matches one of the rules, then it is allowed to pass; consequently, the most specific rules are placed at the top. The final default rule is typically to block any traffic that has not matched a rule (implicit deny). If the firewall does not have a default implicit deny rule, an explicit deny all rule can be added manually to the end of the ACL. Screenshot used with permission from IPFire Description Each rule can specify whether to block or allow traffic based on several parameters, often referred to as tuples. If you think of each rule being like a row in a database, the tuples are the columns. For example, in the previous screenshot, the tuples include Protocol, Source (address), (Source) Port, Destination (address), (Destination) Port, and so on. Even the simplest packet-filtering firewall can be complex to configure securely. It is essential to create a written policy describing what a filter ruleset should do and to test the configuration as far as possible to ensure that the ACLs you have set up work as intended. Also, test and document changes made to ACLs. Some other basic principles include the following: Block incoming requests from internal or private IP addresses (that have obviously been spoofed). Block incoming requests from protocols that should only function at a local network level, such as ICMP, DHCP, or routing protocol traffic. Use penetration testing to confirm the configuration is secure. Log access attempts and monitor the logs for suspicious activity. Take the usual steps to secure the hardware on which the firewall is running and use the management interface. For instance, a firewall rule can be specifically designed to permit or deny traffic based on the TCP or UDP port numbers that a service operates on. If a web server on a network should only allow incoming HTTP and HTTPS traffic, rules could be set up to allow traffic only on ports 80 (HTTP) and 443 (HTTPS), the standard ports for these services. Similarly, rules can be defined to restrict certain protocols such as FTP or SSH from entering the network if they are not needed, thereby reducing the potential attack surface. Additionally, you can use firewall rules to restrict outgoing traffic to prevent certain types of communication from inside the network. For instance, a rule can block all outgoing traffic to port 25 (SMTP) to prevent a compromised machine within the network from sending out spam emails.",
  "chunks": [
    {
      "chunk_id": "5.4.2_chunk_1",
      "content": "Security Pro 8.0",
      "summary": "The CompTIA Security+ course introduces fundamental security concepts, emphasizing the importance of risk management, threat identification, and mitigation strategies. Key topics include network security, compliance, operational security, and incident response, providing practical applications for securing systems and data. This foundational knowledge equips learners to implement effective security measures and respond to cybersecurity threats in various environments.",
      "metadata": {
        "chapter_num": "5",
        "section_num": "5.4.2",
        "title": "Firewall Facts",
        "content_type": "text",
        "filename": "5.4.2_Firewall_Facts_[text].txt",
        "file_path": "data_raw/05_Network_Architecture/5.4.2_Firewall_Facts_[text].txt",
        "word_count": 1708,
        "has_content": true
      },
      "section_header": "Introduction",
      "timestamp_range": null
    },
    {
      "chunk_id": "5.4.2_chunk_2",
      "content": "This lesson covers the following topics: Firewall types ACLs and firewall rules Firewall Types A firewall is a network security device or software application that is designed to monitor, filter, and control incoming and outgoing network traffic based on predetermined security rules. The primary purpose of a firewall is to establish a barrier between a trusted internal network (such as a company's local area network or LAN) and untrusted external networks (such as the internet), thereby protecting the internal network from unauthorized access, cyberattacks, and other security threats. The evolution of network security has given rise to specialized firewalls that offer different levels of protection and control. Depending on the specific security requirements and network architecture, organizations may use a combination of the following firewall types to secure their systems and data. Type\tDescription Host-based firewall\tA host-based firewall inspects traffic received by a host. Use a host-based firewall to protect against attacks when there is no network-based firewall, such as when you connect to the internet from a public location. Host-based firewalls are typically software programs. A host-based firewall can be configured to meet the security requirements of the specific host and add an additional layer of security even when a network firewall has been implemented. Network-based firewall\tA network-based firewall inspects traffic as it flows between networks. For example, you can install a network-based firewall on the edge of your private network that connects to the internet to protect against attacks from internet hosts. Network-based firewalls are typically dedicated hardware devices. Web application firewall A web application firewall (WAF) is designed to protect software running on web servers and their back-end databases from code injection and denial-of-service attacks. WAFs use application-aware processing rules to filter traffic and perform application-specific intrusion detection. The WAF can be programmed with signatures of known attacks and use pattern matching to block requests containing suspect code. The output from a WAF will be written to a log, which can reveal potential threats to the web application. Description With the ModSecurity WAF installed to this IIS server, a scanning attempt has been detected and logged as an Application event. As you can see, the default ruleset generates a lot of events. (Screenshot used with permission from Microsoft.) A WAF may be deployed as an appliance protecting the zone that the web server is placed in or as plug-in software for a web server platform. Next-generation firewall While intrusion detection was originally produced as stand-alone software or appliances, its functionality quickly became incorporated into a new generation of firewalls. The original next-generation firewall (NGFW) was released in 2010 by Palo Alto Networks. There is no official specification for what an NGFW can do, but the following features are typical: Layer 7 application-aware filtering, including inspection of Transport Layer Security (TLS) encrypted traffic. Integration with network directories, facilitating per-user or per-role content and time-based filtering policies, providing better protection against an insider threat. Intrusion prevention system (IPS) functionality. Next-generation firewalls can combine traditional firewall functionalities with advanced capabilities, such as deep packet inspection, intrusion prevention, and application awareness. Integration with cloud networking. Unified threat management Unified threat management (UTM) refers to a security product that centralizes many types of security controls—firewall, antimalware, network intrusion prevention, spam filtering, content filtering, data loss prevention, virtual private networking (VPN), cloud access gateway, and endpoint protection/malware scanning—into a single appliance. This means monitoring and management of diverse controls are consolidated into a single console. UTM has some downsides. When a defense is unified under a single system, this creates the potential for a single point of failure that could affect an entire network. Distinct security systems, if they fail, might only compromise that particular avenue of attack. Additionally, UTM systems can struggle with latency issues if subject to too much network activity. Also, a UTM might not perform as well as software or a device with a single dedicated security function. To some extent, NGFW and UTM are just marketing terms. UTM is commonly deployed in small and medium-sized businesses that require a comprehensive security solution but have limited resources and IT expertise. A UTM is seen as a turnkey \"do everything\" solution, while a NGFW is an enterprise product with fewer features but better performance. Stateless firewall\tA basic packet filtering firewall is stateless. This means that it does not preserve information about network sessions. Each packet is analyzed independently, with no record of previously processed packets. This type of filtering requires the least processing effort, but it can be vulnerable to attacks spread over a sequence of packets. A stateless firewall can also introduce problems in traffic flow, especially when using some sort of load balancing or when clients or servers need to use dynamically assigned ports. Stateful firewall\tA stateful inspection firewall tracks information about the session established between two hosts. All firewalls now incorporate some level of stateful inspection capability. Session data is stored in a state table. When a packet arrives, the firewall checks it to confirm whether it belongs to an existing connection. If it does not, it applies the ordinary packet filtering rules to determine whether to allow it. Once the connection has been allowed, the firewall usually allows traffic to pass unmonitored in order to conserve processing effort. Layer 4 firewall\tLayer 4 is the OSI transport layer. A layer 4 firewall examines the TCP three-way handshake to distinguish new from established connections. A legitimate TCP connection should follow a SYN > SYN/ACK > ACK sequence to establish a session, which is then tracked using sequence numbers. Deviations from this, such as SYN without ACK or sequence number anomalies, can be dropped as malicious flooding or session hijacking attempts. The firewall can be configured to respond to such attacks by blocking source IP addresses and throttling sessions. It can also track UDP traffic, though this is harder as UDP is a protocol without connections. It is also likely to be able to detect IP header and ICMP anomalies. Layer 7 firewall A layer 7 firewall can inspect the headers and payload of application-layer packets. One key feature is to verify the application protocol matches the port because malware can try to send raw TCP data over port 80 just because port 80 is open, for instance. As another example, a web application firewall could analyze the HTTP headers and the webpage formatting code present in HTTP packets to identify strings that match a pattern in its threat database. Application-aware firewalls have many different names, including application layer gateway, stateful multilayer inspection, and deep packet inspection. Application layer gateways offer features such as reassembling entire messages and stopping each packet at the firewall for inspection. Application-aware devices have to be configured with separate filters for each type of traffic (HTTP and HTTPS, SMTP/POP/IMAP, FTP, and so on). ACLs and Firewall Rules An access control list (ACL) is a list of permissions associated with a network object, such as a router or switch, that controls traffic at a network interface level. ACLs typically use packet information like source and destination IP addresses, port numbers, and the protocol to decide whether to permit or deny the traffic. They are usually implemented on network devices to provide traffic control across the network, adding a layer of security and efficiency. In contrast, a firewall rule dictates how firewalls should handle inbound or outbound network traffic for specific IP addresses, IP ranges, or network interfaces. Firewalls typically provide both network and application-level control. They are designed to protect a network perimeter by preventing unauthorized access to or from a network. Firewall rules can be based on various factors, such as IP addresses, port numbers, protocols, or even specific application traffic patterns. The rules in a firewall's ACL are processed from top to bottom. If traffic matches one of the rules, then it is allowed to pass; consequently, the most specific rules are placed at the top. The final default rule is typically to block any traffic that has not matched a rule (implicit deny). If the firewall does not have a default implicit deny rule, an explicit deny all rule can be added manually to the end of the ACL. Screenshot used with permission from IPFire Description Each rule can specify whether to block or allow traffic based on several parameters, often referred to as tuples. If you think of each rule being like a row in a database, the tuples are the columns. For example, in the previous screenshot, the tuples include Protocol, Source (address), (Source) Port, Destination (address), (Destination) Port, and so on. Even the simplest packet-filtering firewall can be complex to configure securely. It is essential to create a written policy describing what a filter ruleset should do and to test the configuration as far as possible to ensure that the ACLs you have set up work as intended. Also, test and document changes made to ACLs. Some other basic principles include the following: Block incoming requests from internal or private IP addresses (that have obviously been spoofed). Block incoming requests from protocols that should only function at a local network level, such as ICMP, DHCP, or routing protocol traffic. Use penetration testing to confirm the configuration is secure. Log access attempts and monitor the logs for suspicious activity. Take the usual steps to secure the hardware on which the firewall is running and use the management interface. For instance, a firewall rule can be specifically designed to permit or deny traffic based on the TCP or UDP port numbers that a service operates on. If a web server on a network should only allow incoming HTTP and HTTPS traffic, rules could be set up to allow traffic only on ports 80 (HTTP) and 443 (HTTPS), the standard ports for these services. Similarly, rules can be defined to restrict certain protocols such as FTP or SSH from entering the network if they are not needed, thereby reducing the potential attack surface. Additionally, you can use firewall rules to restrict outgoing traffic to prevent certain types of communication from inside the network. For instance, a rule can block all outgoing traffic to port 25 (SMTP) to prevent a compromised machine within the network from sending out spam emails.",
      "summary": "This lesson on firewalls in the CompTIA Security+ course explores various types of firewalls, including host-based, network-based, web application firewalls (WAFs), and next-generation firewalls (NGFWs), each serving distinct roles in monitoring and controlling network traffic to protect against unauthorized access and cyber threats. It also discusses access control lists (ACLs) and firewall rules, which dictate how traffic is managed based on specific parameters like IP addresses and protocols, emphasizing the importance of proper configuration and testing to ensure network security. Practical applications include using firewalls to filter traffic, prevent attacks, and manage network access effectively.",
      "metadata": {
        "chapter_num": "5",
        "section_num": "5.4.2",
        "title": "Firewall Facts",
        "content_type": "text",
        "filename": "5.4.2_Firewall_Facts_[text].txt",
        "file_path": "data_raw/05_Network_Architecture/5.4.2_Firewall_Facts_[text].txt",
        "word_count": 1708,
        "has_content": true
      },
      "section_header": "5.4.2 Firewall Facts",
      "timestamp_range": null
    }
  ],
  "num_chunks": 2
}