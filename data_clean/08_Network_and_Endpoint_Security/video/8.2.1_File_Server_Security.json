{
  "metadata": {
    "chapter_num": "8",
    "section_num": "8.2.1",
    "title": "File Server Security",
    "content_type": "video",
    "filename": "8.2.1_File_Server_Security_[video].txt",
    "file_path": "data_raw/08_Network_and_Endpoint_Security/8.2.1_File_Server_Security_[video].txt",
    "word_count": 1244,
    "has_content": true
  },
  "full_content": "Transcript close interactive script File servers are an attractive target because they almost always store some type of valuable data, such as client contacts, credit card information, employee files, company performance records--the list goes on and on. In this lesson, we'll look at some steps you should take to properly secure your organization's file servers. Let's start by looking at some of the best practices you should follow when it comes to file server security. Keep in mind that these are generic best practices that can be applied to any type of file server, whether it's a dedicated NAS, a SAN, a Microsoft server, or a Linux server. The first best practice is to keep all file servers physically secure. Remember, it's very easy for someone to gain access to data if they have physical access to a system, so employ the appropriate physical controls with your file servers as you would with any other networking hardware device. Next, is the principle of least privilege. This is the concept that users should only have access to the information and resources that are necessary for them to perform their job, and that's it. They shouldn't have any more privileges than they need. This helps prevent privilege creep, where a user slowly accumulates more and more privilege than they need to perform their job. Another best practice is to use full-disk encryption on all storage mediums. This may or may not be possible for your organization depending on its policies. Encrypting an entire drive and keeping it encrypted as people work requires a significant amount of resources. Due to this resource overhead, it might not be feasible to use full-disk encryption. Instead, you might want to consider only encrypting backups. Another option is to fully decrypt drives when they're powered on and encrypt them when the system shuts down. This may not prevent someone from transferring files to a USB drive, but does prevent someone physically stealing the entire drive or server. Another security best practice that applies to almost every system, not just files servers, is to remove unnecessary software and disable unused services. You can think of this as a principle of least privilege with applications. In other words, you should only have the applications and services that are necessary for the file server to function, and nothing more. Having unused applications or services increases the attack surface area of a system and makes securing it that much harder. In addition, the system is more susceptible to zero-day attacks. The next practice you should employ is auditing. Make sure that your file server has proper auditing enabled that can track user behavior, such as when files are accessed, modified, deleted, and moved. This helps you identify abnormal behavior on the system and can even help you detect that your system has been compromised. The last security best practice is to use implicit deny access control lists, or ACLs. ACLs control the system's permission. A good security practice is to prevent access to everything that isn't explicitly granted. In other words, deny access to everyone except people with explicitly granted permissions. This control is a part of the concept of least privilege mentioned earlier. The opposite of implicit deny is explicit deny, meaning that you're only looking for people you want to deny access to. The problem with this approach is that you have to do a bit of guesswork and research to deny access to files. And if you happen to forget about a particular group or file tree, you could inadvertently give everyone access to sensitive files. As a result, your system will be more secure if you use implicit deny. At some point, we all need to download or transmit files using the internet, which is inherently unsecure. Let's talk about different ways files can be transmitted across a network. Some of these protocols are secure, and some aren't. As a security administrator, you need to know the difference and decide which of these protocols to use on your systems. File Transfer Protocol, or FTP, is an older TCP/IP protocol that's used for transferring files across systems. It was adopted as a TCP/IP standard through RFC 959 in 1985. FTP is inherently unsecure since it doesn't encrypt data, including usernames and passwords. As such, FTP shouldn't be used for transferring sensitive data over an unsecure network such as the internet. Another problem with FTP is that it allows anonymous user access. This option can be disabled, but it's still a security risk. If you must use FTP, there are ways to use it more securely by pairing it with an encryption protocol. There are a couple of ways to do this. The first way is to use a VPN connection that wraps all communications, FTP packets included, in an encrypted data packet. This would encrypt all traffic between the host and the FTP file server. IPsec or SSH can be used to create secure tunneling with FTP to secure the transmission. When use with an SSH tunnel, FTP is called FTP over SSH, or Secure FTP. Another way is to use FTPS. FTPS uses SSL and TLS encryption to secure data transmissions. FTPS is similar to HTTPS in that it uses the SSL and TLS cryptographic protocols to secure communications and also requires the use of SSL certificates to encrypt traffic. Another protocol that you can use is the Secure Copy Protocol, or SCP. SCP is similar to the Linux copy command cp. SCP uses the Secure Shell Protocol, or SSH, which is a secure tunnel. SCP is an older protocol that's entirely text-basedâ€”that is, you need to type the command, including the directories to transmit, into a command line interface. While it's secure, it doesn't offer any type of directory traversing. As a replacement for SCP, you can use SFTP. SFTP stands for Secure Shell File Transfer Protocol. Files are transferred through an SSH tunnel. SFTP isn't related to FTP at all. They're two completely different, incompatible protocols. SFTP typically uses SSH v2, the more secure version of Secure Shell Protocol. It uses a graphical interface, and it's more user-friendly. That's it for this lesson. In this video, we discussed several best practices that can be used to secure your file servers and your organization's resources. We also discussed how to use an encrypted protocol to reduce the opportunity for an attacker to see sensitive information as you copy files across a network.",
  "chunks": [
    {
      "chunk_id": "8.2.1_chunk_1",
      "content": "File servers are an attractive target because they almost always store some type of valuable data, such as client contacts, credit card information, employee files, company performance records--the list goes on and on. In this lesson, we'll look at some steps you should take to properly secure your organization's file servers. Let's start by looking at some of the best practices you should follow when it comes to file server security. Keep in mind that these are generic best practices that can be applied to any type of file server, whether it's a dedicated NAS, a SAN, a Microsoft server, or a Linux server.",
      "summary": "File server security is crucial due to the sensitive data they often contain, including personal and financial information. Best practices for securing file servers encompass a range of strategies applicable to various server types, such as NAS, SAN, Microsoft, and Linux servers. Implementing these security measures helps protect valuable organizational data from unauthorized access and potential breaches.",
      "metadata": {
        "chapter_num": "8",
        "section_num": "8.2.1",
        "title": "File Server Security",
        "content_type": "video",
        "filename": "8.2.1_File_Server_Security_[video].txt",
        "file_path": "data_raw/08_Network_and_Endpoint_Security/8.2.1_File_Server_Security_[video].txt",
        "word_count": 1244,
        "has_content": true
      },
      "section_header": "File Server Security",
      "timestamp_range": ""
    },
    {
      "chunk_id": "8.2.1_chunk_2",
      "content": "The first best practice is to keep all file servers physically secure. Remember, it's very easy for someone to gain access to data if they have physical access to a system, so employ the appropriate physical controls with your file servers as you would with any other networking hardware device. Next, is the principle of least privilege. This is the concept that users should only have access to the information and resources that are necessary for them to perform their job, and that's it. They shouldn't have any more privileges than they need. This helps prevent privilege creep, where a user slowly accumulates more and more privilege than they need to perform their job. Another best practice is to use full-disk encryption on all storage mediums. This may or may not be possible for your organization depending on its policies. Encrypting an entire drive and keeping it encrypted as people work requires a significant amount of resources. Due to this resource overhead, it might not be feasible to use full-disk encryption. Instead, you might want to consider only encrypting backups. Another option is to fully decrypt drives when they're powered on and encrypt them when the system shuts down. This may not prevent someone from transferring files to a USB drive, but does prevent someone physically stealing the entire drive or server. Another security best practice that applies to almost every system, not just files servers, is to remove unnecessary software and disable unused services. You can think of this as a principle of least privilege with applications. In other words, you should only have the applications and services that are necessary for the file server to function, and nothing more. Having unused applications or services increases the attack surface area of a system and makes securing it that much harder. In addition, the system is more susceptible to zero-day attacks. The next practice you should employ is auditing. Make sure that your file server has proper auditing enabled that can track user behavior, such as when files are accessed, modified, deleted, and moved. This helps you identify abnormal behavior on the system and can even help you detect that your system has been compromised. The last security best practice is to use implicit deny access control lists, or ACLs. ACLs control the system's permission. A good security practice is to prevent access to everything that isn't explicitly granted. In other words, deny access to everyone except people with explicitly granted permissions. This control is a part of the concept of least privilege mentioned earlier. The opposite of implicit deny is explicit deny, meaning that you're only looking for people you want to deny access to. The problem with this approach is that you have to do a bit of guesswork and research to deny access to files. And if you happen to forget about a particular group or file tree, you could inadvertently give everyone access to sensitive files. As a result, your system will be more secure if you use implicit deny.",
      "summary": "The best practices for cybersecurity emphasize the importance of physical security for file servers, implementing the principle of least privilege to limit user access, and utilizing full-disk encryption or alternative encryption methods for data protection. Additionally, removing unnecessary software and disabling unused services reduces the attack surface, while proper auditing helps track user behavior to identify potential security breaches. Finally, employing implicit deny access control lists enhances security by restricting access to only those users with explicitly granted permissions.",
      "metadata": {
        "chapter_num": "8",
        "section_num": "8.2.1",
        "title": "File Server Security",
        "content_type": "video",
        "filename": "8.2.1_File_Server_Security_[video].txt",
        "file_path": "data_raw/08_Network_and_Endpoint_Security/8.2.1_File_Server_Security_[video].txt",
        "word_count": 1244,
        "has_content": true
      },
      "section_header": "Best Practices",
      "timestamp_range": ""
    },
    {
      "chunk_id": "8.2.1_chunk_3",
      "content": "At some point, we all need to download or transmit files using the internet, which is inherently unsecure. Let's talk about different ways files can be transmitted across a network. Some of these protocols are secure, and some aren't. As a security administrator, you need to know the difference and decide which of these protocols to use on your systems. File Transfer Protocol, or FTP, is an older TCP/IP protocol that's used for transferring files across systems. It was adopted as a TCP/IP standard through RFC 959 in 1985. FTP is inherently unsecure since it doesn't encrypt data, including usernames and passwords. As such, FTP shouldn't be used for transferring sensitive data over an unsecure network such as the internet. Another problem with FTP is that it allows anonymous user access. This option can be disabled, but it's still a security risk. If you must use FTP, there are ways to use it more securely by pairing it with an encryption protocol. There are a couple of ways to do this. The first way is to use a VPN connection that wraps all communications, FTP packets included, in an encrypted data packet. This would encrypt all traffic between the host and the FTP file server. IPsec or SSH can be used to create secure tunneling with FTP to secure the transmission. When use with an SSH tunnel, FTP is called FTP over SSH, or Secure FTP. Another way is to use FTPS. FTPS uses SSL and TLS encryption to secure data transmissions. FTPS is similar to HTTPS in that it uses the SSL and TLS cryptographic protocols to secure communications and also requires the use of SSL certificates to encrypt traffic. Another protocol that you can use is the Secure Copy Protocol, or SCP. SCP is similar to the Linux copy command cp. SCP uses the Secure Shell Protocol, or SSH, which is a secure tunnel. SCP is an older protocol that's entirely text-basedâ€”that is, you need to type the command, including the directories to transmit, into a command line interface. While it's secure, it doesn't offer any type of directory traversing. As a replacement for SCP, you can use SFTP. SFTP stands for Secure Shell File Transfer Protocol. Files are transferred through an SSH tunnel. SFTP isn't related to FTP at all. They're two completely different, incompatible protocols. SFTP typically uses SSH v2, the more secure version of Secure Shell Protocol. It uses a graphical interface, and it's more user-friendly.",
      "summary": "This section covers the distinction between secure and unsecure file transfer protocols, emphasizing the risks associated with using FTP, which transmits data without encryption. Secure alternatives include FTPS, which utilizes SSL/TLS for encryption, and SFTP, which operates over an SSH tunnel for enhanced security. Understanding these protocols is crucial for security administrators to ensure safe data transmission over unsecure networks.",
      "metadata": {
        "chapter_num": "8",
        "section_num": "8.2.1",
        "title": "File Server Security",
        "content_type": "video",
        "filename": "8.2.1_File_Server_Security_[video].txt",
        "file_path": "data_raw/08_Network_and_Endpoint_Security/8.2.1_File_Server_Security_[video].txt",
        "word_count": 1244,
        "has_content": true
      },
      "section_header": "Secure Protocols vs. Unsecure Protocols",
      "timestamp_range": ""
    },
    {
      "chunk_id": "8.2.1_chunk_4",
      "content": "That's it for this lesson. In this video, we discussed several best practices that can be used to secure your file servers and your organization's resources. We also discussed how to use an encrypted protocol to reduce the opportunity for an attacker to see sensitive information as you copy files across a network.",
      "summary": "In this lesson, key best practices for securing file servers and organizational resources were highlighted, emphasizing the importance of using encrypted protocols to protect sensitive information during file transfers across networks. Implementing these strategies helps mitigate the risk of unauthorized access and enhances overall data security.",
      "metadata": {
        "chapter_num": "8",
        "section_num": "8.2.1",
        "title": "File Server Security",
        "content_type": "video",
        "filename": "8.2.1_File_Server_Security_[video].txt",
        "file_path": "data_raw/08_Network_and_Endpoint_Security/8.2.1_File_Server_Security_[video].txt",
        "word_count": 1244,
        "has_content": true
      },
      "section_header": "Summary",
      "timestamp_range": ""
    }
  ],
  "num_chunks": 4
}