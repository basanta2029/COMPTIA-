{
  "metadata": {
    "chapter_num": "8",
    "section_num": "8.6.3",
    "title": "Wireless Authentication and Access Methods",
    "content_type": "video",
    "filename": "8.6.3_Wireless_Authentication_and_Access_Methods_[video].txt",
    "file_path": "data_raw/08_Network_and_Endpoint_Security/8.6.3_Wireless_Authentication_and_Access_Methods_[video].txt",
    "word_count": 1251,
    "has_content": true
  },
  "full_content": "Transcript close interactive script Wireless networks encrypt communications using a security protocol, which is typically WPA2 or WPA3. But in order to authenticate users and distribute authentication keys, other methods are generally used. In this lesson, we'll go over some of the different access methods we can implement to connect to a wireless network as well as the authentication protocols we often find in enterprise environments. Depending on the environment, we can use different methods to connect users to a wireless network. Let's take a look at some of these methods. The first and probably most common access method is to use a pre-shared key, or PSK. A PSK is simply a passphrase that we type in to connect to a network. If we don't want to type in the passphrase to connect each and every device, we can use Wi-Fi Protected Setup, or WPS, to simplify the process. WPS only works with a network that uses a pre-shared key and WPA2. On the access point, there's usually a button that makes WPA2 start to search for devices in range. On the connecting device, there's probably a WPS button that automatically joins the device to the access point. You need to enter a unique eight-number access point pin if the connecting device doesn't have a button like this. Some devices and access points can also use Near Field Communication, or NFC, during the WPS process to connect to each other. Our other option is to simply have an open network. This means that no authentication takes place, and anyone can connect to the network at will. This should only be used by public establishments that want to offer free wireless access. Many open networks implement a captive portal. Captive portals force a user to view and interact with them before accessing the network. Basically, you're initially able connect your device to the wireless network. But before you can access the internet, you're redirected to a captive portal page. You might be prompted to agree to the network's terms and conditions or maybe even asked to pay a fee before you can proceed. These portals are used a great deal today, and you've most likely used one before. In an enterprise environment, using a PSK isn't very secure or efficient. Enterprise networks usually make use the 802.1x Protocol to authenticate users to the wireless network. 802.1x authentication is one of the most secure ways to enforce wireless network authentication. On a wired network, once a user is authenticated, the port they're connected to is activated. The port remains off if the user's activation fails. We can implement the 802.1x Protocol in a wireless network by enabling a virtual port when the user is authenticated. There are three components to an 802.1x setup. The first is the supplicant, or wireless client. Then we have the authenticator, which is responsible for handling the communications between the supplicant and the authentication serverâ€”the third component. Know that oftentimes, the authentication server is a RADIUS server. When you use a RADIUS server, the authenticator is also known as the network access server, or NAS. RADIUS stands for Remote Authentication Dial-In Service. It was developed in 1991 and was originally used to authenticate users to remote networks over dial-up networks. We still use it today to remotely authenticate users. Obviously, though, we don't do this over dial-up connections anymore, which are more or less antiquated. RADIUS is known as a triple-A protocol, meaning that it provides authentication, authorization, and accounting management. When using 802.1x with RADIUS, the client sends their credentials to the authenticator, or NAS. The NAS forwards the credentials to the RADIUS server to verify. If you use a Windows server, this is done using Active Directory. Then the server sends back the verification and user rights to the NAS, which forwards them back to the client. Then the client can access network resources. Using 802.1x authentication significantly increases your wireless network security. To ensure that the authentication information being sent between these devices is secure, the Extensible Authentication Protocol, or EAP, is used. EAP isn't actually a specific protocol; it's merely a framework in which other protocols work. As a security administrator, you need to be familiar with several different EAP protocols. Let's start by looking at the Protected Extensible Authentication Protocol, or PEAP. PEAP was created collaboratively by Cisco, Microsoft, and RSA Security. This protocol encapsulates the authentication communications within a TLS tunnel and exclusively uses a server-side certificate to authenticate Wi-Fi clients. This simplifies network implementation and administration. Next, we have EAP Flexible Authentication via Secure Tunneling, or EAP-FAST. EAP-FAST was created by Cisco, and it works by making a TLS tunnel that doesn't require an authentication server certificate. Instead, this protocol uses a Protected Access Credential, or PAC, to authenticate users. Then, we have EAP Transport Layer Security, or EAP-TLS. EAP-TLS is the original and probably most secure of the wireless EAP authentication protocols. Because it's the original, it's also the most widely supported. The nice thing about EAP-TLS is that it requires client-side certificates in addition to server-side certificates. The certificate fully encrypts the authentication handshake between client and server and is then used in place of a password, making it practically impossible to crack. But because each client requires an installed CA-signed PKI certificate, EAP-TLS is much more labor intensive and expensive to implement than other protocols. The final protocol is EAP Tunneled Transport Layer Security, or EAP-TTLS. EAP-TTLS is essentially an updated version of EAP-TLS. The biggest difference is that we only need a certificate on the server. This greatly simplifies the implementation process since we don't need a certificate on each wireless device. EAP-TTLS has been supported natively since Windows 8. By using the right authentication protocol, you can greatly increase your wireless network's security and further protect it from attacks. That'll wrap up this lesson. In this lesson, we looked at the different wireless network access methods we can implement, including pre-shared keys, server authentication, and open networks. We also went over how WPS and captive portals work. Then we saw the various authentication methods that can be used for wireless networks. First, we looked at RADIUS and how it utilizes 802.1x authentication. We finished up by looking at the different EAP protocols, which include PEAP, EAP-FAST, EAP-TLS, and EAP-TTLS.",
  "chunks": [
    {
      "chunk_id": "8.6.3_chunk_1",
      "content": "Wireless networks encrypt communications using a security protocol, which is typically WPA2 or WPA3. But in order to authenticate users and distribute authentication keys, other methods are generally used. In this lesson, we'll go over some of the different access methods we can implement to connect to a wireless network as well as the authentication protocols we often find in enterprise environments.",
      "summary": "This section covers the encryption of wireless communications through security protocols like WPA2 and WPA3, emphasizing the importance of authentication methods for user access and key distribution. It explores various access methods and authentication protocols commonly utilized in enterprise environments to ensure secure wireless connectivity. Understanding these concepts is crucial for implementing robust security measures in wireless networks.",
      "metadata": {
        "chapter_num": "8",
        "section_num": "8.6.3",
        "title": "Wireless Authentication and Access Methods",
        "content_type": "video",
        "filename": "8.6.3_Wireless_Authentication_and_Access_Methods_[video].txt",
        "file_path": "data_raw/08_Network_and_Endpoint_Security/8.6.3_Wireless_Authentication_and_Access_Methods_[video].txt",
        "word_count": 1251,
        "has_content": true
      },
      "section_header": "Wireless Authentication and Access Methods",
      "timestamp_range": ""
    },
    {
      "chunk_id": "8.6.3_chunk_2",
      "content": "Depending on the environment, we can use different methods to connect users to a wireless network. Let's take a look at some of these methods.",
      "summary": "The Access Methods section of the CompTIA Security+ course explores various techniques for connecting users to wireless networks, emphasizing the importance of selecting appropriate methods based on the specific environment. Key topics include authentication protocols, encryption standards, and the implementation of secure access controls. Practical applications focus on ensuring user connectivity while maintaining network security and integrity.",
      "metadata": {
        "chapter_num": "8",
        "section_num": "8.6.3",
        "title": "Wireless Authentication and Access Methods",
        "content_type": "video",
        "filename": "8.6.3_Wireless_Authentication_and_Access_Methods_[video].txt",
        "file_path": "data_raw/08_Network_and_Endpoint_Security/8.6.3_Wireless_Authentication_and_Access_Methods_[video].txt",
        "word_count": 1251,
        "has_content": true
      },
      "section_header": "Access Methods",
      "timestamp_range": ""
    },
    {
      "chunk_id": "8.6.3_chunk_3",
      "content": "The first and probably most common access method is to use a pre-shared key, or PSK. A PSK is simply a passphrase that we type in to connect to a network. If we don't want to type in the passphrase to connect each and every device, we can use Wi-Fi Protected Setup, or WPS, to simplify the process.",
      "summary": "The Pre-Shared Key (PSK) is a widely used access method for network connections, requiring users to input a passphrase for authentication. To streamline this process and avoid repeated entry of the passphrase, Wi-Fi Protected Setup (WPS) can be utilized, simplifying device connections to the network. Understanding PSK and WPS is essential for implementing secure wireless network access.",
      "metadata": {
        "chapter_num": "8",
        "section_num": "8.6.3",
        "title": "Wireless Authentication and Access Methods",
        "content_type": "video",
        "filename": "8.6.3_Wireless_Authentication_and_Access_Methods_[video].txt",
        "file_path": "data_raw/08_Network_and_Endpoint_Security/8.6.3_Wireless_Authentication_and_Access_Methods_[video].txt",
        "word_count": 1251,
        "has_content": true
      },
      "section_header": "Pre-Shared Key",
      "timestamp_range": ""
    },
    {
      "chunk_id": "8.6.3_chunk_4",
      "content": "WPS only works with a network that uses a pre-shared key and WPA2. On the access point, there's usually a button that makes WPA2 start to search for devices in range. On the connecting device, there's probably a WPS button that automatically joins the device to the access point. You need to enter a unique eight-number access point pin if the connecting device doesn't have a button like this. Some devices and access points can also use Near Field Communication, or NFC, during the WPS process to connect to each other.",
      "summary": "Wi-Fi Protected Setup (WPS) simplifies the process of connecting devices to a secure network using WPA2 and a pre-shared key. It typically involves pressing a button on both the access point and the connecting device, or entering a unique eight-digit PIN if a button is unavailable. Additionally, some devices can utilize Near Field Communication (NFC) to facilitate the WPS connection.",
      "metadata": {
        "chapter_num": "8",
        "section_num": "8.6.3",
        "title": "Wireless Authentication and Access Methods",
        "content_type": "video",
        "filename": "8.6.3_Wireless_Authentication_and_Access_Methods_[video].txt",
        "file_path": "data_raw/08_Network_and_Endpoint_Security/8.6.3_Wireless_Authentication_and_Access_Methods_[video].txt",
        "word_count": 1251,
        "has_content": true
      },
      "section_header": "Wi-Fi Protected Setup",
      "timestamp_range": ""
    },
    {
      "chunk_id": "8.6.3_chunk_5",
      "content": "Our other option is to simply have an open network. This means that no authentication takes place, and anyone can connect to the network at will. This should only be used by public establishments that want to offer free wireless access.",
      "summary": "An open network allows unrestricted access without authentication, enabling anyone to connect freely. This type of network is typically suitable for public establishments aiming to provide complimentary wireless access. However, it poses significant security risks, making it essential to implement appropriate safeguards in such environments.",
      "metadata": {
        "chapter_num": "8",
        "section_num": "8.6.3",
        "title": "Wireless Authentication and Access Methods",
        "content_type": "video",
        "filename": "8.6.3_Wireless_Authentication_and_Access_Methods_[video].txt",
        "file_path": "data_raw/08_Network_and_Endpoint_Security/8.6.3_Wireless_Authentication_and_Access_Methods_[video].txt",
        "word_count": 1251,
        "has_content": true
      },
      "section_header": "Open Network",
      "timestamp_range": ""
    },
    {
      "chunk_id": "8.6.3_chunk_6",
      "content": "Many open networks implement a captive portal. Captive portals force a user to view and interact with them before accessing the network. Basically, you're initially able connect your device to the wireless network. But before you can access the internet, you're redirected to a captive portal page. You might be prompted to agree to the network's terms and conditions or maybe even asked to pay a fee before you can proceed. These portals are used a great deal today, and you've most likely used one before.",
      "summary": "A captive portal is a web page that users must interact with before gaining access to an open network, typically requiring agreement to terms and conditions or payment. This security measure is commonly employed in public Wi-Fi networks to manage user access and ensure compliance with network policies. Understanding captive portals is essential for recognizing how they enhance network security and user accountability.",
      "metadata": {
        "chapter_num": "8",
        "section_num": "8.6.3",
        "title": "Wireless Authentication and Access Methods",
        "content_type": "video",
        "filename": "8.6.3_Wireless_Authentication_and_Access_Methods_[video].txt",
        "file_path": "data_raw/08_Network_and_Endpoint_Security/8.6.3_Wireless_Authentication_and_Access_Methods_[video].txt",
        "word_count": 1251,
        "has_content": true
      },
      "section_header": "Captive Portal",
      "timestamp_range": ""
    },
    {
      "chunk_id": "8.6.3_chunk_7",
      "content": "In an enterprise environment, using a PSK isn't very secure or efficient. Enterprise networks usually make use the 802.1x Protocol to authenticate users to the wireless network.",
      "summary": "In enterprise environments, relying on Pre-Shared Keys (PSK) for authentication is inadequate due to security and efficiency concerns. Instead, the 802.1x Protocol is utilized to provide robust user authentication for wireless networks, enhancing security by enabling individual user credentials and centralized management. This approach ensures a more secure and scalable authentication process suitable for larger organizations.",
      "metadata": {
        "chapter_num": "8",
        "section_num": "8.6.3",
        "title": "Wireless Authentication and Access Methods",
        "content_type": "video",
        "filename": "8.6.3_Wireless_Authentication_and_Access_Methods_[video].txt",
        "file_path": "data_raw/08_Network_and_Endpoint_Security/8.6.3_Wireless_Authentication_and_Access_Methods_[video].txt",
        "word_count": 1251,
        "has_content": true
      },
      "section_header": "Authentication Protocols",
      "timestamp_range": ""
    },
    {
      "chunk_id": "8.6.3_chunk_8",
      "content": "802.1x authentication is one of the most secure ways to enforce wireless network authentication. On a wired network, once a user is authenticated, the port they're connected to is activated. The port remains off if the user's activation fails. We can implement the 802.1x Protocol in a wireless network by enabling a virtual port when the user is authenticated. There are three components to an 802.1x setup. The first is the supplicant, or wireless client. Then we have the authenticator, which is responsible for handling the communications between the supplicant and the authentication serverâ€”the third component. Know that oftentimes, the authentication server is a RADIUS server. When you use a RADIUS server, the authenticator is also known as the network access server, or NAS.",
      "summary": "802.1x authentication is a robust method for securing both wired and wireless networks by controlling port activation based on user authentication status. It involves three key components: the supplicant (wireless client), the authenticator (which facilitates communication), and the authentication server, typically a RADIUS server. This protocol enhances network security by ensuring that only authenticated users can access network resources.",
      "metadata": {
        "chapter_num": "8",
        "section_num": "8.6.3",
        "title": "Wireless Authentication and Access Methods",
        "content_type": "video",
        "filename": "8.6.3_Wireless_Authentication_and_Access_Methods_[video].txt",
        "file_path": "data_raw/08_Network_and_Endpoint_Security/8.6.3_Wireless_Authentication_and_Access_Methods_[video].txt",
        "word_count": 1251,
        "has_content": true
      },
      "section_header": "802.1x",
      "timestamp_range": ""
    },
    {
      "chunk_id": "8.6.3_chunk_9",
      "content": "RADIUS stands for Remote Authentication Dial-In Service. It was developed in 1991 and was originally used to authenticate users to remote networks over dial-up networks. We still use it today to remotely authenticate users. Obviously, though, we don't do this over dial-up connections anymore, which are more or less antiquated. RADIUS is known as a triple-A protocol, meaning that it provides authentication, authorization, and accounting management. When using 802.1x with RADIUS, the client sends their credentials to the authenticator, or NAS. The NAS forwards the credentials to the RADIUS server to verify. If you use a Windows server, this is done using Active Directory. Then the server sends back the verification and user rights to the NAS, which forwards them back to the client. Then the client can access network resources. Using 802.1x authentication significantly increases your wireless network security. To ensure that the authentication information being sent between these devices is secure, the Extensible Authentication Protocol, or EAP, is used. EAP isn't actually a specific protocol; it's merely a framework in which other protocols work. As a security administrator, you need to be familiar with several different EAP protocols. Let's start by looking at the Protected Extensible Authentication Protocol, or PEAP.",
      "summary": "RADIUS (Remote Authentication Dial-In Service) is a triple-A protocol that provides authentication, authorization, and accounting management for remote user access, originally designed for dial-up networks but still widely used today. In conjunction with 802.1x, RADIUS enhances wireless network security by verifying user credentials through a Network Access Server (NAS) and a RADIUS server, often integrated with Active Directory on Windows servers. Security administrators should also be familiar with various Extensible Authentication Protocol (EAP) frameworks, such as Protected EAP (PEAP), to ensure secure authentication processes.",
      "metadata": {
        "chapter_num": "8",
        "section_num": "8.6.3",
        "title": "Wireless Authentication and Access Methods",
        "content_type": "video",
        "filename": "8.6.3_Wireless_Authentication_and_Access_Methods_[video].txt",
        "file_path": "data_raw/08_Network_and_Endpoint_Security/8.6.3_Wireless_Authentication_and_Access_Methods_[video].txt",
        "word_count": 1251,
        "has_content": true
      },
      "section_header": "RADIUS",
      "timestamp_range": ""
    },
    {
      "chunk_id": "8.6.3_chunk_10",
      "content": "PEAP was created collaboratively by Cisco, Microsoft, and RSA Security. This protocol encapsulates the authentication communications within a TLS tunnel and exclusively uses a server-side certificate to authenticate Wi-Fi clients. This simplifies network implementation and administration.",
      "summary": "PEAP (Protected Extensible Authentication Protocol) is a security protocol developed by Cisco, Microsoft, and RSA Security that encapsulates authentication communications within a TLS tunnel, enhancing Wi-Fi client security. It utilizes a server-side certificate for authentication, streamlining network implementation and management. This approach simplifies the administration of secure wireless networks while ensuring robust protection against unauthorized access.",
      "metadata": {
        "chapter_num": "8",
        "section_num": "8.6.3",
        "title": "Wireless Authentication and Access Methods",
        "content_type": "video",
        "filename": "8.6.3_Wireless_Authentication_and_Access_Methods_[video].txt",
        "file_path": "data_raw/08_Network_and_Endpoint_Security/8.6.3_Wireless_Authentication_and_Access_Methods_[video].txt",
        "word_count": 1251,
        "has_content": true
      },
      "section_header": "PEAP",
      "timestamp_range": ""
    },
    {
      "chunk_id": "8.6.3_chunk_11",
      "content": "Next, we have EAP Flexible Authentication via Secure Tunneling, or EAP-FAST. EAP-FAST was created by Cisco, and it works by making a TLS tunnel that doesn't require an authentication server certificate. Instead, this protocol uses a Protected Access Credential, or PAC, to authenticate users. Then, we have EAP Transport Layer Security, or EAP-TLS. EAP-TLS is the original and probably most secure of the wireless EAP authentication protocols. Because it's the original, it's also the most widely supported.",
      "summary": "EAP-FAST (Flexible Authentication via Secure Tunneling) is a Cisco-developed protocol that establishes a TLS tunnel without needing an authentication server certificate, utilizing a Protected Access Credential (PAC) for user authentication. In contrast, EAP-TLS (Transport Layer Security) is the original and most secure wireless EAP authentication protocol, known for its broad support across various systems. Both protocols are essential for securing wireless communications and ensuring user authentication in network environments.",
      "metadata": {
        "chapter_num": "8",
        "section_num": "8.6.3",
        "title": "Wireless Authentication and Access Methods",
        "content_type": "video",
        "filename": "8.6.3_Wireless_Authentication_and_Access_Methods_[video].txt",
        "file_path": "data_raw/08_Network_and_Endpoint_Security/8.6.3_Wireless_Authentication_and_Access_Methods_[video].txt",
        "word_count": 1251,
        "has_content": true
      },
      "section_header": "EAP-FAST",
      "timestamp_range": ""
    },
    {
      "chunk_id": "8.6.3_chunk_12",
      "content": "The nice thing about EAP-TLS is that it requires client-side certificates in addition to server-side certificates. The certificate fully encrypts the authentication handshake between client and server and is then used in place of a password, making it practically impossible to crack. But because each client requires an installed CA-signed PKI certificate, EAP-TLS is much more labor intensive and expensive to implement than other protocols.",
      "summary": "EAP-TLS is a secure authentication protocol that utilizes both client-side and server-side certificates to encrypt the authentication handshake, effectively replacing passwords and enhancing security. While it offers robust protection against unauthorized access, its implementation is labor-intensive and costly due to the need for each client to have a CA-signed PKI certificate. This makes EAP-TLS a strong choice for environments where security is paramount, despite the higher operational overhead.",
      "metadata": {
        "chapter_num": "8",
        "section_num": "8.6.3",
        "title": "Wireless Authentication and Access Methods",
        "content_type": "video",
        "filename": "8.6.3_Wireless_Authentication_and_Access_Methods_[video].txt",
        "file_path": "data_raw/08_Network_and_Endpoint_Security/8.6.3_Wireless_Authentication_and_Access_Methods_[video].txt",
        "word_count": 1251,
        "has_content": true
      },
      "section_header": "EAP-TLS",
      "timestamp_range": ""
    },
    {
      "chunk_id": "8.6.3_chunk_13",
      "content": "The final protocol is EAP Tunneled Transport Layer Security, or EAP-TTLS. EAP-TTLS is essentially an updated version of EAP-TLS. The biggest difference is that we only need a certificate on the server. This greatly simplifies the implementation process since we don't need a certificate on each wireless device. EAP-TTLS has been supported natively since Windows 8. By using the right authentication protocol, you can greatly increase your wireless network's security and further protect it from attacks.",
      "summary": "EAP-TTLS (EAP Tunneled Transport Layer Security) is an enhanced version of EAP-TLS that requires only a server-side certificate, simplifying deployment by eliminating the need for certificates on individual wireless devices. Supported natively since Windows 8, EAP-TTLS enhances wireless network security by utilizing a robust authentication protocol, thereby providing better protection against potential attacks. This makes it a practical choice for organizations looking to secure their wireless environments efficiently.",
      "metadata": {
        "chapter_num": "8",
        "section_num": "8.6.3",
        "title": "Wireless Authentication and Access Methods",
        "content_type": "video",
        "filename": "8.6.3_Wireless_Authentication_and_Access_Methods_[video].txt",
        "file_path": "data_raw/08_Network_and_Endpoint_Security/8.6.3_Wireless_Authentication_and_Access_Methods_[video].txt",
        "word_count": 1251,
        "has_content": true
      },
      "section_header": "EAP-TTLS",
      "timestamp_range": ""
    },
    {
      "chunk_id": "8.6.3_chunk_14",
      "content": "That'll wrap up this lesson. In this lesson, we looked at the different wireless network access methods we can implement, including pre-shared keys, server authentication, and open networks. We also went over how WPS and captive portals work. Then we saw the various authentication methods that can be used for wireless networks. First, we looked at RADIUS and how it utilizes 802.1x authentication. We finished up by looking at the different EAP protocols, which include PEAP, EAP-FAST, EAP-TLS, and EAP-TTLS.",
      "summary": "This lesson covered various wireless network access methods, including pre-shared keys, server authentication, and open networks, as well as the functionality of WPS and captive portals. It also explored authentication methods for wireless networks, focusing on RADIUS with 802.1x authentication and detailing several EAP protocols such as PEAP, EAP-FAST, EAP-TLS, and EAP-TTLS. Understanding these concepts is essential for securing wireless communications and ensuring proper user authentication.",
      "metadata": {
        "chapter_num": "8",
        "section_num": "8.6.3",
        "title": "Wireless Authentication and Access Methods",
        "content_type": "video",
        "filename": "8.6.3_Wireless_Authentication_and_Access_Methods_[video].txt",
        "file_path": "data_raw/08_Network_and_Endpoint_Security/8.6.3_Wireless_Authentication_and_Access_Methods_[video].txt",
        "word_count": 1251,
        "has_content": true
      },
      "section_header": "Summary",
      "timestamp_range": ""
    }
  ],
  "num_chunks": 14
}