{
  "metadata": {
    "chapter_num": "3",
    "section_num": "3.1.4",
    "title": "Symmetric and Asymmetric Encryption Facts",
    "content_type": "text",
    "filename": "3.1.4_Symmetric_and_Asymmetric_Encryption_Facts_[text].txt",
    "file_path": "/Users/basantabaral/CompTia/data_raw/03_Cryptographic_Solutions/3.1.4_Symmetric_and_Asymmetric_Encryption_Facts_[text].txt",
    "word_count": 1839,
    "has_content": true
  },
  "full_content": "Security Pro 8.0 There are three main types of cryptographic algorithms with different roles to play in the assurance of the security properties: confidentiality, integrity, availability, and non-repudiation. These types are hashing algorithms and two types of encryption ciphers: symmetric and asymmetric. Symmetric encryption Key length Asymmetric encryption Hybrid cryptosystems Ephemeral keys Symmetric Encryption An  encryption algorithm or cipher is a type of cryptographic process that encodes data so that it can be stored or transmitted securely and then decrypted only by its owner or its intended recipient. Using a  key with the encryption cipher ensures that decryption can only be performed by an authorized person. Substitution and Transposition Algorithms It is helpful to consider simple substitution and transposition algorithms to understand how an algorithm works. A substitution cipher involves replacing characters or blocks in the plaintext with different ciphertexts. Simple substitution ciphers rotate or scramble letters of the alphabet. For example, ROT13 rotates each letter 13 places, so A becomes N, for instance. The ciphertext \"Uryyb Jbeyq\" can be decrypted as the plaintext \"Hello World.\" In contrast to substitution ciphers, the units in a transposition cipher stay the same in plaintext and ciphertext, but their order is changed according to some mechanism. Consider how the ciphertext \"HLOOLELWRD\" has been produced: E L W R D The letters are written as columns, and then the rows are concatenated to make the ciphertext. Modern encryption algorithms use these basic techniques of substitution and transposition in complex ways that can defeat attempts at cryptanalysis. Symmetric Algorithms A symmetric algorithm is one in which encryption and decryption are both performed by the same secret key. The secret key must be kept known to authorized persons only. If the key is lost or stolen, the security is breached. Symmetric encryption is used for confidentiality. For example, Alice and Bob can share a confidential file in the following way: Alice and Bob meet to agree which cipher to use and a secret key value. They both record the value of the secret key, making sure that no one else can discover it. Alice encrypts a file using the cipher and key. Alice sends only the ciphertext to Bob over the network. Bob receives the ciphertext and is able to decrypt it by applying the same cipher with his copy of the secret key. Symmetric encryption operation and weaknesses Images © 123RF.com Description Symmetric encryption is very fast. It is used for bulk encryption of large amounts of data. The main problem is how Alice and Bob \"meet\" to agree upon or exchange the key. If Mallory intercepts the key and obtains the ciphertext, the security is broken. Note that symmetric encryption cannot be used for authentication or integrity. Alice and Bob are able to create exactly the same secrets because they both know the same key. The most common symmetric algorithm is the Advanced Encryption Standard (AES), also known as the Rijndael cipher. It was developed by Jaon Daemen and Vincent Rijmen in 2001 as part of a NIST competition held to find a replacement for DES. AES offers three different key lengths of 128, 192, and 256 bits. AES is used in many applications, including 802.11 communications, Bitlocker, and game engines. Other common symmetric algorithms include Data Encryption Standard (DES), Rivest's Cipher (RC), International Data Encryption Algorithm (IDEA), Blowfish, Twofish, and CAST. Key length Encryption algorithms use a key to increase the security of the process. For example, if you consider the substitution cipher ROT13, you should realize that the key is 13. You could use 17 to achieve a different ciphertext from the same method. The key is important because it means that even if the cipher method is known, a message still cannot be decrypted without knowledge of the specific key. A keyspace is the range of values that the key could be. In the ROT13 example, the keyspace is 25 (ROT1. . . ROT25). Using ROT0 or ROT26 would result in ciphertext identical to the plaintext. Using a value greater than 26 to shift through the alphabet multiple times is equivalent to a key from the 1-25 range. ROT0 and ROT26+ are weak keys and should not be used. Modern ciphers use large keyspaces where there are trillions of possible key values. This makes the key difficult to discover via brute force cryptanalysis. Brute force cryptanalysis means attempting decryption of the ciphertext with every possible key value and reading the result to determine if it is still gibberish or plaintext. Keys for modern symmetric ciphers use a pseudorandomly generated number of bits. The number of bits is the key length. For example, the most commonly used symmetric cipher is the Advanced Encryption Standard (AES). This can be used with two key lengths. AES-128 uses a 128-bit key length. A bit can have one of two values (0 or 1), so the number of possible key values is two multiplied by itself a number of times equivalent to the key length. This is written as 2 128, where 2 is the base, and 128 is the exponent. AES-256 has a keyspace of 2 256. This keyspace is not twice as large as AES-128; it is many trillions of times bigger and consequently significantly more resistant to brute force attacks. The drawback of using larger keys is that the computer must use more memory and processor cycles to perform encryption and decryption. Asymmetric Encryption In a symmetric encryption cipher, the same secret key is used to perform both encryption and decryption operations. With an asymmetric algorithm, encryption and decryption are performed by two different but related public and private keys in a key pair. When a public key is used to encrypt a message, only the paired private key can decrypt the ciphertext. The public key cannot be used to decrypt the ciphertext. The keys are generated in a way that makes it impossible to derive the private key from the public key. This means that the key pair owner can distribute the public key to anyone they want to receive secure messages from: Bob generates a key pair and keeps the private key secret. Bob publishes the public key. Alice wants to send Bob a confidential message, so they take a copy of Bob's public key. Alice uses Bob's public key to encrypt the message. Alice sends the ciphertext to Bob. Bob receives the message and is able to decrypt it using their private key. If Mallory has been snooping, they can intercept both the message and the public key. However, Mallory cannot use the public key to decrypt the message, so the system remains secure. Asymmetric encryption Images © 123RF.com Description The drawback of asymmetric encryption is that it involves substantial computing overhead compared to symmetric encryption. Where a large amount of data is being encrypted on disk or transported over a network, asymmetric encryption is inefficient. Rather than being used to encrypt the bulk data directly, the public key cipher can be used to encrypt a symmetric secret key. This allows Alice and Bob to exchange a bulk encryption session key without Mallory being able to learn it. Asymmetric encryption can be implemented using a number of algorithms. Each algorithm has a different recommended key length. The Rivest, Shamir, Adleman (RSA) asymmetric cipher requires a 2,048-bit private key to achieve an acceptable level of security. The Elliptic Curve Cryptography (ECC) asymmetric cipher can use 256-bit private keys to achieve a level of security equivalent to a 3,072-bit RSA key. Asymmetric Algorithm Description Rivest-Shamir-Adleman (RSA) RSA was developed by Ron Rivest, Adi Shamir, and Leonard Adleman. RSA was released shortly after Diffie-Hellman in 1977. RSA is still one of the most commonly used algorithms and helped define the process of using a public key to encrypt data and a private key to decrypt the data. RSA is used extensively for creating digital signatures. Elliptic Curve Cryptography (ECC) Elliptic Curve Cryptology is one of the newer methods being implemented. It was originally introduced in 1985. It did not enter wide usage until 2004. ECC is able to generate smaller keys that are more secure than most other methods. Many websites today use ECC to secure connections and data transmissions. Diffie-Hellman Released in 1976 by Whitfield Diffie and Martin Hellman. Its purpose was to allow two users who have never met to safely create a shared key over a public channel such as the internet. The two users agree on two numbers: a prime number (P) and a generator (g). These numbers can be shared publicly. Each user then randomly generates a private number, or key, unique to themselves. Using the prime number, generator, and private key, each user generates a public key using the following formula: (G^ private number) MOD P The users exchange their public keys, which are then used to create a shared secret key using the following formula: (Shared Public Key^ private number) MOD P Because each public key was generated using the same prime number and generator, each user will come up with the same number for the shared secret key. If a hacker intercepted any of the exchanges, they could not reverse the process without knowing each user's secret number. Diffie-Hellman is frequently implemented in security protocols such as TLS, IPSec, SSH, and others. Digital Signature Algorithm (DSA) DSA was proposed in 1991 by NIST and became the government standard in 1993 DSA is only used for creating digital signatures. It uses a different algorithm than RSA but provides the same level of security. Hybrid Cryptosystems Hybrid cryptosystems combine the efficiency of symmetric encryption with the convenience of asymmetric encryption. A hybrid cryptosystem is used as follows: User1 uses their symmetric private key to encrypt some data. User1 then encrypts that symmetric private key using the recipient's public key and sends both to the recipient. User2, the recipient, uses their private key to decrypt User 1's private key, which is then used to decrypt the message. As long as User2's private key is kept secret, the data remains secure. Hybrid cryptosystems are used with many secure communication methods today, such as TLS. Ephemeral Keys In traditional encrypted communications, static keys are used. This means that the same key is used throughout an entire session. The problem with this is that the longer the keys are used, the more susceptible they become to an attack. Ephemeral keys can be used to resolve this issue. Ephemeral keys are generated for each new session or message sent. For example, perfect forward secrecy (PFS) uses ephemeral keys. Some popular instant messaging apps make use of ephemeral keys to encrypt messages. Each message sent uses a unique key to encrypt it. If a hacker intercepts one key, the rest of the messages are still safe. Play Video Video Control Resume Play 1.0x Volume Control Interactive Script Theater Mode Full Screen",
  "chunks": [
    {
      "chunk_id": "3.1.4_chunk_1",
      "content": "Security Pro 8.0",
      "summary": "Security Pro 8.0",
      "metadata": {
        "chapter_num": "3",
        "section_num": "3.1.4",
        "title": "Symmetric and Asymmetric Encryption Facts",
        "content_type": "text",
        "filename": "3.1.4_Symmetric_and_Asymmetric_Encryption_Facts_[text].txt",
        "file_path": "/Users/basantabaral/CompTia/data_raw/03_Cryptographic_Solutions/3.1.4_Symmetric_and_Asymmetric_Encryption_Facts_[text].txt",
        "word_count": 1839,
        "has_content": true
      },
      "section_header": "Introduction",
      "timestamp_range": null
    },
    {
      "chunk_id": "3.1.4_chunk_2",
      "content": "There are three main types of cryptographic algorithms with different roles to play in the assurance of the security properties: confidentiality, integrity, availability, and non-repudiation. These types are hashing algorithms and two types of encryption ciphers: symmetric and asymmetric.",
      "summary": "3.1.4 Symmetric and Asymmetric Encryption Facts: There are three main types of cryptographic algorithms with different roles to play in the assurance of the security properties: confidentiality, integrity, availability, and non-repudiation. These types are hashing algorithms and two types of encryption ciphers: symmetric and asymmetric.",
      "metadata": {
        "chapter_num": "3",
        "section_num": "3.1.4",
        "title": "Symmetric and Asymmetric Encryption Facts",
        "content_type": "text",
        "filename": "3.1.4_Symmetric_and_Asymmetric_Encryption_Facts_[text].txt",
        "file_path": "/Users/basantabaral/CompTia/data_raw/03_Cryptographic_Solutions/3.1.4_Symmetric_and_Asymmetric_Encryption_Facts_[text].txt",
        "word_count": 1839,
        "has_content": true
      },
      "section_header": "3.1.4 Symmetric and Asymmetric Encryption Facts",
      "timestamp_range": null
    },
    {
      "chunk_id": "3.1.4_chunk_3",
      "content": "Symmetric encryption Key length Asymmetric encryption Hybrid cryptosystems Ephemeral keys Symmetric Encryption An  encryption algorithm or cipher is a type of cryptographic process that encodes data so that it can be stored or transmitted securely and then decrypted only by its owner or its intended recipient. Using a  key with the encryption cipher ensures that decryption can only be performed by an authorized person. Substitution and Transposition Algorithms It is helpful to consider simple substitution and transposition algorithms to understand how an algorithm works. A substitution cipher involves replacing characters or blocks in the plaintext with different ciphertexts. Simple substitution ciphers rotate or scramble letters of the alphabet. For example, ROT13 rotates each letter 13 places, so A becomes N, for instance. The ciphertext \"Uryyb Jbeyq\" can be decrypted as the plaintext \"Hello World.\" In contrast to substitution ciphers, the units in a transposition cipher stay the same in plaintext and ciphertext, but their order is changed according to some mechanism. Consider how the ciphertext \"HLOOLELWRD\" has been produced:",
      "summary": "This lesson covers the following topics:: Symmetric encryption Key length Asymmetric encryption Hybrid cryptosystems Ephemeral keys Symmetric Encryption An  encryption algorithm or cipher is a type of cryptographic process that encodes data so that it can be stored or transmitted securely and then decrypted only by its owner or its intended recipient. Using a  key with the encryption cipher ensures that decryption can only be performed by an authorized person.",
      "metadata": {
        "chapter_num": "3",
        "section_num": "3.1.4",
        "title": "Symmetric and Asymmetric Encryption Facts",
        "content_type": "text",
        "filename": "3.1.4_Symmetric_and_Asymmetric_Encryption_Facts_[text].txt",
        "file_path": "/Users/basantabaral/CompTia/data_raw/03_Cryptographic_Solutions/3.1.4_Symmetric_and_Asymmetric_Encryption_Facts_[text].txt",
        "word_count": 1839,
        "has_content": true
      },
      "section_header": "This lesson covers the following topics:",
      "timestamp_range": null
    },
    {
      "chunk_id": "3.1.4_chunk_4",
      "content": "E L W R D The letters are written as columns, and then the rows are concatenated to make the ciphertext. Modern encryption algorithms use these basic techniques of substitution and transposition in complex ways that can defeat attempts at cryptanalysis. Symmetric Algorithms A symmetric algorithm is one in which encryption and decryption are both performed by the same secret key. The secret key must be kept known to authorized persons only. If the key is lost or stolen, the security is breached. Symmetric encryption is used for confidentiality. For example, Alice and Bob can share a confidential file in the following way: Alice and Bob meet to agree which cipher to use and a secret key value. They both record the value of the secret key, making sure that no one else can discover it. Alice encrypts a file using the cipher and key. Alice sends only the ciphertext to Bob over the network. Bob receives the ciphertext and is able to decrypt it by applying the same cipher with his copy of the secret key. Symmetric encryption operation and weaknesses Images © 123RF.com Description Symmetric encryption is very fast. It is used for bulk encryption of large amounts of data. The main problem is how Alice and Bob \"meet\" to agree upon or exchange the key. If Mallory intercepts the key and obtains the ciphertext, the security is broken. Note that symmetric encryption cannot be used for authentication or integrity. Alice and Bob are able to create exactly the same secrets because they both know the same key. The most common symmetric algorithm is the Advanced Encryption Standard (AES), also known as the Rijndael cipher. It was developed by Jaon Daemen and Vincent Rijmen in 2001 as part of a NIST competition held to find a replacement for DES. AES offers three different key lengths of 128, 192, and 256 bits. AES is used in many applications, including 802.11 communications, Bitlocker, and game engines. Other common symmetric algorithms include Data Encryption Standard (DES), Rivest's Cipher (RC), International Data Encryption Algorithm (IDEA), Blowfish, Twofish, and CAST. Key length Encryption algorithms use a key to increase the security of the process. For example, if you consider the substitution cipher ROT13, you should realize that the key is 13. You could use 17 to achieve a different ciphertext from the same method. The key is important because it means that even if the cipher method is known, a message still cannot be decrypted without knowledge of the specific key. A keyspace is the range of values that the key could be. In the ROT13 example, the keyspace is 25 (ROT1. . . ROT25). Using ROT0 or ROT26 would result in ciphertext identical to the plaintext. Using a value greater than 26 to shift through the alphabet multiple times is equivalent to a key from the 1-25 range. ROT0 and ROT26+ are weak keys and should not be used. Modern ciphers use large keyspaces where there are trillions of possible key values. This makes the key difficult to discover via brute force cryptanalysis. Brute force cryptanalysis means attempting decryption of the ciphertext with every possible key value and reading the result to determine if it is still gibberish or plaintext. Keys for modern symmetric ciphers use a pseudorandomly generated number of bits. The number of bits is the key length. For example, the most commonly used symmetric cipher is the Advanced Encryption Standard (AES). This can be used with two key lengths. AES-128 uses a 128-bit key length. A bit can have one of two values (0 or 1), so the number of possible key values is two multiplied by itself a number of times equivalent to the key length. This is written as 2 128, where 2 is the base, and 128 is the exponent. AES-256 has a keyspace of 2 256. This keyspace is not twice as large as AES-128; it is many trillions of times bigger and consequently significantly more resistant to brute force attacks. The drawback of using larger keys is that the computer must use more memory and processor cycles to perform encryption and decryption. Asymmetric Encryption In a symmetric encryption cipher, the same secret key is used to perform both encryption and decryption operations. With an asymmetric algorithm, encryption and decryption are performed by two different but related public and private keys in a key pair. When a public key is used to encrypt a message, only the paired private key can decrypt the ciphertext. The public key cannot be used to decrypt the ciphertext. The keys are generated in a way that makes it impossible to derive the private key from the public key. This means that the key pair owner can distribute the public key to anyone they want to receive secure messages from: Bob generates a key pair and keeps the private key secret. Bob publishes the public key. Alice wants to send Bob a confidential message, so they take a copy of Bob's public key. Alice uses Bob's public key to encrypt the message. Alice sends the ciphertext to Bob. Bob receives the message and is able to decrypt it using their private key. If Mallory has been snooping, they can intercept both the message and the public key. However, Mallory cannot use the public key to decrypt the message, so the system remains secure. Asymmetric encryption Images © 123RF.com Description The drawback of asymmetric encryption is that it involves substantial computing overhead compared to symmetric encryption. Where a large amount of data is being encrypted on disk or transported over a network, asymmetric encryption is inefficient. Rather than being used to encrypt the bulk data directly, the public key cipher can be used to encrypt a symmetric secret key. This allows Alice and Bob to exchange a bulk encryption session key without Mallory being able to learn it. Asymmetric encryption can be implemented using a number of algorithms. Each algorithm has a different recommended key length. The Rivest, Shamir, Adleman (RSA) asymmetric cipher requires a 2,048-bit private key to achieve an acceptable level of security. The Elliptic Curve Cryptography (ECC) asymmetric cipher can use 256-bit private keys to achieve a level of security equivalent to a 3,072-bit RSA key.",
      "summary": "H L O O L: If the key is lost or stolen, the security is breached. Where a large amount of data is being encrypted on disk or transported over a network, asymmetric encryption is inefficient.",
      "metadata": {
        "chapter_num": "3",
        "section_num": "3.1.4",
        "title": "Symmetric and Asymmetric Encryption Facts",
        "content_type": "text",
        "filename": "3.1.4_Symmetric_and_Asymmetric_Encryption_Facts_[text].txt",
        "file_path": "/Users/basantabaral/CompTia/data_raw/03_Cryptographic_Solutions/3.1.4_Symmetric_and_Asymmetric_Encryption_Facts_[text].txt",
        "word_count": 1839,
        "has_content": true
      },
      "section_header": "H L O O L",
      "timestamp_range": null
    },
    {
      "chunk_id": "3.1.4_chunk_5",
      "content": "Asymmetric Algorithm Description Rivest-Shamir-Adleman (RSA) RSA was developed by Ron Rivest, Adi Shamir, and Leonard Adleman. RSA was released shortly after Diffie-Hellman in 1977. RSA is still one of the most commonly used algorithms and helped define the process of using a public key to encrypt data and a private key to decrypt the data. RSA is used extensively for creating digital signatures. Elliptic Curve Cryptography (ECC) Elliptic Curve Cryptology is one of the newer methods being implemented. It was originally introduced in 1985. It did not enter wide usage until 2004. ECC is able to generate smaller keys that are more secure than most other methods. Many websites today use ECC to secure connections and data transmissions. Diffie-Hellman Released in 1976 by Whitfield Diffie and Martin Hellman. Its purpose was to allow two users who have never met to safely create a shared key over a public channel such as the internet.",
      "summary": "The following table shows common asymmetric encryption algorithms:: Asymmetric Algorithm Description Rivest-Shamir-Adleman (RSA) RSA was developed by Ron Rivest, Adi Shamir, and Leonard Adleman. Many websites today use ECC to secure connections and data transmissions.",
      "metadata": {
        "chapter_num": "3",
        "section_num": "3.1.4",
        "title": "Symmetric and Asymmetric Encryption Facts",
        "content_type": "text",
        "filename": "3.1.4_Symmetric_and_Asymmetric_Encryption_Facts_[text].txt",
        "file_path": "/Users/basantabaral/CompTia/data_raw/03_Cryptographic_Solutions/3.1.4_Symmetric_and_Asymmetric_Encryption_Facts_[text].txt",
        "word_count": 1839,
        "has_content": true
      },
      "section_header": "The following table shows common asymmetric encryption algorithms:",
      "timestamp_range": null
    },
    {
      "chunk_id": "3.1.4_chunk_6",
      "content": "The two users agree on two numbers: a prime number (P) and a generator (g). These numbers can be shared publicly. Each user then randomly generates a private number, or key, unique to themselves. Using the prime number, generator, and private key, each user generates a public key using the following formula: (G^ private number) MOD P The users exchange their public keys, which are then used to create a shared secret key using the following formula: (Shared Public Key^ private number) MOD P Because each public key was generated using the same prime number and generator, each user will come up with the same number for the shared secret key. If a hacker intercepted any of the exchanges, they could not reverse the process without knowing each user's secret number. Diffie-Hellman is frequently implemented in security protocols such as TLS, IPSec, SSH, and others. Digital Signature Algorithm (DSA) DSA was proposed in 1991 by NIST and became the government standard in 1993 DSA is only used for creating digital signatures. It uses a different algorithm than RSA but provides the same level of security. Hybrid Cryptosystems Hybrid cryptosystems combine the efficiency of symmetric encryption with the convenience of asymmetric encryption. A hybrid cryptosystem is used as follows: User1 uses their symmetric private key to encrypt some data. User1 then encrypts that symmetric private key using the recipient's public key and sends both to the recipient. User2, the recipient, uses their private key to decrypt User 1's private key, which is then used to decrypt the message. As long as User2's private key is kept secret, the data remains secure. Hybrid cryptosystems are used with many secure communication methods today, such as TLS. Ephemeral Keys In traditional encrypted communications, static keys are used. This means that the same key is used throughout an entire session. The problem with this is that the longer the keys are used, the more susceptible they become to an attack. Ephemeral keys can be used to resolve this issue. Ephemeral keys are generated for each new session or message sent. For example, perfect forward secrecy (PFS) uses ephemeral keys. Some popular instant messaging apps make use of ephemeral keys to encrypt messages. Each message sent uses a unique key to encrypt it. If a hacker intercepts one key, the rest of the messages are still safe. Play Video Video Control Resume Play",
      "summary": "Diffie-Hellman is used as follows:: Diffie-Hellman is frequently implemented in security protocols such as TLS, IPSec, SSH, and others. This means that the same key is used throughout an entire session.",
      "metadata": {
        "chapter_num": "3",
        "section_num": "3.1.4",
        "title": "Symmetric and Asymmetric Encryption Facts",
        "content_type": "text",
        "filename": "3.1.4_Symmetric_and_Asymmetric_Encryption_Facts_[text].txt",
        "file_path": "/Users/basantabaral/CompTia/data_raw/03_Cryptographic_Solutions/3.1.4_Symmetric_and_Asymmetric_Encryption_Facts_[text].txt",
        "word_count": 1839,
        "has_content": true
      },
      "section_header": "Diffie-Hellman is used as follows:",
      "timestamp_range": null
    },
    {
      "chunk_id": "3.1.4_chunk_7",
      "content": "1.0x Volume Control Interactive Script Theater Mode Full Screen",
      "summary": "1.0x Volume Control Interactive Script Theater Mode Full Screen",
      "metadata": {
        "chapter_num": "3",
        "section_num": "3.1.4",
        "title": "Symmetric and Asymmetric Encryption Facts",
        "content_type": "text",
        "filename": "3.1.4_Symmetric_and_Asymmetric_Encryption_Facts_[text].txt",
        "file_path": "/Users/basantabaral/CompTia/data_raw/03_Cryptographic_Solutions/3.1.4_Symmetric_and_Asymmetric_Encryption_Facts_[text].txt",
        "word_count": 1839,
        "has_content": true
      },
      "section_header": "CC",
      "timestamp_range": null
    }
  ],
  "num_chunks": 7,
  "document_summary": "Symmetric and Asymmetric Encryption Facts (text): If the key is lost or stolen, the security is breached. It is used for bulk encryption of large amounts of data. Where a large amount of data is being encrypted on disk or transported over a network, asymmetric encryption is inefficient."
}