{
  "metadata": {
    "chapter_num": "3",
    "section_num": "3.5.4",
    "title": "Certificate Types Facts",
    "content_type": "text",
    "filename": "3.5.4_Certificate_Types_Facts_[text].txt",
    "file_path": "/Users/basantabaral/CompTia/data_raw/03_Cryptographic_Solutions/3.5.4_Certificate_Types_Facts_[text].txt",
    "word_count": 1077,
    "has_content": true
  },
  "full_content": "Security Pro 8.0 PKI certificates are used to verify an organization’s identity and ownership of a public key. When an organization requests a certificate, they must choose which type they need. The Certificate Authority needs to validate the organization before issuing the certificate. The level of validation depends on the certificate type being requested. Certificate types Certificate signing requests Certificate Types Depending on the use and situation, there are different types of public key infrastructure (PKI) certificates. The following table explains what these certificate types are and how they can be used: Certificate Type Description Root certificate A root certificate is the first certificate that a Certificate Authority creates. Root certificates are: Self-signed certificates. These certificates go through a different validation process, which varies depending on the certificate and organization. Used to sign lower-level certificates such as intermediate certificates. Subject Alternative Name (SAN) certificate SAN certificates allow an organization to cover multiple domains with one certificate. For example, TestOut could cover the following domains in a single SAN certificate: TestOut.com TestOut.net LabSim.com Wildcard certificate Wildcard certificates are similar to SAN certificates. But instead of covering multiple domains, the organization can cover one domain and multiple subdomains. For example, TestOut could cover the following in one certificate: quiz.testout.com labs.testout.com videos.testout.com Code-signing certificate Code-signing certificates are used by app developers to prove their application is legitimate. If a user tries to run an app that does not have a certificate, they will receive an error stating that the app cannot be trusted. The user can decide to close the app or run it. Self-signed certificate Self-signed certificates are certificates that have not been validated or signed by a CA. Self-signed certificates are easy and free to make. Self-signed certificates do not provide the same protection and security as a CA-validated certificate. When a user visits a website using a self-signed certificate, they see a warning that the certificate is not trusted. Email certificate Secure, encrypted emails are sent using the S/MIME Protocol. Senders need to know the recipient's public key when sending a secure email. The public key is found in email certificates. Email certificates are mainly used in an organization that uses its own CA. However, some public CAs provide email certificates as well. User and computer certificate User and computer certificates are used in a network environment to identify and validate specific users or computers. When a user or computer logs into a network, their certificate is sent to the server for validation. This provides extra security to the network. Certificate Signing Requests Registration is the process by which end users create an account with the CA and become authorized to request certificates. The exact processes by which users are authorized and their identity proven are determined by the CA implementation. For example, in a Windows domain network, users and devices can often auto-enroll with the CA just by authenticating to Active Directory. A third-party CA might perform a range of tests to ensure that a subject is who they claim to be. It is in the CA's interest to ensure that it only issues certificates to legitimate users, or its reputation will suffer. When a subject wants to obtain a certificate, it first generates a key pair comprising private and public asymmetric keys for the chosen cipher, such as RSA or ECC, and key length. The private key must be kept well protected and known only to the subject. The subject then completes a certificate signing request(CSR) and submits it to the CA. The CSR is a file containing the information the subject wants to use in the certificate, including its public key. The CA reviews the certificate and checks that the information is valid. For a web server, this may simply mean verifying that the subject name and fully qualified domain name (FQDN) are identical and verifying that the CSR was initiated by the person administratively responsible for the domain, as identified in the domain's WHOIS records. If the request is accepted, the CA signs the certificate and sends it to the subject. Using a web form in the OPNsense firewall appliance to request a certificate Description When certificates were first introduced, the common name (CN) attribute was used to identify the fully qualified domain name (FQDN) by which the server is accessed, such as www.comptia.org. This usage grew by custom rather than design, however. The CN attribute can contain different kinds of information, making it difficult for a browser to interpret it correctly. Consequently, the CN attribute is now deprecated as a method of validating a subject identity that needs to resolve to some type of network address. The subject alternative name (SAN) extension field is structured to represent different types of identifiers, including FQDNs and IP addresses. If a certificate is configured with a SAN, the browser should validate that and ignore the CN value. The example domain's certificate is configured with alternative subject names for different top-level domains and subdomains. Screenshot used with permission from Microsoft Description It is still safer to put the FQDN in the CN because not all browsers and implementations stay up to date with the standards. The SAN field also allows a certificate to represent different subdomains, such as www.comptia.org and members.comptia.org. Listing the specific subdomains is more secure, but if a new subdomain is added, a new certificate must be issued. A wildcard domain, such as *.comptia.org, means that the certificate issued to the parent domain will be accepted as valid for all subdomains (to a single level). CompTIA's website certificate configured with a wildcard domain, allowing access via either https://comptia.org or https://www.comptia.org. Screenshot used with permission from Microsoft Description A certificate also contains fields for Organization (O), Organizational Unit (OU), Locality (L), State (ST), and Country (C). These are concatenated with the common name to form a Distinguished Name (DN). For example, Example LLC's DN could be: CN=www.example.com, OU=Web Hosting, O=Example LLC, L=Chicago, ST=Illinois, C=US . Different certificate types can be used for purposes other than server/computer identification. User accounts can be issued with email certificates, in which case the SAN is an RFC 822 email address. A code-signing certificate is used to verify the publisher or developer of software and scripts. These do not use a SAN, but the CA must validate the organization and locale details to ensure accuracy and that a rogue developer is not attempting to impersonate a well-known software company.",
  "chunks": [
    {
      "chunk_id": "3.5.4_chunk_1",
      "content": "Security Pro 8.0",
      "summary": "The CompTIA Security+ course, Security Pro 8.0, introduces fundamental security concepts essential for protecting information systems. Key topics include risk management, network security, cryptography, and incident response, emphasizing practical applications through real-world scenarios and hands-on labs. This foundational knowledge equips learners with the skills necessary to identify and mitigate security threats effectively.",
      "metadata": {
        "chapter_num": "3",
        "section_num": "3.5.4",
        "title": "Certificate Types Facts",
        "content_type": "text",
        "filename": "3.5.4_Certificate_Types_Facts_[text].txt",
        "file_path": "/Users/basantabaral/CompTia/data_raw/03_Cryptographic_Solutions/3.5.4_Certificate_Types_Facts_[text].txt",
        "word_count": 1077,
        "has_content": true
      },
      "section_header": "Introduction",
      "timestamp_range": null
    },
    {
      "chunk_id": "3.5.4_chunk_2",
      "content": "PKI certificates are used to verify an organization’s identity and ownership of a public key. When an organization requests a certificate, they must choose which type they need. The Certificate Authority needs to validate the organization before issuing the certificate. The level of validation depends on the certificate type being requested.",
      "summary": "PKI certificates play a crucial role in verifying an organization's identity and the ownership of its public key. When requesting a certificate, organizations must select the appropriate type, as the validation level required by the Certificate Authority varies based on this choice. Understanding the different certificate types is essential for ensuring proper security and trust in digital communications.",
      "metadata": {
        "chapter_num": "3",
        "section_num": "3.5.4",
        "title": "Certificate Types Facts",
        "content_type": "text",
        "filename": "3.5.4_Certificate_Types_Facts_[text].txt",
        "file_path": "/Users/basantabaral/CompTia/data_raw/03_Cryptographic_Solutions/3.5.4_Certificate_Types_Facts_[text].txt",
        "word_count": 1077,
        "has_content": true
      },
      "section_header": "3.5.4 Certificate Types Facts",
      "timestamp_range": null
    },
    {
      "chunk_id": "3.5.4_chunk_3",
      "content": "Certificate types Certificate signing requests Certificate Types Depending on the use and situation, there are different types of public key infrastructure (PKI) certificates. The following table explains what these certificate types are and how they can be used: Certificate Type Description Root certificate A root certificate is the first certificate that a Certificate Authority creates. Root certificates are: Self-signed certificates. These certificates go through a different validation process, which varies depending on the certificate and organization. Used to sign lower-level certificates such as intermediate certificates. Subject Alternative Name (SAN) certificate SAN certificates allow an organization to cover multiple domains with one certificate. For example, TestOut could cover the following domains in a single SAN certificate: TestOut.com TestOut.net LabSim.com Wildcard certificate Wildcard certificates are similar to SAN certificates. But instead of covering multiple domains, the organization can cover one domain and multiple subdomains. For example, TestOut could cover the following in one certificate: quiz.testout.com labs.testout.com videos.testout.com Code-signing certificate Code-signing certificates are used by app developers to prove their application is legitimate. If a user tries to run an app that does not have a certificate, they will receive an error stating that the app cannot be trusted. The user can decide to close the app or run it. Self-signed certificate Self-signed certificates are certificates that have not been validated or signed by a CA. Self-signed certificates are easy and free to make. Self-signed certificates do not provide the same protection and security as a CA-validated certificate. When a user visits a website using a self-signed certificate, they see a warning that the certificate is not trusted. Email certificate Secure, encrypted emails are sent using the S/MIME Protocol. Senders need to know the recipient's public key when sending a secure email. The public key is found in email certificates. Email certificates are mainly used in an organization that uses its own CA. However, some public CAs provide email certificates as well. User and computer certificate User and computer certificates are used in a network environment to identify and validate specific users or computers. When a user or computer logs into a network, their certificate is sent to the server for validation. This provides extra security to the network. Certificate Signing Requests Registration is the process by which end users create an account with the CA and become authorized to request certificates. The exact processes by which users are authorized and their identity proven are determined by the CA implementation. For example, in a Windows domain network, users and devices can often auto-enroll with the CA just by authenticating to Active Directory. A third-party CA might perform a range of tests to ensure that a subject is who they claim to be. It is in the CA's interest to ensure that it only issues certificates to legitimate users, or its reputation will suffer. When a subject wants to obtain a certificate, it first generates a key pair comprising private and public asymmetric keys for the chosen cipher, such as RSA or ECC, and key length. The private key must be kept well protected and known only to the subject. The subject then completes a certificate signing request(CSR) and submits it to the CA. The CSR is a file containing the information the subject wants to use in the certificate, including its public key. The CA reviews the certificate and checks that the information is valid. For a web server, this may simply mean verifying that the subject name and fully qualified domain name (FQDN) are identical and verifying that the CSR was initiated by the person administratively responsible for the domain, as identified in the domain's WHOIS records. If the request is accepted, the CA signs the certificate and sends it to the subject. Using a web form in the OPNsense firewall appliance to request a certificate Description When certificates were first introduced, the common name (CN) attribute was used to identify the fully qualified domain name (FQDN) by which the server is accessed, such as www.comptia.org. This usage grew by custom rather than design, however. The CN attribute can contain different kinds of information, making it difficult for a browser to interpret it correctly. Consequently, the CN attribute is now deprecated as a method of validating a subject identity that needs to resolve to some type of network address. The subject alternative name (SAN) extension field is structured to represent different types of identifiers, including FQDNs and IP addresses. If a certificate is configured with a SAN, the browser should validate that and ignore the CN value. The example domain's certificate is configured with alternative subject names for different top-level domains and subdomains. Screenshot used with permission from Microsoft Description It is still safer to put the FQDN in the CN because not all browsers and implementations stay up to date with the standards. The SAN field also allows a certificate to represent different subdomains, such as www.comptia.org and members.comptia.org. Listing the specific subdomains is more secure, but if a new subdomain is added, a new certificate must be issued. A wildcard domain, such as *.comptia.org, means that the certificate issued to the parent domain will be accepted as valid for all subdomains (to a single level). CompTIA's website certificate configured with a wildcard domain, allowing access via either https://comptia.org or https://www.comptia.org. Screenshot used with permission from Microsoft Description A certificate also contains fields for Organization (O), Organizational Unit (OU), Locality (L), State (ST), and Country (C). These are concatenated with the common name to form a Distinguished Name (DN). For example, Example LLC's DN could be: CN=www.example.com, OU=Web Hosting, O=Example LLC, L=Chicago, ST=Illinois, C=US . Different certificate types can be used for purposes other than server/computer identification. User accounts can be issued with email certificates, in which case the SAN is an RFC 822 email address. A code-signing certificate is used to verify the publisher or developer of software and scripts. These do not use a SAN, but the CA must validate the organization and locale details to ensure accuracy and that a rogue developer is not attempting to impersonate a well-known software company.",
      "summary": "This lesson on PKI certificates covers various types, including root, SAN, wildcard, code-signing, self-signed, email, and user/computer certificates, each serving distinct purposes in securing communications and validating identities. It explains the process of creating Certificate Signing Requests (CSRs) and the role of Certificate Authorities (CAs) in issuing and validating certificates, emphasizing the importance of proper validation to maintain trust. Practical applications include securing websites, encrypting emails, and verifying software authenticity, highlighting the critical role of certificates in cybersecurity.",
      "metadata": {
        "chapter_num": "3",
        "section_num": "3.5.4",
        "title": "Certificate Types Facts",
        "content_type": "text",
        "filename": "3.5.4_Certificate_Types_Facts_[text].txt",
        "file_path": "/Users/basantabaral/CompTia/data_raw/03_Cryptographic_Solutions/3.5.4_Certificate_Types_Facts_[text].txt",
        "word_count": 1077,
        "has_content": true
      },
      "section_header": "This lesson covers the following topics:",
      "timestamp_range": null
    }
  ],
  "num_chunks": 3
}