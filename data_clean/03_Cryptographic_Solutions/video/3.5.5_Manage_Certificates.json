{
  "metadata": {
    "chapter_num": "3",
    "section_num": "3.5.5",
    "title": "Manage Certificates",
    "content_type": "video",
    "filename": "3.5.5_Manage_Certificates_[video].txt",
    "file_path": "/Users/basantabaral/CompTia/data_raw/03_Cryptographic_Solutions/3.5.5_Manage_Certificates_[video].txt",
    "word_count": 1890,
    "has_content": true
  },
  "full_content": "In this demonstration, we're going to practice managing the public key infrastructure. To do this, we'll use the Windows Server 2022 system that already has Active Directory Certificate Services installed, which makes it a certificate authority, or CA. It's called Active Directory Certificate Services because the CA itself is integrated with Active Directory to authenticate certificate requests. We're going to practice requesting, approving, issuing, and revoking certificates on the CA. In order to manage the CA, we need to launch the CA console by clicking Tools and Certificate Authority. We can see here the CA itself and the certificate categories: Revoke Certificates, Issue Certificates, Pending Requests, and Failed Requests. By default, the CA is set to automatically approve any new certificate requests. However, we don't want that to happen. Instead, we want to move the certificate request to a pending state, here in Pending Requests, until an administrator comes through and manually reviews the request. Then he or she either approves or denies it. To make sure that this is set correctly, we're going to right-click on the CA, go to Properties, go to Policy Module, go to Properties again. We'll change this so that new certificate requests are sent to Pending until approved. Now we are given a prompt that we need to restart certificate services for that change to go into effect. I'll do that now by right clicking on the CA, going to All Tasks, then Stop Service. Then I'll do the same thing and Start the service again. With that setting checked, we want to request a new certificate now. There are two different ways to do this. With the first method, I install the certificate authority and I also install the Certificate Enrollment Page. This allows users to request certificates using a web page running from the Internet Information Server Service on the CA itself. Let's go ahead and open up Microsoft Edge. We're going to point it to the right URL for the local host. There it is. It's going to be local host /certsrv. You see here the first task on the list is request a certificate. Alright, we're going to come back to this window a little bit later. The second method is using the MMC console. Let's go ahead and right-click on the window. Go to Run, MMC, and hit Yes. First, we're going to need to add some snap-ins. So, we're going to go Add or Remove Snap-in. We need the Certificate snap-in. Go to Add, My User Account, Finish, and Okay. The snap-in is here. Now we can see all the different types of certificates that we can create for our current user. We're going to actually create one under Personal. Go to Certificates, right-click, click All Tasks, and Request New Certificate. Go through Next, Next, Select User, Enroll, and Finish. Now let's go back to our CA console. If we go into Pending Requests, we can see that it was properly sent straight to our Pending Requests. It wasn't actually issued. From this screen, we can view the pending request and see the request ID here. This is where we can now request whether we want to approve or deny this certificate. If we right-click it, we have the option to issue or deny. Let's go ahead and issue this certificate. Now the certificate request is gone from Pending. If we go to Issued Certificates, we can now see It's been officially issued. We can see all sorts of information here. For example, who it's issued to, who it was issued by, and the certificate authority, which is our certificate authority. We see the certification expiration date here and its intended purpose. So, that's a personal certificate. It's intended for EFS encryptions, securing email, and client authentication. It was created using the user certificate template. If we double-click the certificate, we can view the date range when it's valid and we can go to the Details tab. Here we can view additional details about the certificate. And if we click the Certificate Path tab, we can view the certificate path up to the root CA. In this demonstration, we only have one CA and there are no subordinate CAs. So, the certificate path is actually really short. But in many organizations, you'll have one or more root CAs with subordinate CAs associated with it. So, the Certificate Path tab can be used to view the path through the subordinate CAs up to the root CA. Let's close this and go back to our CA console. There may be different situations when the certificate shouldn't be used. For example, this is the case if the private key gets compromised in some way. In these situations, we should no longer use this certificate for encryption. We would need to revoke it. To do this, we simply right-click the certificate, go to All Tasks, and to Revoke. You can specify a reason code for why this certificate is being revoked. If you look, the last code is Certificate Hold. This is used in situations where you think there might be a problem with the certificate but you're not 100 percent sure. We want to put the certificate on hold without fully revoking it so that we can verify whether or not it's an issue that would require it to be fully revoked or not. If there is no issue, we can take it off hold and continue using it. If there's a problem, we can fully revoke it. If you were to use one of the other options here to revoke the certificate, such as Key Compromise, you couldn't unrevoke it. It's gone. You'll have to issue a new certificate. Let's go ahead and put it in Certificate Hold and hit Yes. You see it clears out the Issued Certificates, and now it's on hold. Let's go to Revoke. You can see right here the revocation reason: Certificate Hold. Because we just held it instead of revoking it all the way, we can unrevoke it. To do this, we right-click, go to All Tasks, and Unrevoke Certificate. Alright, it removed it. If we go back to Issued Certificates, we can see the certificate is back for use again. Let's go ahead and do this again. But this time, go to All Tasks and revoke it for a different reason. Let's go ahead and just say Key Compromise. Hit Yes. Alright, now it's revoked. If we go back to Revoked Certificates and we right-click, go to All Tasks, and try to unrevoke it, we can't. We get this error: unrevoke command failed. Certificates can only be unrevoked if they're revoked with reason code Certificate Hold. So, this certificate no longer can be used. You would have to reissue a new certificate in order for them to use it. After you've revoked a certificate, you need to let everyone know that the certificate has been revoked and shouldn't be used anymore. This is done by publishing the latest Certificate Revocation List. To do this, we go to our Revoked Certificates folder, we right-click, go to All Tasks, and then click Publish. This will publish the latest list of revoked certificates to the Certificate Revocation List. There are two different types of Certificate Revocation Lists, or CRLs. You can publish a full CRL, which contains a list of all the revoked certificates. Or we can just publish a delta CRL which only contains the certificates that have been revoked since the last time the full CRL was published. For our purposes, we're going to publish a new CRL because it's the first time we've actually published a CRL from this CA. Let's go ahead and click Okay. If you forget to do this manually, it's okay because the CA should be configured to automatically publish the CRL at a particular interval. If we right-click, hit Revoke Certificates again, and go to Properties this time, we can see the CRL publishing parameters. By default, the full CRL is published once a week and the delta CRLs are published once a day. If we click the View CRLs tab, then click CRL, and then click the revocation list, we can see the current CRL and the certificates that were just revoked. Because this CA hasn't been in use very long, there are not many certificates to be revoked. Let's go ahead and close it. Click OK and OK. Alright, now let's look at the properties of the CA. Let's right-click the Root CA and Properties. Alright, we're going to go to the Extensions tab. The Extensions tab has two acronyms that are very important to understand. The first one is Authority Information Access, or AIA. The AIA allows end users to obtain the certificate used by the CA itself. This can be very useful if you have a root CA that is offline for security reasons. This is not an uncommon configuration. Some organizations will keep their root CAs offline all the time to make them less susceptible to compromise. But we still need to have a copy of the root CA certificate. To make this possible, we use AIA to publish a copy of the root CA certificate to some other location so that users can still access the root CA certificate. This is important because we need that root CA certificate with the CA's public key in order to verify digital signatures that the CA has implemented. If the CA digitally signs something, you must have a copy of its public key to verify that signature. AIA makes that public key available offline. If we didn't do this and the root CA was offline, we'd have to figure out some other way to get a copy of that key. In addition to AIA, we also have CRL and CRL Distribution Point, also known as CDP. This is where users go to get a copy of the latest CRL. The same issue exists here as exists with the root CA's public key. If the root CA is offline, we can't access the CRL. We can't let everybody know which certificates have been revoked. What we can do is publish the CRL to some other location that clients can access. For example, we can publish it to Active Directory via LDAP. We could access it on a web page, or we could put it in the file system. Let's go ahead and click Cancel. If we go back to our CertSRV web page, we can see there's an option to download the CA certificate or view the certificate chain or CRL. This option, Download a CA certificate, is AIA. This one is CDP. If we click this option, we could download the latest CRL or the latest delta CRL. In this demonstration, we covered various aspects of managing certificates within the public key infrastructure. We discussed requesting certificates, manual approval, issuing certificates, and revoking certificates. We also delved into the availability of the CA's public keys via AIA and the publication of the Certificate Revocation List (CRL) to inform users about revoked certificates.",
  "chunks": [
    {
      "chunk_id": "3.5.5_chunk_1",
      "content": "In this demonstration, we're going to practice managing the public key infrastructure. To do this, we'll use the Windows Server 2022 system that already has Active Directory Certificate Services installed, which makes it a certificate authority, or CA. It's called Active Directory Certificate Services because the CA itself is integrated with Active Directory to authenticate certificate requests. We're going to practice requesting, approving, issuing, and revoking certificates on the CA. In order to manage the CA, we need to launch the CA console by clicking Tools and Certificate Authority. We can see here the CA itself and the certificate categories: Revoke Certificates, Issue Certificates, Pending Requests, and Failed Requests. By default, the CA is set to automatically approve any new certificate requests. However, we don't want that to happen. Instead, we want to move the certificate request to a pending state, here in Pending Requests, until an administrator comes through and manually reviews the request. Then he or she either approves or denies it. To make sure that this is set correctly, we're going to right-click on the CA, go to Properties, go to Policy Module, go to Properties again. We'll change this so that new certificate requests are sent to Pending until approved. Now we are given a prompt that we need to restart certificate services for that change to go into effect. I'll do that now by right clicking on the CA, going to All Tasks, then Stop Service. Then I'll do the same thing and Start the service again.",
      "summary": "This demonstration covers managing Windows Server 2022 Active Directory Certificate Services (ADCS) as a certificate authority (CA) for public key infrastructure operations including requesting, approving, issuing, and revoking certificates. The key security practice shown is configuring the CA to require manual administrator approval by changing certificate requests from automatic approval to pending status, which requires restarting certificate services to take effect. This manual approval process provides essential security control over certificate issuance in an Active Directory-integrated PKI environment.",
      "metadata": {
        "chapter_num": "3",
        "section_num": "3.5.5",
        "title": "Manage Certificates",
        "content_type": "video",
        "filename": "3.5.5_Manage_Certificates_[video].txt",
        "file_path": "/Users/basantabaral/CompTia/data_raw/03_Cryptographic_Solutions/3.5.5_Manage_Certificates_[video].txt",
        "word_count": 1890,
        "has_content": true
      },
      "section_header": "Managing Certificates",
      "timestamp_range": "00:00-01:53"
    },
    {
      "chunk_id": "3.5.5_chunk_2",
      "content": "With that setting checked, we want to request a new certificate now. There are two different ways to do this. With the first method, I install the certificate authority and I also install the Certificate Enrollment Page. This allows users to request certificates using a web page running from the Internet Information Server Service on the CA itself. Let's go ahead and open up Microsoft Edge. We're going to point it to the right URL for the local host. There it is. It's going to be local host /certsrv. You see here the first task on the list is request a certificate. Alright, we're going to come back to this window a little bit later. The second method is using the MMC console. Let's go ahead and right-click on the window. Go to Run, MMC, and hit Yes. First, we're going to need to add some snap-ins. So, we're going to go Add or Remove Snap-in. We need the Certificate snap-in. Go to Add, My User Account, Finish, and Okay. The snap-in is here. Now we can see all the different types of certificates that we can create for our current user. We're going to actually create one under Personal. Go to Certificates, right-click, click All Tasks, and Request New Certificate. Go through Next, Next, Select User, Enroll, and Finish.",
      "summary": "CompTIA Security+ certificate management covers two primary methods for requesting digital certificates from a Certificate Authority (CA): web-based enrollment through the CA's Certificate Enrollment Page accessible via browser at localhost/certsrv, and console-based enrollment using the Microsoft Management Console (MMC) with the Certificate snap-in. Both methods enable users to generate and install personal certificates for authentication and encryption purposes, with the MMC method providing direct certificate management through the Personal certificate store.",
      "metadata": {
        "chapter_num": "3",
        "section_num": "3.5.5",
        "title": "Manage Certificates",
        "content_type": "video",
        "filename": "3.5.5_Manage_Certificates_[video].txt",
        "file_path": "/Users/basantabaral/CompTia/data_raw/03_Cryptographic_Solutions/3.5.5_Manage_Certificates_[video].txt",
        "word_count": 1890,
        "has_content": true
      },
      "section_header": "Request a Certificate",
      "timestamp_range": "01:53-03:17"
    },
    {
      "chunk_id": "3.5.5_chunk_3",
      "content": "Now let's go back to our CA console. If we go into Pending Requests, we can see that it was properly sent straight to our Pending Requests. It wasn't actually issued. From this screen, we can view the pending request and see the request ID here. This is where we can now request whether we want to approve or deny this certificate. If we right-click it, we have the option to issue or deny. Let's go ahead and issue this certificate. Now the certificate request is gone from Pending. If we go to Issued Certificates, we can now see It's been officially issued. We can see all sorts of information here. For example, who it's issued to, who it was issued by, and the certificate authority, which is our certificate authority. We see the certification expiration date here and its intended purpose. So, that's a personal certificate. It's intended for EFS encryptions, securing email, and client authentication. It was created using the user certificate template. If we double-click the certificate, we can view the date range when it's valid and we can go to the Details tab. Here we can view additional details about the certificate. And if we click the Certificate Path tab, we can view the certificate path up to the root CA. In this demonstration, we only have one CA and there are no subordinate CAs. So, the certificate path is actually really short. But in many organizations, you'll have one or more root CAs with subordinate CAs associated with it. So, the Certificate Path tab can be used to view the path through the subordinate CAs up to the root CA. Let's close this and go back to our CA console.",
      "summary": "Certificate approval in a CA console involves reviewing pending certificate requests and using right-click options to issue or deny certificates based on organizational security policies. Approved certificates move from Pending Requests to Issued Certificates, displaying critical security details including validity dates, intended purposes (EFS encryption, email security, client authentication), and the certificate path hierarchy from subordinate CAs to root CA. The certificate path verification is essential for validating trust chains in multi-tier PKI infrastructures.",
      "metadata": {
        "chapter_num": "3",
        "section_num": "3.5.5",
        "title": "Manage Certificates",
        "content_type": "video",
        "filename": "3.5.5_Manage_Certificates_[video].txt",
        "file_path": "/Users/basantabaral/CompTia/data_raw/03_Cryptographic_Solutions/3.5.5_Manage_Certificates_[video].txt",
        "word_count": 1890,
        "has_content": true
      },
      "section_header": "Approve a Certificate",
      "timestamp_range": "03:17-05:03"
    },
    {
      "chunk_id": "3.5.5_chunk_4",
      "content": "There may be different situations when the certificate shouldn't be used. For example, this is the case if the private key gets compromised in some way. In these situations, we should no longer use this certificate for encryption. We would need to revoke it. To do this, we simply right-click the certificate, go to All Tasks, and to Revoke. You can specify a reason code for why this certificate is being revoked. If you look, the last code is Certificate Hold. This is used in situations where you think there might be a problem with the certificate but you're not 100 percent sure. We want to put the certificate on hold without fully revoking it so that we can verify whether or not it's an issue that would require it to be fully revoked or not. If there is no issue, we can take it off hold and continue using it. If there's a problem, we can fully revoke it. If you were to use one of the other options here to revoke the certificate, such as Key Compromise, you couldn't unrevoke it. It's gone. You'll have to issue a new certificate. Let's go ahead and put it in Certificate Hold and hit Yes. You see it clears out the Issued Certificates, and now it's on hold. Let's go to Revoke. You can see right here the revocation reason: Certificate Hold. Because we just held it instead of revoking it all the way, we can unrevoke it. To do this, we right-click, go to All Tasks, and Unrevoke Certificate. Alright, it removed it. If we go back to Issued Certificates, we can see the certificate is back for use again. Let's go ahead and do this again. But this time, go to All Tasks and revoke it for a different reason. Let's go ahead and just say Key Compromise. Hit Yes. Alright, now it's revoked. If we go back to Revoked Certificates and we right-click, go to All Tasks, and try to unrevoke it, we can't. We get this error: unrevoke command failed. Certificates can only be unrevoked if they're revoked with reason code Certificate Hold. So, this certificate no longer can be used. You would have to reissue a new certificate in order for them to use it. After you've revoked a certificate, you need to let everyone know that the certificate has been revoked and shouldn't be used anymore. This is done by publishing the latest Certificate Revocation List. To do this, we go to our Revoked Certificates folder, we right-click, go to All Tasks, and then click Publish. This will publish the latest list of revoked certificates to the Certificate Revocation List.",
      "summary": "Certificate revocation is the process of invalidating compromised or problematic certificates by right-clicking the certificate and selecting \"All Tasks > Revoke\" with an appropriate reason code. Certificate Hold allows temporary suspension with the ability to unrevoke, while other revocation reasons like Key Compromise permanently invalidate the certificate requiring reissuance. After revocation, administrators must publish the updated Certificate Revocation List (CRL) to notify all systems that the certificate should no longer be trusted for encryption or authentication.",
      "metadata": {
        "chapter_num": "3",
        "section_num": "3.5.5",
        "title": "Manage Certificates",
        "content_type": "video",
        "filename": "3.5.5_Manage_Certificates_[video].txt",
        "file_path": "/Users/basantabaral/CompTia/data_raw/03_Cryptographic_Solutions/3.5.5_Manage_Certificates_[video].txt",
        "word_count": 1890,
        "has_content": true
      },
      "section_header": "Revoke a Certificate",
      "timestamp_range": "05:03-07:32"
    },
    {
      "chunk_id": "3.5.5_chunk_5",
      "content": "There are two different types of Certificate Revocation Lists, or CRLs. You can publish a full CRL, which contains a list of all the revoked certificates. Or we can just publish a delta CRL which only contains the certificates that have been revoked since the last time the full CRL was published. For our purposes, we're going to publish a new CRL because it's the first time we've actually published a CRL from this CA. Let's go ahead and click Okay. If you forget to do this manually, it's okay because the CA should be configured to automatically publish the CRL at a particular interval. If we right-click, hit Revoke Certificates again, and go to Properties this time, we can see the CRL publishing parameters. By default, the full CRL is published once a week and the delta CRLs are published once a day. If we click the View CRLs tab, then click CRL, and then click the revocation list, we can see the current CRL and the certificates that were just revoked. Because this CA hasn't been in use very long, there are not many certificates to be revoked. Let's go ahead and close it. Click OK and OK.",
      "summary": "Certificate Revocation Lists (CRLs) maintain security by tracking invalid certificates through two types: full CRLs containing all revoked certificates, and delta CRLs containing only certificates revoked since the last full publication. Certificate Authorities automatically publish full CRLs weekly and delta CRLs daily by default, ensuring timely distribution of revocation status to prevent use of compromised certificates. Administrators can manually publish CRLs and view current revocation lists through the CA management interface to verify certificate status.",
      "metadata": {
        "chapter_num": "3",
        "section_num": "3.5.5",
        "title": "Manage Certificates",
        "content_type": "video",
        "filename": "3.5.5_Manage_Certificates_[video].txt",
        "file_path": "/Users/basantabaral/CompTia/data_raw/03_Cryptographic_Solutions/3.5.5_Manage_Certificates_[video].txt",
        "word_count": 1890,
        "has_content": true
      },
      "section_header": "Certificate Revocation List",
      "timestamp_range": "07:32-08:43"
    },
    {
      "chunk_id": "3.5.5_chunk_6",
      "content": "Alright, now let's look at the properties of the CA. Let's right-click the Root CA and Properties. Alright, we're going to go to the Extensions tab. The Extensions tab has two acronyms that are very important to understand. The first one is Authority Information Access, or AIA. The AIA allows end users to obtain the certificate used by the CA itself. This can be very useful if you have a root CA that is offline for security reasons. This is not an uncommon configuration. Some organizations will keep their root CAs offline all the time to make them less susceptible to compromise. But we still need to have a copy of the root CA certificate. To make this possible, we use AIA to publish a copy of the root CA certificate to some other location so that users can still access the root CA certificate. This is important because we need that root CA certificate with the CA's public key in order to verify digital signatures that the CA has implemented. If the CA digitally signs something, you must have a copy of its public key to verify that signature. AIA makes that public key available offline. If we didn't do this and the root CA was offline, we'd have to figure out some other way to get a copy of that key.",
      "summary": "Authority Information Access (AIA) is a certificate extension that enables end users to obtain the CA's certificate from an alternative location when the root CA is kept offline for security purposes. AIA publishes the root CA certificate to accessible locations, ensuring users can retrieve the CA's public key needed to verify digital signatures even when the CA itself is unavailable. This mechanism is essential for maintaining certificate validation capabilities while preserving root CA security through offline storage.",
      "metadata": {
        "chapter_num": "3",
        "section_num": "3.5.5",
        "title": "Manage Certificates",
        "content_type": "video",
        "filename": "3.5.5_Manage_Certificates_[video].txt",
        "file_path": "/Users/basantabaral/CompTia/data_raw/03_Cryptographic_Solutions/3.5.5_Manage_Certificates_[video].txt",
        "word_count": 1890,
        "has_content": true
      },
      "section_header": "Authority Information Access",
      "timestamp_range": "08:43-10:00"
    },
    {
      "chunk_id": "3.5.5_chunk_7",
      "content": "In addition to AIA, we also have CRL and CRL Distribution Point, also known as CDP. This is where users go to get a copy of the latest CRL. The same issue exists here as exists with the root CA's public key. If the root CA is offline, we can't access the CRL. We can't let everybody know which certificates have been revoked. What we can do is publish the CRL to some other location that clients can access. For example, we can publish it to Active Directory via LDAP. We could access it on a web page, or we could put it in the file system. Let's go ahead and click Cancel. If we go back to our CertSRV web page, we can see there's an option to download the CA certificate or view the certificate chain or CRL. This option, Download a CA certificate, is AIA. This one is CDP. If we click this option, we could download the latest CRL or the latest delta CRL.",
      "summary": "CRL Distribution Point (CDP) is a location where clients can access the latest Certificate Revocation List when the root CA is offline, with common distribution methods including Active Directory via LDAP, web pages, or file systems. CDP addresses the availability issue of offline root CAs by publishing CRLs to accessible locations, allowing users to verify certificate revocation status. Certificate services web interfaces typically provide CDP functionality alongside AIA, enabling downloads of current CRLs and delta CRLs for certificate validation.",
      "metadata": {
        "chapter_num": "3",
        "section_num": "3.5.5",
        "title": "Manage Certificates",
        "content_type": "video",
        "filename": "3.5.5_Manage_Certificates_[video].txt",
        "file_path": "/Users/basantabaral/CompTia/data_raw/03_Cryptographic_Solutions/3.5.5_Manage_Certificates_[video].txt",
        "word_count": 1890,
        "has_content": true
      },
      "section_header": "CRL Distribution Point",
      "timestamp_range": "10:00-10:58"
    },
    {
      "chunk_id": "3.5.5_chunk_8",
      "content": "In this demonstration, we covered various aspects of managing certificates within the public key infrastructure. We discussed requesting certificates, manual approval, issuing certificates, and revoking certificates. We also delved into the availability of the CA's public keys via AIA and the publication of the Certificate Revocation List (CRL) to inform users about revoked certificates.",
      "summary": "This demonstration covered essential Public Key Infrastructure (PKI) certificate management processes including certificate requesting, manual approval workflows, issuance procedures, and revocation mechanisms. Key components discussed include Authority Information Access (AIA) for distributing Certificate Authority public keys and Certificate Revocation Lists (CRL) for communicating revoked certificate status to users. These PKI management practices are critical for maintaining secure digital certificate lifecycles and ensuring proper authentication and encryption in enterprise environments.",
      "metadata": {
        "chapter_num": "3",
        "section_num": "3.5.5",
        "title": "Manage Certificates",
        "content_type": "video",
        "filename": "3.5.5_Manage_Certificates_[video].txt",
        "file_path": "/Users/basantabaral/CompTia/data_raw/03_Cryptographic_Solutions/3.5.5_Manage_Certificates_[video].txt",
        "word_count": 1890,
        "has_content": true
      },
      "section_header": "Summary",
      "timestamp_range": "10:58-11:23"
    }
  ],
  "num_chunks": 8,
  "document_summary": "Manage Certificates (video): To make sure that this is set correctly, we're going to right-click on the CA, go to Properties, go to Policy Module, go to Properties again. It's intended for EFS encryptions, securing email, and client authentication. In these situations, we should no longer use this certificate for encryption."
}