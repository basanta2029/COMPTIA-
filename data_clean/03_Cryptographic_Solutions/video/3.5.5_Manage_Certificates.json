{
  "metadata": {
    "chapter_num": "3",
    "section_num": "3.5.5",
    "title": "Manage Certificates",
    "content_type": "video",
    "filename": "3.5.5_Manage_Certificates_[video].txt",
    "file_path": "/Users/basantabaral/CompTia/data_raw/03_Cryptographic_Solutions/3.5.5_Manage_Certificates_[video].txt",
    "word_count": 1890,
    "has_content": true
  },
  "full_content": "In this demonstration, we're going to practice managing the public key infrastructure. To do this, we'll use the Windows Server 2022 system that already has Active Directory Certificate Services installed, which makes it a certificate authority, or CA. It's called Active Directory Certificate Services because the CA itself is integrated with Active Directory to authenticate certificate requests. We're going to practice requesting, approving, issuing, and revoking certificates on the CA. In order to manage the CA, we need to launch the CA console by clicking Tools and Certificate Authority. We can see here the CA itself and the certificate categories: Revoke Certificates, Issue Certificates, Pending Requests, and Failed Requests. By default, the CA is set to automatically approve any new certificate requests. However, we don't want that to happen. Instead, we want to move the certificate request to a pending state, here in Pending Requests, until an administrator comes through and manually reviews the request. Then he or she either approves or denies it. To make sure that this is set correctly, we're going to right-click on the CA, go to Properties, go to Policy Module, go to Properties again. We'll change this so that new certificate requests are sent to Pending until approved. Now we are given a prompt that we need to restart certificate services for that change to go into effect. I'll do that now by right clicking on the CA, going to All Tasks, then Stop Service. Then I'll do the same thing and Start the service again. With that setting checked, we want to request a new certificate now. There are two different ways to do this. With the first method, I install the certificate authority and I also install the Certificate Enrollment Page. This allows users to request certificates using a web page running from the Internet Information Server Service on the CA itself. Let's go ahead and open up Microsoft Edge. We're going to point it to the right URL for the local host. There it is. It's going to be local host /certsrv. You see here the first task on the list is request a certificate. Alright, we're going to come back to this window a little bit later. The second method is using the MMC console. Let's go ahead and right-click on the window. Go to Run, MMC, and hit Yes. First, we're going to need to add some snap-ins. So, we're going to go Add or Remove Snap-in. We need the Certificate snap-in. Go to Add, My User Account, Finish, and Okay. The snap-in is here. Now we can see all the different types of certificates that we can create for our current user. We're going to actually create one under Personal. Go to Certificates, right-click, click All Tasks, and Request New Certificate. Go through Next, Next, Select User, Enroll, and Finish. Now let's go back to our CA console. If we go into Pending Requests, we can see that it was properly sent straight to our Pending Requests. It wasn't actually issued. From this screen, we can view the pending request and see the request ID here. This is where we can now request whether we want to approve or deny this certificate. If we right-click it, we have the option to issue or deny. Let's go ahead and issue this certificate. Now the certificate request is gone from Pending. If we go to Issued Certificates, we can now see It's been officially issued. We can see all sorts of information here. For example, who it's issued to, who it was issued by, and the certificate authority, which is our certificate authority. We see the certification expiration date here and its intended purpose. So, that's a personal certificate. It's intended for EFS encryptions, securing email, and client authentication. It was created using the user certificate template. If we double-click the certificate, we can view the date range when it's valid and we can go to the Details tab. Here we can view additional details about the certificate. And if we click the Certificate Path tab, we can view the certificate path up to the root CA. In this demonstration, we only have one CA and there are no subordinate CAs. So, the certificate path is actually really short. But in many organizations, you'll have one or more root CAs with subordinate CAs associated with it. So, the Certificate Path tab can be used to view the path through the subordinate CAs up to the root CA. Let's close this and go back to our CA console. There may be different situations when the certificate shouldn't be used. For example, this is the case if the private key gets compromised in some way. In these situations, we should no longer use this certificate for encryption. We would need to revoke it. To do this, we simply right-click the certificate, go to All Tasks, and to Revoke. You can specify a reason code for why this certificate is being revoked. If you look, the last code is Certificate Hold. This is used in situations where you think there might be a problem with the certificate but you're not 100 percent sure. We want to put the certificate on hold without fully revoking it so that we can verify whether or not it's an issue that would require it to be fully revoked or not. If there is no issue, we can take it off hold and continue using it. If there's a problem, we can fully revoke it. If you were to use one of the other options here to revoke the certificate, such as Key Compromise, you couldn't unrevoke it. It's gone. You'll have to issue a new certificate. Let's go ahead and put it in Certificate Hold and hit Yes. You see it clears out the Issued Certificates, and now it's on hold. Let's go to Revoke. You can see right here the revocation reason: Certificate Hold. Because we just held it instead of revoking it all the way, we can unrevoke it. To do this, we right-click, go to All Tasks, and Unrevoke Certificate. Alright, it removed it. If we go back to Issued Certificates, we can see the certificate is back for use again. Let's go ahead and do this again. But this time, go to All Tasks and revoke it for a different reason. Let's go ahead and just say Key Compromise. Hit Yes. Alright, now it's revoked. If we go back to Revoked Certificates and we right-click, go to All Tasks, and try to unrevoke it, we can't. We get this error: unrevoke command failed. Certificates can only be unrevoked if they're revoked with reason code Certificate Hold. So, this certificate no longer can be used. You would have to reissue a new certificate in order for them to use it. After you've revoked a certificate, you need to let everyone know that the certificate has been revoked and shouldn't be used anymore. This is done by publishing the latest Certificate Revocation List. To do this, we go to our Revoked Certificates folder, we right-click, go to All Tasks, and then click Publish. This will publish the latest list of revoked certificates to the Certificate Revocation List. There are two different types of Certificate Revocation Lists, or CRLs. You can publish a full CRL, which contains a list of all the revoked certificates. Or we can just publish a delta CRL which only contains the certificates that have been revoked since the last time the full CRL was published. For our purposes, we're going to publish a new CRL because it's the first time we've actually published a CRL from this CA. Let's go ahead and click Okay. If you forget to do this manually, it's okay because the CA should be configured to automatically publish the CRL at a particular interval. If we right-click, hit Revoke Certificates again, and go to Properties this time, we can see the CRL publishing parameters. By default, the full CRL is published once a week and the delta CRLs are published once a day. If we click the View CRLs tab, then click CRL, and then click the revocation list, we can see the current CRL and the certificates that were just revoked. Because this CA hasn't been in use very long, there are not many certificates to be revoked. Let's go ahead and close it. Click OK and OK. Alright, now let's look at the properties of the CA. Let's right-click the Root CA and Properties. Alright, we're going to go to the Extensions tab. The Extensions tab has two acronyms that are very important to understand. The first one is Authority Information Access, or AIA. The AIA allows end users to obtain the certificate used by the CA itself. This can be very useful if you have a root CA that is offline for security reasons. This is not an uncommon configuration. Some organizations will keep their root CAs offline all the time to make them less susceptible to compromise. But we still need to have a copy of the root CA certificate. To make this possible, we use AIA to publish a copy of the root CA certificate to some other location so that users can still access the root CA certificate. This is important because we need that root CA certificate with the CA's public key in order to verify digital signatures that the CA has implemented. If the CA digitally signs something, you must have a copy of its public key to verify that signature. AIA makes that public key available offline. If we didn't do this and the root CA was offline, we'd have to figure out some other way to get a copy of that key. In addition to AIA, we also have CRL and CRL Distribution Point, also known as CDP. This is where users go to get a copy of the latest CRL. The same issue exists here as exists with the root CA's public key. If the root CA is offline, we can't access the CRL. We can't let everybody know which certificates have been revoked. What we can do is publish the CRL to some other location that clients can access. For example, we can publish it to Active Directory via LDAP. We could access it on a web page, or we could put it in the file system. Let's go ahead and click Cancel. If we go back to our CertSRV web page, we can see there's an option to download the CA certificate or view the certificate chain or CRL. This option, Download a CA certificate, is AIA. This one is CDP. If we click this option, we could download the latest CRL or the latest delta CRL. In this demonstration, we covered various aspects of managing certificates within the public key infrastructure. We discussed requesting certificates, manual approval, issuing certificates, and revoking certificates. We also delved into the availability of the CA's public keys via AIA and the publication of the Certificate Revocation List (CRL) to inform users about revoked certificates.",
  "chunks": [
    {
      "chunk_id": "3.5.5_chunk_1",
      "content": "In this demonstration, we're going to practice managing the public key infrastructure. To do this, we'll use the Windows Server 2022 system that already has Active Directory Certificate Services installed, which makes it a certificate authority, or CA. It's called Active Directory Certificate Services because the CA itself is integrated with Active Directory to authenticate certificate requests. We're going to practice requesting, approving, issuing, and revoking certificates on the CA. In order to manage the CA, we need to launch the CA console by clicking Tools and Certificate Authority. We can see here the CA itself and the certificate categories: Revoke Certificates, Issue Certificates, Pending Requests, and Failed Requests. By default, the CA is set to automatically approve any new certificate requests. However, we don't want that to happen. Instead, we want to move the certificate request to a pending state, here in Pending Requests, until an administrator comes through and manually reviews the request. Then he or she either approves or denies it. To make sure that this is set correctly, we're going to right-click on the CA, go to Properties, go to Policy Module, go to Properties again. We'll change this so that new certificate requests are sent to Pending until approved. Now we are given a prompt that we need to restart certificate services for that change to go into effect. I'll do that now by right clicking on the CA, going to All Tasks, then Stop Service. Then I'll do the same thing and Start the service again.",
      "summary": "This section focuses on managing public key infrastructure (PKI) using Windows Server 2022's Active Directory Certificate Services (AD CS) as a certificate authority (CA). Key tasks include requesting, approving, issuing, and revoking certificates, with an emphasis on changing the default setting to require manual approval for new certificate requests. Practical applications involve configuring the CA console to manage certificate requests effectively, ensuring enhanced security through administrator oversight.",
      "metadata": {
        "chapter_num": "3",
        "section_num": "3.5.5",
        "title": "Manage Certificates",
        "content_type": "video",
        "filename": "3.5.5_Manage_Certificates_[video].txt",
        "file_path": "/Users/basantabaral/CompTia/data_raw/03_Cryptographic_Solutions/3.5.5_Manage_Certificates_[video].txt",
        "word_count": 1890,
        "has_content": true
      },
      "section_header": "Managing Certificates",
      "timestamp_range": "00:00-01:53"
    },
    {
      "chunk_id": "3.5.5_chunk_2",
      "content": "With that setting checked, we want to request a new certificate now. There are two different ways to do this. With the first method, I install the certificate authority and I also install the Certificate Enrollment Page. This allows users to request certificates using a web page running from the Internet Information Server Service on the CA itself. Let's go ahead and open up Microsoft Edge. We're going to point it to the right URL for the local host. There it is. It's going to be local host /certsrv. You see here the first task on the list is request a certificate. Alright, we're going to come back to this window a little bit later. The second method is using the MMC console. Let's go ahead and right-click on the window. Go to Run, MMC, and hit Yes. First, we're going to need to add some snap-ins. So, we're going to go Add or Remove Snap-in. We need the Certificate snap-in. Go to Add, My User Account, Finish, and Okay. The snap-in is here. Now we can see all the different types of certificates that we can create for our current user. We're going to actually create one under Personal. Go to Certificates, right-click, click All Tasks, and Request New Certificate. Go through Next, Next, Select User, Enroll, and Finish.",
      "summary": "This section covers the process of requesting a new certificate using two methods: through a web-based Certificate Enrollment Page hosted on a Certificate Authority (CA) and via the Microsoft Management Console (MMC). The web method allows users to request certificates directly from a browser, while the MMC method involves adding the Certificate snap-in to manage and request certificates for the current user. Both approaches emphasize the practical application of certificate management in securing communications and validating identities within a network.",
      "metadata": {
        "chapter_num": "3",
        "section_num": "3.5.5",
        "title": "Manage Certificates",
        "content_type": "video",
        "filename": "3.5.5_Manage_Certificates_[video].txt",
        "file_path": "/Users/basantabaral/CompTia/data_raw/03_Cryptographic_Solutions/3.5.5_Manage_Certificates_[video].txt",
        "word_count": 1890,
        "has_content": true
      },
      "section_header": "Request a Certificate",
      "timestamp_range": "01:53-03:17"
    },
    {
      "chunk_id": "3.5.5_chunk_3",
      "content": "Now let's go back to our CA console. If we go into Pending Requests, we can see that it was properly sent straight to our Pending Requests. It wasn't actually issued. From this screen, we can view the pending request and see the request ID here. This is where we can now request whether we want to approve or deny this certificate. If we right-click it, we have the option to issue or deny. Let's go ahead and issue this certificate. Now the certificate request is gone from Pending. If we go to Issued Certificates, we can now see It's been officially issued. We can see all sorts of information here. For example, who it's issued to, who it was issued by, and the certificate authority, which is our certificate authority. We see the certification expiration date here and its intended purpose. So, that's a personal certificate. It's intended for EFS encryptions, securing email, and client authentication. It was created using the user certificate template. If we double-click the certificate, we can view the date range when it's valid and we can go to the Details tab. Here we can view additional details about the certificate. And if we click the Certificate Path tab, we can view the certificate path up to the root CA. In this demonstration, we only have one CA and there are no subordinate CAs. So, the certificate path is actually really short. But in many organizations, you'll have one or more root CAs with subordinate CAs associated with it. So, the Certificate Path tab can be used to view the path through the subordinate CAs up to the root CA. Let's close this and go back to our CA console.",
      "summary": "In this section, the process of approving a certificate request within a Certificate Authority (CA) console is demonstrated, highlighting the transition from Pending Requests to Issued Certificates. Key details such as the certificate's purpose for EFS encryption, email security, and client authentication, as well as its validity and certificate path, are reviewed. This practical application emphasizes the importance of managing digital certificates within an organization's security infrastructure.",
      "metadata": {
        "chapter_num": "3",
        "section_num": "3.5.5",
        "title": "Manage Certificates",
        "content_type": "video",
        "filename": "3.5.5_Manage_Certificates_[video].txt",
        "file_path": "/Users/basantabaral/CompTia/data_raw/03_Cryptographic_Solutions/3.5.5_Manage_Certificates_[video].txt",
        "word_count": 1890,
        "has_content": true
      },
      "section_header": "Approve a Certificate",
      "timestamp_range": "03:17-05:03"
    },
    {
      "chunk_id": "3.5.5_chunk_4",
      "content": "There may be different situations when the certificate shouldn't be used. For example, this is the case if the private key gets compromised in some way. In these situations, we should no longer use this certificate for encryption. We would need to revoke it. To do this, we simply right-click the certificate, go to All Tasks, and to Revoke. You can specify a reason code for why this certificate is being revoked. If you look, the last code is Certificate Hold. This is used in situations where you think there might be a problem with the certificate but you're not 100 percent sure. We want to put the certificate on hold without fully revoking it so that we can verify whether or not it's an issue that would require it to be fully revoked or not. If there is no issue, we can take it off hold and continue using it. If there's a problem, we can fully revoke it. If you were to use one of the other options here to revoke the certificate, such as Key Compromise, you couldn't unrevoke it. It's gone. You'll have to issue a new certificate. Let's go ahead and put it in Certificate Hold and hit Yes. You see it clears out the Issued Certificates, and now it's on hold. Let's go to Revoke. You can see right here the revocation reason: Certificate Hold. Because we just held it instead of revoking it all the way, we can unrevoke it. To do this, we right-click, go to All Tasks, and Unrevoke Certificate. Alright, it removed it. If we go back to Issued Certificates, we can see the certificate is back for use again. Let's go ahead and do this again. But this time, go to All Tasks and revoke it for a different reason. Let's go ahead and just say Key Compromise. Hit Yes. Alright, now it's revoked. If we go back to Revoked Certificates and we right-click, go to All Tasks, and try to unrevoke it, we can't. We get this error: unrevoke command failed. Certificates can only be unrevoked if they're revoked with reason code Certificate Hold. So, this certificate no longer can be used. You would have to reissue a new certificate in order for them to use it. After you've revoked a certificate, you need to let everyone know that the certificate has been revoked and shouldn't be used anymore. This is done by publishing the latest Certificate Revocation List. To do this, we go to our Revoked Certificates folder, we right-click, go to All Tasks, and then click Publish. This will publish the latest list of revoked certificates to the Certificate Revocation List.",
      "summary": "In the CompTIA Security+ course section on revoking certificates, key concepts include the importance of revoking certificates when private keys are compromised and the use of reason codes to manage revocation status. The practical application involves using the Certificate Hold option to temporarily suspend a certificate while verifying potential issues, and the necessity of publishing an updated Certificate Revocation List to inform users of revoked certificates. Understanding these processes is crucial for maintaining secure encryption practices.",
      "metadata": {
        "chapter_num": "3",
        "section_num": "3.5.5",
        "title": "Manage Certificates",
        "content_type": "video",
        "filename": "3.5.5_Manage_Certificates_[video].txt",
        "file_path": "/Users/basantabaral/CompTia/data_raw/03_Cryptographic_Solutions/3.5.5_Manage_Certificates_[video].txt",
        "word_count": 1890,
        "has_content": true
      },
      "section_header": "Revoke a Certificate",
      "timestamp_range": "05:03-07:32"
    },
    {
      "chunk_id": "3.5.5_chunk_5",
      "content": "There are two different types of Certificate Revocation Lists, or CRLs. You can publish a full CRL, which contains a list of all the revoked certificates. Or we can just publish a delta CRL which only contains the certificates that have been revoked since the last time the full CRL was published. For our purposes, we're going to publish a new CRL because it's the first time we've actually published a CRL from this CA. Let's go ahead and click Okay. If you forget to do this manually, it's okay because the CA should be configured to automatically publish the CRL at a particular interval. If we right-click, hit Revoke Certificates again, and go to Properties this time, we can see the CRL publishing parameters. By default, the full CRL is published once a week and the delta CRLs are published once a day. If we click the View CRLs tab, then click CRL, and then click the revocation list, we can see the current CRL and the certificates that were just revoked. Because this CA hasn't been in use very long, there are not many certificates to be revoked. Let's go ahead and close it. Click OK and OK.",
      "summary": "Certificate Revocation Lists (CRLs) are essential for managing revoked digital certificates, with two types available: full CRLs, which list all revoked certificates, and delta CRLs, which only include those revoked since the last full publication. In practice, CRLs can be configured for automatic publication, with full CRLs typically updated weekly and delta CRLs daily. Understanding how to publish and manage CRLs is crucial for maintaining the integrity and security of a Certificate Authority (CA).",
      "metadata": {
        "chapter_num": "3",
        "section_num": "3.5.5",
        "title": "Manage Certificates",
        "content_type": "video",
        "filename": "3.5.5_Manage_Certificates_[video].txt",
        "file_path": "/Users/basantabaral/CompTia/data_raw/03_Cryptographic_Solutions/3.5.5_Manage_Certificates_[video].txt",
        "word_count": 1890,
        "has_content": true
      },
      "section_header": "Certificate Revocation List",
      "timestamp_range": "07:32-08:43"
    },
    {
      "chunk_id": "3.5.5_chunk_6",
      "content": "Alright, now let's look at the properties of the CA. Let's right-click the Root CA and Properties. Alright, we're going to go to the Extensions tab. The Extensions tab has two acronyms that are very important to understand. The first one is Authority Information Access, or AIA. The AIA allows end users to obtain the certificate used by the CA itself. This can be very useful if you have a root CA that is offline for security reasons. This is not an uncommon configuration. Some organizations will keep their root CAs offline all the time to make them less susceptible to compromise. But we still need to have a copy of the root CA certificate. To make this possible, we use AIA to publish a copy of the root CA certificate to some other location so that users can still access the root CA certificate. This is important because we need that root CA certificate with the CA's public key in order to verify digital signatures that the CA has implemented. If the CA digitally signs something, you must have a copy of its public key to verify that signature. AIA makes that public key available offline. If we didn't do this and the root CA was offline, we'd have to figure out some other way to get a copy of that key.",
      "summary": "The Authority Information Access (AIA) is a critical component in certificate authority (CA) management, allowing end users to access the CA's certificate even when the root CA is kept offline for security purposes. By publishing the root CA certificate to an accessible location, AIA ensures that users can obtain the CA's public key necessary for verifying digital signatures. This mechanism is essential for maintaining the integrity and trustworthiness of digital communications in organizations.",
      "metadata": {
        "chapter_num": "3",
        "section_num": "3.5.5",
        "title": "Manage Certificates",
        "content_type": "video",
        "filename": "3.5.5_Manage_Certificates_[video].txt",
        "file_path": "/Users/basantabaral/CompTia/data_raw/03_Cryptographic_Solutions/3.5.5_Manage_Certificates_[video].txt",
        "word_count": 1890,
        "has_content": true
      },
      "section_header": "Authority Information Access",
      "timestamp_range": "08:43-10:00"
    },
    {
      "chunk_id": "3.5.5_chunk_7",
      "content": "In addition to AIA, we also have CRL and CRL Distribution Point, also known as CDP. This is where users go to get a copy of the latest CRL. The same issue exists here as exists with the root CA's public key. If the root CA is offline, we can't access the CRL. We can't let everybody know which certificates have been revoked. What we can do is publish the CRL to some other location that clients can access. For example, we can publish it to Active Directory via LDAP. We could access it on a web page, or we could put it in the file system. Let's go ahead and click Cancel. If we go back to our CertSRV web page, we can see there's an option to download the CA certificate or view the certificate chain or CRL. This option, Download a CA certificate, is AIA. This one is CDP. If we click this option, we could download the latest CRL or the latest delta CRL.",
      "summary": "The CRL Distribution Point (CDP) is essential for users to obtain the latest Certificate Revocation List (CRL), which indicates revoked certificates. If the root Certificate Authority (CA) is offline, access to the CRL may be hindered, so it is crucial to publish the CRL in accessible locations such as Active Directory via LDAP, on a web page, or within the file system. This functionality ensures that clients can verify certificate validity and maintain secure communications.",
      "metadata": {
        "chapter_num": "3",
        "section_num": "3.5.5",
        "title": "Manage Certificates",
        "content_type": "video",
        "filename": "3.5.5_Manage_Certificates_[video].txt",
        "file_path": "/Users/basantabaral/CompTia/data_raw/03_Cryptographic_Solutions/3.5.5_Manage_Certificates_[video].txt",
        "word_count": 1890,
        "has_content": true
      },
      "section_header": "CRL Distribution Point",
      "timestamp_range": "10:00-10:58"
    },
    {
      "chunk_id": "3.5.5_chunk_8",
      "content": "In this demonstration, we covered various aspects of managing certificates within the public key infrastructure. We discussed requesting certificates, manual approval, issuing certificates, and revoking certificates. We also delved into the availability of the CA's public keys via AIA and the publication of the Certificate Revocation List (CRL) to inform users about revoked certificates.",
      "summary": "This demonstration focused on managing certificates within a public key infrastructure (PKI), highlighting key processes such as requesting, approving, issuing, and revoking certificates. It emphasized the importance of the Certificate Authority's (CA) public keys and the accessibility of the Certificate Revocation List (CRL) to keep users informed about revoked certificates, ensuring secure communications and trust in digital transactions.",
      "metadata": {
        "chapter_num": "3",
        "section_num": "3.5.5",
        "title": "Manage Certificates",
        "content_type": "video",
        "filename": "3.5.5_Manage_Certificates_[video].txt",
        "file_path": "/Users/basantabaral/CompTia/data_raw/03_Cryptographic_Solutions/3.5.5_Manage_Certificates_[video].txt",
        "word_count": 1890,
        "has_content": true
      },
      "section_header": "Summary",
      "timestamp_range": "10:58-11:23"
    }
  ],
  "num_chunks": 8
}