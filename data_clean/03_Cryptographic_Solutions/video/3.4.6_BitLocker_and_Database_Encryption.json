{
  "metadata": {
    "chapter_num": "3",
    "section_num": "3.4.6",
    "title": "BitLocker and Database Encryption",
    "content_type": "video",
    "filename": "3.4.6_BitLocker_and_Database_Encryption_[video].txt",
    "file_path": "/Users/basantabaral/CompTia/data_raw/03_Cryptographic_Solutions/3.4.6_BitLocker_and_Database_Encryption_[video].txt",
    "word_count": 971,
    "has_content": true
  },
  "full_content": "Organizations often store sensitive data on devices and in databases. Implementing proper data encryption is key to securing this sensitive data. Using BitLocker and proper database encryption can help protect data if a physical device, such as a laptop, is stolen or if a hacker gains access to a database. A lost or stolen computer can be catastrophic to an organization if it holds confidential information. With the release of Windows Vista, Microsoft introduced BitLocker to address this concern. BitLocker is a powerful encryption tool that, instead of encrypting individual files and folders, encrypts an entire volume, including operating system files. BitLocker is designed to protect data from unauthorized access, even if the drive is moved to another computer. It's important to note that BitLocker isn't available on Home editions of Windows. To implement BitLocker on a computer, the hard disk must be partitioned with two volumes. The system, or boot, volume contains the Windows boot files and is created during Windows installation. The standard volume contains all other data. The system volume won't be encrypted, but the standard volume will be. One of the newer features of BitLocker in Windows 10 is the ability to only encrypt used space. This makes the encryption process so much faster. Previously, the entire drive, even space not in use, was encrypted. This process could take hours depending on the size of the drive. BitLocker can also use the computer's Trusted Platform Module, or TPM, chip to verify the integrity of the system's boot files as long as the chip is at least version 1.2. It does this by encrypting the boot files and stores the encryption key in the TPM chip. When you log in to Windows, BitLocker automatically unlocks the encrypted drive. If the drive is moved to another computer, the encryption key won't match up, and the drive can't be accessed. It's possible to configure BitLocker to protect the system files without having a TPM chip, but you have to insert a startup USB key or have a system volume password enabled to boot into Windows. When BitLocker is enabled, Windows creates the recovery key. This randomly generated key will be used if the hard drive needs to be moved to a different system, if changes are made to the startup files, or if BitLocker goes into a locked state and needs to be accessed. The recovery key is different from the user-generated password created during the configuration process. Obviously, this is an incredibly important key. Windows gives you the option to save the key to your Microsoft Account, a USB flash drive, or a file on the local computer. You can also print the key out, and if you're on a domain, you can store the key in Active Directory. It's a good idea to back up this key multiple ways and then store it safely locked. If you're on a domain, there are additional options for recovering data if the user password is lost. Using the stored recovery key would be the first and easiest option, especially if the key was stored in Active Directory. If the key can't be found, a Data Recovery Agent, or DRA, can be used. The DRA is just another account that has rights to decrypt the drive. This option must first be configured in Group Policy. If the hard drive contains the OS files, it'll need to be installed in another system as a data drive before the DRA can decrypt it. When implemented properly, BitLocker is a powerful tool that can be used to protect data in case a laptop or other device that contains sensitive information is stolen or lost. Many organizations store important sensitive data, such as customer billing information, in databases. Keeping this data encrypted helps protect it if a hacker ever gains access to the database. The three main methods of database encryption are transparent, column-level, and application-level. Before we look at these methods in detail, let's review the structure of a database. Databases are made up of multiple tables that use columns and rows filled with data. For example, we might have a table labeled Customers. In that table, we have columns labeled Name, Number, Email, and Address. The rows in each column are filled with the pertinent information. Transparent data encryption, or TDE, encrypts the entire database and all backups. TDE is used for data at rest--data that's not in current use. This method is called transparent encryption because when an authorized user needs to access the data, it's automatically decrypted, so the user doesn't see the process or need to do anything extra. Column-level encryption allows the administrator to encrypt each column using different keys. This increases security because multiple encryption keys are required to access all of the data. Keep in mind that this method does slow the database's performance. In application-level encryption, the program that's used to create or modify the data is responsible for encrypting the data. This works well because the data is encrypted before it even hits the database. The drawback of this method is that the amount of resources required for setup can be prohibitive. When an organization maintains sensitive data, they need to ensure that it's kept safe. Any of the methods in this video will help keep databases secure. That wraps up this lesson. We've covered some solutions for encrypting sensitive data. BitLocker can be used to encrypt an entire hard drive or volume, which will prevent access if a device is stolen. And there are several methods an organization can use to encrypt sensitive data that's stored in databases.",
  "chunks": [
    {
      "chunk_id": "3.4.6_chunk_1",
      "content": "Organizations often store sensitive data on devices and in databases. Implementing proper data encryption is key to securing this sensitive data. Using BitLocker and proper database encryption can help protect data if a physical device, such as a laptop, is stolen or if a hacker gains access to a database.",
      "summary": "BitLocker and Database Encryption: Implementing proper data encryption is key to securing this sensitive data. Using BitLocker and proper database encryption can help protect data if a physical device, such as a laptop, is stolen or if a hacker gains access to a database.",
      "metadata": {
        "chapter_num": "3",
        "section_num": "3.4.6",
        "title": "BitLocker and Database Encryption",
        "content_type": "video",
        "filename": "3.4.6_BitLocker_and_Database_Encryption_[video].txt",
        "file_path": "/Users/basantabaral/CompTia/data_raw/03_Cryptographic_Solutions/3.4.6_BitLocker_and_Database_Encryption_[video].txt",
        "word_count": 971,
        "has_content": true
      },
      "section_header": "BitLocker and Database Encryption",
      "timestamp_range": "00:00-00:23"
    },
    {
      "chunk_id": "3.4.6_chunk_2",
      "content": "A lost or stolen computer can be catastrophic to an organization if it holds confidential information. With the release of Windows Vista, Microsoft introduced BitLocker to address this concern. BitLocker is a powerful encryption tool that, instead of encrypting individual files and folders, encrypts an entire volume, including operating system files. BitLocker is designed to protect data from unauthorized access, even if the drive is moved to another computer. It's important to note that BitLocker isn't available on Home editions of Windows. To implement BitLocker on a computer, the hard disk must be partitioned with two volumes. The system, or boot, volume contains the Windows boot files and is created during Windows installation. The standard volume contains all other data. The system volume won't be encrypted, but the standard volume will be. One of the newer features of BitLocker in Windows 10 is the ability to only encrypt used space. This makes the encryption process so much faster. Previously, the entire drive, even space not in use, was encrypted. This process could take hours depending on the size of the drive. BitLocker can also use the computer's Trusted Platform Module, or TPM, chip to verify the integrity of the system's boot files as long as the chip is at least version 1.2. It does this by encrypting the boot files and stores the encryption key in the TPM chip. When you log in to Windows, BitLocker automatically unlocks the encrypted drive. If the drive is moved to another computer, the encryption key won't match up, and the drive can't be accessed. It's possible to configure BitLocker to protect the system files without having a TPM chip, but you have to insert a startup USB key or have a system volume password enabled to boot into Windows. When BitLocker is enabled, Windows creates the recovery key. This randomly generated key will be used if the hard drive needs to be moved to a different system, if changes are made to the startup files, or if BitLocker goes into a locked state and needs to be accessed. The recovery key is different from the user-generated password created during the configuration process. Obviously, this is an incredibly important key. Windows gives you the option to save the key to your Microsoft Account, a USB flash drive, or a file on the local computer. You can also print the key out, and if you're on a domain, you can store the key in Active Directory. It's a good idea to back up this key multiple ways and then store it safely locked. If you're on a domain, there are additional options for recovering data if the user password is lost. Using the stored recovery key would be the first and easiest option, especially if the key was stored in Active Directory. If the key can't be found, a Data Recovery Agent, or DRA, can be used. The DRA is just another account that has rights to decrypt the drive. This option must first be configured in Group Policy. If the hard drive contains the OS files, it'll need to be installed in another system as a data drive before the DRA can decrypt it. When implemented properly, BitLocker is a powerful tool that can be used to protect data in case a laptop or other device that contains sensitive information is stolen or lost.",
      "summary": "BitLocker: BitLocker is designed to protect data from unauthorized access, even if the drive is moved to another computer. If the drive is moved to another computer, the encryption key won't match up, and the drive can't be accessed.",
      "metadata": {
        "chapter_num": "3",
        "section_num": "3.4.6",
        "title": "BitLocker and Database Encryption",
        "content_type": "video",
        "filename": "3.4.6_BitLocker_and_Database_Encryption_[video].txt",
        "file_path": "/Users/basantabaral/CompTia/data_raw/03_Cryptographic_Solutions/3.4.6_BitLocker_and_Database_Encryption_[video].txt",
        "word_count": 971,
        "has_content": true
      },
      "section_header": "BitLocker",
      "timestamp_range": "00:23-03:29"
    },
    {
      "chunk_id": "3.4.6_chunk_3",
      "content": "Many organizations store important sensitive data, such as customer billing information, in databases. Keeping this data encrypted helps protect it if a hacker ever gains access to the database. The three main methods of database encryption are transparent, column-level, and application-level. Before we look at these methods in detail, let's review the structure of a database. Databases are made up of multiple tables that use columns and rows filled with data. For example, we might have a table labeled Customers. In that table, we have columns labeled Name, Number, Email, and Address. The rows in each column are filled with the pertinent information.",
      "summary": "Database Encryption: Keeping this data encrypted helps protect it if a hacker ever gains access to the database. The three main methods of database encryption are transparent, column-level, and application-level.",
      "metadata": {
        "chapter_num": "3",
        "section_num": "3.4.6",
        "title": "BitLocker and Database Encryption",
        "content_type": "video",
        "filename": "3.4.6_BitLocker_and_Database_Encryption_[video].txt",
        "file_path": "/Users/basantabaral/CompTia/data_raw/03_Cryptographic_Solutions/3.4.6_BitLocker_and_Database_Encryption_[video].txt",
        "word_count": 971,
        "has_content": true
      },
      "section_header": "Database Encryption",
      "timestamp_range": "03:29-04:09"
    },
    {
      "chunk_id": "3.4.6_chunk_4",
      "content": "Transparent data encryption, or TDE, encrypts the entire database and all backups. TDE is used for data at rest--data that's not in current use. This method is called transparent encryption because when an authorized user needs to access the data, it's automatically decrypted, so the user doesn't see the process or need to do anything extra.",
      "summary": "Transparent Data Encryption (TDE): Transparent data encryption, or TDE, encrypts the entire database and all backups. This method is called transparent encryption because when an authorized user needs to access the data, it's automatically decrypted, so the user doesn't see the process or need to do anything extra.",
      "metadata": {
        "chapter_num": "3",
        "section_num": "3.4.6",
        "title": "BitLocker and Database Encryption",
        "content_type": "video",
        "filename": "3.4.6_BitLocker_and_Database_Encryption_[video].txt",
        "file_path": "/Users/basantabaral/CompTia/data_raw/03_Cryptographic_Solutions/3.4.6_BitLocker_and_Database_Encryption_[video].txt",
        "word_count": 971,
        "has_content": true
      },
      "section_header": "Transparent Data Encryption (TDE)",
      "timestamp_range": "04:09-04:29"
    },
    {
      "chunk_id": "3.4.6_chunk_5",
      "content": "Column-level encryption allows the administrator to encrypt each column using different keys. This increases security because multiple encryption keys are required to access all of the data. Keep in mind that this method does slow the database's performance.",
      "summary": "Column-Level Encryption: Column-level encryption allows the administrator to encrypt each column using different keys. This increases security because multiple encryption keys are required to access all of the data.",
      "metadata": {
        "chapter_num": "3",
        "section_num": "3.4.6",
        "title": "BitLocker and Database Encryption",
        "content_type": "video",
        "filename": "3.4.6_BitLocker_and_Database_Encryption_[video].txt",
        "file_path": "/Users/basantabaral/CompTia/data_raw/03_Cryptographic_Solutions/3.4.6_BitLocker_and_Database_Encryption_[video].txt",
        "word_count": 971,
        "has_content": true
      },
      "section_header": "Column-Level Encryption",
      "timestamp_range": "04:29-04:43"
    },
    {
      "chunk_id": "3.4.6_chunk_6",
      "content": "In application-level encryption, the program that's used to create or modify the data is responsible for encrypting the data. This works well because the data is encrypted before it even hits the database. The drawback of this method is that the amount of resources required for setup can be prohibitive. When an organization maintains sensitive data, they need to ensure that it's kept safe. Any of the methods in this video will help keep databases secure.",
      "summary": "Application-Level Encryption: In application-level encryption, the program that's used to create or modify the data is responsible for encrypting the data. This works well because the data is encrypted before it even hits the database.",
      "metadata": {
        "chapter_num": "3",
        "section_num": "3.4.6",
        "title": "BitLocker and Database Encryption",
        "content_type": "video",
        "filename": "3.4.6_BitLocker_and_Database_Encryption_[video].txt",
        "file_path": "/Users/basantabaral/CompTia/data_raw/03_Cryptographic_Solutions/3.4.6_BitLocker_and_Database_Encryption_[video].txt",
        "word_count": 971,
        "has_content": true
      },
      "section_header": "Application-Level Encryption",
      "timestamp_range": "04:43-05:10"
    },
    {
      "chunk_id": "3.4.6_chunk_7",
      "content": "That wraps up this lesson. We've covered some solutions for encrypting sensitive data. BitLocker can be used to encrypt an entire hard drive or volume, which will prevent access if a device is stolen. And there are several methods an organization can use to encrypt sensitive data that's stored in databases.",
      "summary": "BitLocker can be used to encrypt an entire hard drive or volume, which will prevent access if a device is stolen. And there are several methods an organization can use to encrypt sensitive data that's stored in databases.",
      "metadata": {
        "chapter_num": "3",
        "section_num": "3.4.6",
        "title": "BitLocker and Database Encryption",
        "content_type": "video",
        "filename": "3.4.6_BitLocker_and_Database_Encryption_[video].txt",
        "file_path": "/Users/basantabaral/CompTia/data_raw/03_Cryptographic_Solutions/3.4.6_BitLocker_and_Database_Encryption_[video].txt",
        "word_count": 971,
        "has_content": true
      },
      "section_header": "Summary",
      "timestamp_range": "05:10-05:29"
    }
  ],
  "num_chunks": 7,
  "document_summary": "BitLocker and Database Encryption (video): Implementing proper data encryption is key to securing this sensitive data. Using BitLocker and proper database encryption can help protect data if a physical device, such as a laptop, is stolen or if a hacker gains access to a database. This increases security because multiple encryption keys are required to access all of the data."
}