{
  "metadata": {
    "chapter_num": "2",
    "section_num": "2.2.5",
    "title": "Use the Social Engineer Toolkit",
    "content_type": "video",
    "filename": "2.2.5_Use_the_Social_Engineer_Toolkit_[video].txt",
    "file_path": "/Users/basantabaral/CompTia/data_raw/02_Threats_Vulnerabilities_and_Mitigations/2.2.5_Use_the_Social_Engineer_Toolkit_[video].txt",
    "word_count": 860,
    "has_content": true
  },
  "full_content": "In this demo, we're going to talk about how to capture user credentials from a web page. While there are many different methods for gaining unauthorized access to a user's web account, we're going to do it by cloning a website's sign-in page and directing the user to enter the information on a fake page. To fool a user into going to our cloned sign-in page, we would create a phishing email and send it to them. But in this demo, we're just going to cover cloning. To do this, we will use one of the many exploits provided by the Social Engineering Toolkit. Because this is a demo, we're going to use a fake website. I'll enter the credentials myself to show how the tool works. First, we need to find a website that we would like to attack, But since we'll only be cloning one page of the site, we need to know what the full URL is for the login page. Let's go to www.fakewebsite.com. This is a Wordpress site, which makes our life a little easier, since the login page name is almost always the same. To make sure, though, we'll click the login button on the page and see where it takes us. I'll scroll down here and click Log in. Now that we're on the login page, we can look in the address field and see the full URL of the exact page we want to clone. Since we'll need this URL later, we're going to copy it. Now that we have the page we want to clone, let's open up the Social Engineering Toolkit. Since it's a command-line app, we'll be working in the terminal. Once the terminal opens, I'll type in 'setoolkit' and press Enter. On this screen, you can see that there are two attack options, Social Engineering Attacks and Penetration Testing. If you add extra attacks made by others, they'll appear under Third Party Modules. The remaining options are for maintaining the Social Engineering Toolkit. The option that we're looking for can be found under Social Engineering Attacks. So, I'll select number 1 and press Enter. We're interested in cloning a website, so we'll select option 2, Website Attack Vectors. To get to the clone option from here, we'll select number 3, Credential Harvester Attack Method, and then number 2, Site Cloner. Since we'll be using this machine to host the cloned page and listen for credentials, we can leave the default options. I'll just press Enter to continue. Next, we'll use Ctrl+Shift+V to paste the URL we copied earlier and press Enter again. Now the Social Engineering Toolkit is saying, \"Hey, do you understand what we're saying here?\" Yes, yes I do. It also offers a couple of troubleshooting instructions in case the tool isn't working. Since we expect it to work, we'll just press Enter to continue. Now we're finally at the page that will show us if the tool sees anything interesting. Earlier, I set up a website with a name that's just a little different from the name of the website we're cloning. This is the page that you would send to someone to try to trick them into opening it. It's basically the same address, but with the number 1 at the end. Let's go to that page in our web browser. I'm going to keep the terminal open on the side and open the web browser on the other side of the screen so you can see the tool working. I'll do that by opening Firefox and navigating to www.fakewebsite1.com. You can see that when I navigated to the cloned web page, something happened over to the right in the tool. It printed some information to the screen. This just shows that a connection request that was served to the requesting computer. Now let's see what happens if I put in some user credentials. I'll type in 'admin' for the user and 'letmein' for the password. Press Enter to log in. And there we go. In the terminal, you can see some more information from the tool. Note that the tool tries to guess what information is important. This time, it correctly identified the password field, but didn't find a username field. That's because Wordpress username fields have kind of ambiguous names. But that didn't get in our way--this information was caught, as you can see right over here. It's worth noting that, after an attempted authentication, the Social Engineering Toolkit actually redirected us to the real website. This means that, typically, a user would likely just assume that they had entered their credentials incorrectly and try again. They probably wouldn't suspect a thing. And that's it for this demo. We discussed how to use the Site Cloner in the Social Engineering Toolkit, and we saw how you--or anyone--can clone a website's look and feel and trick users into entering their credentials on a fake website.",
  "chunks": [
    {
      "chunk_id": "2.2.5_chunk_1",
      "content": "In this demo, we're going to talk about how to capture user credentials from a web page. While there are many different methods for gaining unauthorized access to a user's web account, we're going to do it by cloning a website's sign-in page and directing the user to enter the information on a fake page. To fool a user into going to our cloned sign-in page, we would create a phishing email and send it to them.",
      "summary": "The Social Engineer Toolkit (SET) demonstrates credential harvesting attacks through website cloning, where attackers replicate legitimate sign-in pages to capture user login credentials when victims enter their information. This attack method is typically deployed via phishing emails that redirect users to the fraudulent cloned website. Organizations must implement user awareness training and email security controls to defend against these social engineering techniques that bypass technical security measures.",
      "metadata": {
        "chapter_num": "2",
        "section_num": "2.2.5",
        "title": "Use the Social Engineer Toolkit",
        "content_type": "video",
        "filename": "2.2.5_Use_the_Social_Engineer_Toolkit_[video].txt",
        "file_path": "/Users/basantabaral/CompTia/data_raw/02_Threats_Vulnerabilities_and_Mitigations/2.2.5_Use_the_Social_Engineer_Toolkit_[video].txt",
        "word_count": 860,
        "has_content": true
      },
      "section_header": "Use the Social Engineer Toolkit (SET)",
      "timestamp_range": "00:00-00:24"
    },
    {
      "chunk_id": "2.2.5_chunk_2",
      "content": "But in this demo, we're just going to cover cloning. To do this, we will use one of the many exploits provided by the Social Engineering Toolkit. Because this is a demo, we're going to use a fake website. I'll enter the credentials myself to show how the tool works. First, we need to find a website that we would like to attack, But since we'll only be cloning one page of the site, we need to know what the full URL is for the login page. Let's go to www.fakewebsite.com. This is a Wordpress site, which makes our life a little easier, since the login page name is almost always the same. To make sure, though, we'll click the login button on the page and see where it takes us. I'll scroll down here and click Log in. Now that we're on the login page, we can look in the address field and see the full URL of the exact page we want to clone.",
      "summary": "The Social Engineering Toolkit enables website cloning attacks by replicating login pages to harvest credentials, demonstrated here using a WordPress site's login page at www.fakewebsite.com. Attackers identify target login URLs by navigating to the authentication page and copying the full URL path for cloning purposes. WordPress sites are particularly vulnerable due to their predictable login page naming conventions, making them easier targets for credential harvesting attacks.",
      "metadata": {
        "chapter_num": "2",
        "section_num": "2.2.5",
        "title": "Use the Social Engineer Toolkit",
        "content_type": "video",
        "filename": "2.2.5_Use_the_Social_Engineer_Toolkit_[video].txt",
        "file_path": "/Users/basantabaral/CompTia/data_raw/02_Threats_Vulnerabilities_and_Mitigations/2.2.5_Use_the_Social_Engineer_Toolkit_[video].txt",
        "word_count": 860,
        "has_content": true
      },
      "section_header": "Choose a Victim",
      "timestamp_range": "00:24-01:15"
    },
    {
      "chunk_id": "2.2.5_chunk_3",
      "content": "Since we'll need this URL later, we're going to copy it. Now that we have the page we want to clone, let's open up the Social Engineering Toolkit. Since it's a command-line app, we'll be working in the terminal. Once the terminal opens, I'll type in 'setoolkit' and press Enter. On this screen, you can see that there are two attack options, Social Engineering Attacks and Penetration Testing. If you add extra attacks made by others, they'll appear under Third Party Modules. The remaining options are for maintaining the Social Engineering Toolkit. The option that we're looking for can be found under Social Engineering Attacks. So, I'll select number 1 and press Enter. We're interested in cloning a website, so we'll select option 2, Website Attack Vectors. To get to the clone option from here, we'll select number 3, Credential Harvester Attack Method, and then number 2, Site Cloner. Since we'll be using this machine to host the cloned page and listen for credentials, we can leave the default options. I'll just press Enter to continue. Next, we'll use Ctrl+Shift+V to paste the URL we copied earlier and press Enter again. Now the Social Engineering Toolkit is saying, \"Hey, do you understand what we're saying here?\" Yes, yes I do. It also offers a couple of troubleshooting instructions in case the tool isn't working. Since we expect it to work, we'll just press Enter to continue. Now we're finally at the page that will show us if the tool sees anything interesting. Earlier, I set up a website with a name that's just a little different from the name of the website we're cloning. This is the page that you would send to someone to try to trick them into opening it. It's basically the same address, but with the number 1 at the end. Let's go to that page in our web browser. I'm going to keep the terminal open on the side and open the web browser on the other side of the screen so you can see the tool working. I'll do that by opening Firefox and navigating to www.fakewebsite1.com.",
      "summary": "The Social Engineering Toolkit (setoolkit) enables website cloning attacks through its Website Attack Vectors menu, specifically using the Credential Harvester Attack Method and Site Cloner option to create fraudulent copies of legitimate websites. Attackers paste a target URL into the tool, which generates a cloned site hosted locally to capture user credentials when victims enter login information. This social engineering technique relies on domain spoofing with similar URLs (like adding numbers to legitimate domain names) to deceive users into visiting malicious clones instead of authentic websites.",
      "metadata": {
        "chapter_num": "2",
        "section_num": "2.2.5",
        "title": "Use the Social Engineer Toolkit",
        "content_type": "video",
        "filename": "2.2.5_Use_the_Social_Engineer_Toolkit_[video].txt",
        "file_path": "/Users/basantabaral/CompTia/data_raw/02_Threats_Vulnerabilities_and_Mitigations/2.2.5_Use_the_Social_Engineer_Toolkit_[video].txt",
        "word_count": 860,
        "has_content": true
      },
      "section_header": "Clone the Website",
      "timestamp_range": "01:15-03:09"
    },
    {
      "chunk_id": "2.2.5_chunk_4",
      "content": "You can see that when I navigated to the cloned web page, something happened over to the right in the tool. It printed some information to the screen. This just shows that a connection request that was served to the requesting computer. Now let's see what happens if I put in some user credentials. I'll type in 'admin' for the user and 'letmein' for the password. Press Enter to log in. And there we go. In the terminal, you can see some more information from the tool. Note that the tool tries to guess what information is important. This time, it correctly identified the password field, but didn't find a username field. That's because Wordpress username fields have kind of ambiguous names. But that didn't get in our way--this information was caught, as you can see right over here. It's worth noting that, after an attempted authentication, the Social Engineering Toolkit actually redirected us to the real website. This means that, typically, a user would likely just assume that they had entered their credentials incorrectly and try again. They probably wouldn't suspect a thing.",
      "summary": "The Social Engineer Toolkit demonstrates credential harvesting attacks by cloning legitimate websites and capturing user login attempts, automatically identifying password fields and logging authentication data. After capturing credentials, the toolkit redirects victims to the real website, making users believe they simply mistyped their login information rather than being compromised. This phishing technique exploits user trust and creates plausible deniability for attackers while successfully stealing authentication credentials.",
      "metadata": {
        "chapter_num": "2",
        "section_num": "2.2.5",
        "title": "Use the Social Engineer Toolkit",
        "content_type": "video",
        "filename": "2.2.5_Use_the_Social_Engineer_Toolkit_[video].txt",
        "file_path": "/Users/basantabaral/CompTia/data_raw/02_Threats_Vulnerabilities_and_Mitigations/2.2.5_Use_the_Social_Engineer_Toolkit_[video].txt",
        "word_count": 860,
        "has_content": true
      },
      "section_header": "Enter Credentials on the Cloned Website",
      "timestamp_range": "03:09-04:07"
    },
    {
      "chunk_id": "2.2.5_chunk_5",
      "content": "And that's it for this demo. We discussed how to use the Site Cloner in the Social Engineering Toolkit, and we saw how you--or anyone--can clone a website's look and feel and trick users into entering their credentials on a fake website.",
      "summary": "This demo demonstrated the Social Engineering Toolkit's Site Cloner feature, which enables attackers to replicate legitimate websites' appearance and functionality to create convincing phishing sites. The cloned websites are designed to harvest user credentials when victims unknowingly enter their login information on the fraudulent pages. This technique represents a common social engineering attack vector that security professionals must understand to implement effective anti-phishing defenses and user awareness training.",
      "metadata": {
        "chapter_num": "2",
        "section_num": "2.2.5",
        "title": "Use the Social Engineer Toolkit",
        "content_type": "video",
        "filename": "2.2.5_Use_the_Social_Engineer_Toolkit_[video].txt",
        "file_path": "/Users/basantabaral/CompTia/data_raw/02_Threats_Vulnerabilities_and_Mitigations/2.2.5_Use_the_Social_Engineer_Toolkit_[video].txt",
        "word_count": 860,
        "has_content": true
      },
      "section_header": "Summary",
      "timestamp_range": "04:07-04:21"
    }
  ],
  "num_chunks": 5,
  "document_summary": "Use the Social Engineer Toolkit (video): On this screen, you can see that there are two attack options, Social Engineering Attacks and Penetration Testing. If you add extra attacks made by others, they'll appear under Third Party Modules. This means that, typically, a user would likely just assume that they had entered their credentials incorrectly and try again."
}