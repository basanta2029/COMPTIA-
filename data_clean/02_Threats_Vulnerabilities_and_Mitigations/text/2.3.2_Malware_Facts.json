{
  "metadata": {
    "chapter_num": "2",
    "section_num": "2.3.2",
    "title": "Malware Facts",
    "content_type": "text",
    "filename": "2.3.2_Malware_Facts_[text].txt",
    "file_path": "/Users/basantabaral/CompTia/data_raw/02_Threats_Vulnerabilities_and_Mitigations/2.3.2_Malware_Facts_[text].txt",
    "word_count": 2990,
    "has_content": true
  },
  "full_content": "Security Pro 8.0 By classifying the various types of malware and identifying the signs of infection, security teams are better prepared to remediate compromised systems or prevent malware from executing in the first place. Malware classification Computer viruses Spyware and Keyloggers Backdoors and Remote Access Trojans Rootkits Ransomware, Crypto-Malware, and Logic Bombs Crypto-Ransomware Logic Bombs Malware Classification Many of the intrusion attempts perpetrated against computer networks depend on the use of malicious software or malware. Malware is simply defined as software that does something bad from the perspective of the system owner. A complicating factor with malware classification is the degree to which its installation is expected or tolerated by the user. Some malware classifications, such as Trojan, virus, and worm, focus on the vector used by the malware. The vector is the method by which the malware executes on a computer and potentially spreads to other network hosts. The following categories describe some types of malware according to vector: Viruses and worms represent some of the first types of malware and spread without any authorization from the user by being concealed within the executable code of another process. These processes are described as being infected with malware. Trojan refers to malware concealed within an installer package for software that appears to be legitimate. This type of malware does not seek any type of consent for installation and is actively designed to operate secretly. Potentially unwanted programs (PUPs)/Potentially unwanted applications (PUAs) are software installed alongside a package selected by the user or perhaps bundled with a new computer system. Unlike a Trojan, the presence of a PUP is not automatically regarded as malicious. It may have been installed without active consent or with consent from a purposefully confusing license agreement. This type of software is sometimes described as grayware rather than malware. It can also be referred to as bloatware. Malware classification by vector Description Other classifications are based on the payload delivered by the malware. The payload is an action performed by the malware other than simply replicating or persisting on a host. Examples of payload classifications include spyware, rootkit, remote access Trojan (RAT), and ransomware. Computer Viruses A computer virus is a type of malware designed to replicate and spread from computer to computer, usually by \"infecting\" executable applications or program code. There are several different types of viruses, and they are generally classified by the different types of file or media that they infect: Non-resident/file infector — the virus is contained within a host executable file and runs with the host process. The virus will try to infect other process images on persistent storage and perform other payload actions. It then passes control back to the host program. Memory resident — when the host file is executed, the virus creates a new process for itself in memory. The malicious process remains in memory, even if the host process is terminated. Boot — the virus code is written to the disk boot sector or the partition table of a fixed disk or USB media and executes as a memory-resident process when the OS starts, or the media is attached to the computer. Script and macro viruses — the malware uses the programming features available in local scripting engines for the OS and/or browser, such as PowerShell, Windows Management Instrumentation (WMI), JavaScript, Microsoft Office documents with Visual Basic for Applications (VBA) code enabled, or PDF documents with JavaScript enabled. In addition, the term \"multipartite\" is used for viruses that use multiple vectors, and the term \"polymorphic\" is used for viruses that can dynamically change or obfuscate their code to evade detection. What these types of viruses have in common is that they must infect a host file or media. An infected file can be distributed through any normal means—on a disk, on a network, as an attachment to an email or social media post, or as a download from a website. Unsafe attachment detected by Outlook's mail filter. The \"double\" file extension is an unsophisticated attempt to fool any user not already alerted by the use of both English and Dutch in the message text. Screenshot used with permission from Microsoft Description A computer worm is memory-resident malware that can run without user intervention and replicate over network resources. A virus is executed only when the user performs an action such as downloading and running an infected executable process, attaching an infected USB stick, or opening an infected document with macros or scripting enabled. By contrast, a worm can execute by exploiting a vulnerability in a process when the user browses a website, runs a vulnerable server application, or is connected to an infected file share. For example, the Code Red worm was able to infect early versions of Microsoft's IIS web server software via a buffer overflow vulnerability. It then scanned randomly generated IP ranges to try and infect other vulnerable IIS servers. The primary effect of the first type of computer worm is to rapidly consume network bandwidth as the worm replicates. A worm may also be able to crash an operating system or server application, performing a denial of service attack. Also, like viruses, worms can carry a payload that can be written to perform any type of malicious action. The Conficker worm illustrated the potential for remote code execution and memory-resident malware to effect highly potent attacks. As malware has continued to be developed for criminal intent and security software became better able to detect and block static threats, malware code and techniques have become more sophisticated. The term \"fileless\" has gained prominence to refer to these modern types of malware. Fileless is not a definitive classification, but it describes a collection of common behaviors and techniques: Fileless malware does not write its code to disk. The malware uses memory-resident techniques to run in its own process, within a host process or dynamic link library (DLL), or a scripting host. This does not mean that there is no disk activity at all, however. The malware may change registry values to achieve persistence (executing if the host computer is restarted). The initial execution of the malware may also depend on the user running a downloaded script, file attachment, or Trojan software package. Fileless malware uses lightweight shellcode to achieve a backdoor mechanism on the host. The shellcode is easy to recompile in an obfuscated form to evade detection by scanners. It is then able to download additional packages or payloads to achieve the threat actor's objectives. These packages can also be obfuscated, streamed, and compiled on the fly to evade automated detection. Fileless malware may use \"live off the land\" techniques rather than compiled executables to evade detection. This means that the malware code uses legitimate system scripting tools, notably PowerShell and Windows Management Instrumentation (WMI), to execute payload actions. If they can be executed with sufficient permissions, these environments provide all the tools the attacker needs to perform scanning, reconfigure settings, and exfiltrate data. The terms \" advanced persistent threat (APT) \" and \"advanced volatile threat (AVT)\" can be used to describe this general class of modern fileless/live-off-the-land malware. Another useful classification is a low-observable characteristic (LOC) attack. The exact classification is less important than the realization that adversaries can use any variety of coding tricks to effect intrusions and that their tactics, techniques, and procedures to evade detection are continually evolving. Spyware and Keyloggers The first viruses and worms focused on the destructive potential of being able to replicate. As the profitable uses of this software became apparent, however, they started to be coded with payloads designed to facilitate intrusion, fraud, and data theft. Bloatware and malware can be used for different levels of monitoring: Tracking cookies — a cookie is a plaintext file, not malware, but if permitted by browser settings, third-party cookies can be used to record web activity, track the user's IP address, and harvest various other metadata, such as search queries and information about the browser software and configuration. Tracking cookies are created by adverts and analytics widgets embedded into many websites. Supercookies and beacons — as browser software gives the user some control over what cookies to accept, web marketing companies have come up with alternative ways to implement tracking that are difficult to disable. A supercookie is a means of storing tracking data in a non-regular way, such as saving it to a cache without declaring the data to be a cookie or encoding data into header requests. A beacon is a single-pixel image embedded into a website. While invisible to the user, the browser must request to download the pixel to load the site, giving the beacon host the opportunity to collect metadata, perform browser fingerprinting, and potentially run tracking scripts. Adware — this is a class of PUP/bloatware that performs browser reconfigurations, such as allowing tracking cookies, changing default search providers, opening sponsor's pages at startup, adding bookmarks, and so on. Adware may be installed as a program or browser extension/plug-in. Spyware — this is malware that can perform adware-like tracking but also monitor local application activity, take screenshots, and activate recording devices, such as a microphone or webcam. Another spyware technique is to perform DNS redirection to pharming sites. Keylogger — this is spyware that actively attempts to steal confidential information by recording keystrokes. The attacker will usually hope to discover passwords or credit card data. Using the Metasploit Meterpreter remote access tool to dump keystrokes from the victim machine, revealing the password used to access a web app. Description Keyloggers are not only implemented as software. A malicious script can transmit key presses to a third-party website. There are also hardware devices to capture key presses to a modified USB adapter inserted between the keyboard and the port. Such devices can store data locally or come with Wi-Fi connectivity to send data to a covert access point. Other attacks include wireless sniffers to record key press data, overlay ATM pin pads, and so on. Backdoors and Remote Access Trojans Any type of access method to a host that circumvents the usual authentication method and gives the remote user administrative control can be referred to as a backdoor. A remote access Trojan (RAT) is backdoor malware that mimics the functionality of legitimate remote control programs but is designed specifically to operate covertly. Once the RAT is installed, it allows the threat actor to access the host, upload files, and install software or use \"live off the land\" techniques to effect further compromises. In this context, RAT can also stand for remote administration tool. A host that is under malicious control is sometimes described as a zombie. A compromised host can be installed with one or more bots. A bot is an automated script or tool that performs some malicious activity. A group of bots that are all under the control of the same malware instance can be manipulated as a botnet by the herder program. A botnet can be used for many types of malicious purposes, including triggering distributed denial of service (DDoS) attacks, launching spam campaigns, or performing cryptomining. SubSeven RAT Screenshot used with permission from Wikimedia Commons by CCAS4.0 International Description Whether a backdoor is used as a standalone intrusion mechanism or to manage bots, the threat actor must establish a connection from the compromised host to a command and control (C2 or C&C) host or network. This network connection is usually the best way to identify the presence of a RAT, backdoor, or bot. There are many means of implementing a C&C network as a covert channel to evade detection and filtering. Historically, the Internet Relay Chat (IRC) protocol was popular. Modern methods are more likely to use command sequences embedded in HTTPS or DNS traffic. Backdoors can be created in other ways than by infection by malware. Programmers may create backdoors in software applications for testing and development that are subsequently not removed when the application is deployed. Backdoors are also created by misconfiguration of software or hardware that allows access to unauthorized users. Rootkits In Windows, Trojan malware that depends on manual execution by the logged-on user inherits the privileges of that user account. If the account has only standard permissions, the malware can only add, change, or delete files in the user’s profile and run only apps and commands that the user is permitted to. If the malware attempts to change system-wide files or settings, it requires local administrator-level privileges. To obtain those through manual installation or execution, the user must be confident enough in the Trojan package to confirm the User Account Control (UAC) prompt or enter the credentials for an administrative user. If the malware gains local administrator-level privileges, there are still protections in Windows to mitigate abuse of these permissions. Critical processes run with a higher level of privilege called SYSTEM. Consequently, Trojans installed or executed with local administrator privileges cannot conceal their presence entirely and will show up as a running process or service. Often, the process image name is configured to resemble a genuine executable or library to avoid detection. For example, a Trojan may use the filename \"rund1132.exe\" to masquerade as \"rundll32.exe.\" To ensure persistence (running when the computer is restarted), the Trojan may have to use a registry entry or create itself as a service, which can usually be detected easily. If the malware can be delivered as the payload for an exploit of a severe vulnerability, it may be able to execute without requiring any authorization using SYSTEM privileges. Alternatively, the malware may be able to use an exploit to escalate privileges to SYSTEM level after installation. Malware running with this level of privilege is referred to as a  rootkit. The term derives from UNIX/Linux, where any process running as the root superuser account has unrestricted access to everything from the root of the file system down. In theory, there is nothing about the system that a rootkit could not change. In practice, Windows uses other mechanisms to prevent misuse of kernel processes, such as code signing. Consequently, what a rootkit can do depends largely on adversary capability and level of effort. When dealing with a rootkit, you should be aware that there is the possibility that it can compromise system files and programming interfaces, so that local shell processes, such as Explorer, taskmgr, or tasklist on Windows or ps or top on Linux, plus port scanning tools, such as netstat, no longer reveal its presence (at least, if run from the infected machine). A rootkit may also contain tools for cleaning system logs, further concealing its presence. Software processes can run in one of several \"rings.\" Ring 0 is the most privileged (it provides direct access to hardware) and should be reserved for kernel processes only. Ring 3 is where user-mode processes run; drivers and I/O processes may run in Ring 1 or Ring 2. This architecture can also be complicated by the use of virtualization. There are also examples of rootkits that can reside in firmware (either the computer firmware or the firmware of any sort of adapter card, hard drive, removable drive, or peripheral device). These can survive any attempt to remove the rootkit by formatting the drive and reinstalling the OS. For example, the US intelligence agencies have developed DarkMatter and Quark Matter UEFI rootkits targeting the firmware on Apple Macbook laptops. Ransomware, Crypto-Malware, and Logic Bombs Ransomware is a type of malware that tries to extort money from the victim by making the victim’s computer and/or data files unavailable and demanding payment. One class of ransomware will display threatening messages, such as requiring Windows to be reactivated or suggesting that the computer has been locked by the police because it was used to view child pornography or for terrorism. This may block access to the file system by installing a different shell program. Ransomware uses payment methods, such as wire transfer, cryptocurrency, or premium rate phone lines, to allow the attacker to extort money without revealing their identity or being traced by local law enforcement. WannaCry ransomware 감염사진.png via Wikimedia Commons Description Scareware refers to malware that displays alarming messages, often disguised to look like genuine OS alert boxes. Scareware attempts to alarm the user by suggesting that the computer is infected or has been hijacked. Crypto-Ransomware The crypto class of ransomware attempts to encrypt data files on any fixed, removable, and network drives. If the attack is successful, the user will be unable to access the files without obtaining the private encryption key, which is held by the attacker. If successful, this sort of attack is extremely difficult to mitigate unless the user has backups of the encrypted files. One example of crypto-ransomware is CryptoLocker, a Trojan that searches for files to encrypt and then prompts the victim to pay a sum of money before a certain countdown time, after which the malware destroys the key that allows the decryption. Cryptojacking Malware Another type of crypto-malware hijacks the resources of the host to perform cryptocurrency mining. This is referred to as crypto-mining, and malware that performs crypto-mining maliciously is classed as cryptojacking. The total number of coins within a cryptocurrency is limited by the difficulty of performing the calculations necessary to mint a new digital coin. Consequently, new coins can be very valuable, but it takes enormous computing resources to discover them. Cryptojacking is often performed across botnets. Logic Bombs Some types of malware do not trigger automatically. Having infected a system, they wait for a preconfigured time or date (time bomb) or a system or user event (logic bomb). Logic bombs also need not be malware code. A typical example is a disgruntled systems administrator who leaves a scripted trap that runs in the event their account is deleted or disabled. Antivirus software is unlikely to detect this kind of malicious script or program. This type of trap is also referred to as a mine.",
  "chunks": [
    {
      "chunk_id": "2.3.2_chunk_1",
      "content": "Security Pro 8.0",
      "summary": "Malware represents malicious software designed to damage, disrupt, or gain unauthorized access to computer systems, encompassing threats like viruses, worms, trojans, ransomware, and spyware. Understanding malware characteristics, attack vectors, and propagation methods is essential for implementing effective detection, prevention, and incident response strategies. Security professionals must recognize malware indicators, deployment techniques, and payload behaviors to establish comprehensive defense mechanisms and maintain system integrity.",
      "metadata": {
        "chapter_num": "2",
        "section_num": "2.3.2",
        "title": "Malware Facts",
        "content_type": "text",
        "filename": "2.3.2_Malware_Facts_[text].txt",
        "file_path": "/Users/basantabaral/CompTia/data_raw/02_Threats_Vulnerabilities_and_Mitigations/2.3.2_Malware_Facts_[text].txt",
        "word_count": 2990,
        "has_content": true
      },
      "section_header": "Introduction",
      "timestamp_range": null
    },
    {
      "chunk_id": "2.3.2_chunk_2",
      "content": "By classifying the various types of malware and identifying the signs of infection, security teams are better prepared to remediate compromised systems or prevent malware from executing in the first place.",
      "summary": "Security teams can effectively defend against malware threats by systematically classifying malware types and recognizing infection indicators. This knowledge enables proactive prevention of malware execution and rapid remediation of compromised systems when infections occur.",
      "metadata": {
        "chapter_num": "2",
        "section_num": "2.3.2",
        "title": "Malware Facts",
        "content_type": "text",
        "filename": "2.3.2_Malware_Facts_[text].txt",
        "file_path": "/Users/basantabaral/CompTia/data_raw/02_Threats_Vulnerabilities_and_Mitigations/2.3.2_Malware_Facts_[text].txt",
        "word_count": 2990,
        "has_content": true
      },
      "section_header": "2.3.2 Malware Facts",
      "timestamp_range": null
    },
    {
      "chunk_id": "2.3.2_chunk_3",
      "content": "Malware classification Computer viruses Spyware and Keyloggers Backdoors and Remote Access Trojans Rootkits Ransomware, Crypto-Malware, and Logic Bombs Crypto-Ransomware Logic Bombs Malware Classification Many of the intrusion attempts perpetrated against computer networks depend on the use of malicious software or malware. Malware is simply defined as software that does something bad from the perspective of the system owner. A complicating factor with malware classification is the degree to which its installation is expected or tolerated by the user. Some malware classifications, such as Trojan, virus, and worm, focus on the vector used by the malware. The vector is the method by which the malware executes on a computer and potentially spreads to other network hosts. The following categories describe some types of malware according to vector: Viruses and worms represent some of the first types of malware and spread without any authorization from the user by being concealed within the executable code of another process. These processes are described as being infected with malware. Trojan refers to malware concealed within an installer package for software that appears to be legitimate. This type of malware does not seek any type of consent for installation and is actively designed to operate secretly. Potentially unwanted programs (PUPs)/Potentially unwanted applications (PUAs) are software installed alongside a package selected by the user or perhaps bundled with a new computer system. Unlike a Trojan, the presence of a PUP is not automatically regarded as malicious. It may have been installed without active consent or with consent from a purposefully confusing license agreement. This type of software is sometimes described as grayware rather than malware. It can also be referred to as bloatware. Malware classification by vector Description Other classifications are based on the payload delivered by the malware. The payload is an action performed by the malware other than simply replicating or persisting on a host. Examples of payload classifications include spyware, rootkit, remote access Trojan (RAT), and ransomware. Computer Viruses A computer virus is a type of malware designed to replicate and spread from computer to computer, usually by \"infecting\" executable applications or program code. There are several different types of viruses, and they are generally classified by the different types of file or media that they infect: Non-resident/file infector — the virus is contained within a host executable file and runs with the host process. The virus will try to infect other process images on persistent storage and perform other payload actions. It then passes control back to the host program. Memory resident — when the host file is executed, the virus creates a new process for itself in memory. The malicious process remains in memory, even if the host process is terminated. Boot — the virus code is written to the disk boot sector or the partition table of a fixed disk or USB media and executes as a memory-resident process when the OS starts, or the media is attached to the computer. Script and macro viruses — the malware uses the programming features available in local scripting engines for the OS and/or browser, such as PowerShell, Windows Management Instrumentation (WMI), JavaScript, Microsoft Office documents with Visual Basic for Applications (VBA) code enabled, or PDF documents with JavaScript enabled. In addition, the term \"multipartite\" is used for viruses that use multiple vectors, and the term \"polymorphic\" is used for viruses that can dynamically change or obfuscate their code to evade detection. What these types of viruses have in common is that they must infect a host file or media. An infected file can be distributed through any normal means—on a disk, on a network, as an attachment to an email or social media post, or as a download from a website. Unsafe attachment detected by Outlook's mail filter. The \"double\" file extension is an unsophisticated attempt to fool any user not already alerted by the use of both English and Dutch in the message text. Screenshot used with permission from Microsoft Description A computer worm is memory-resident malware that can run without user intervention and replicate over network resources. A virus is executed only when the user performs an action such as downloading and running an infected executable process, attaching an infected USB stick, or opening an infected document with macros or scripting enabled. By contrast, a worm can execute by exploiting a vulnerability in a process when the user browses a website, runs a vulnerable server application, or is connected to an infected file share. For example, the Code Red worm was able to infect early versions of Microsoft's IIS web server software via a buffer overflow vulnerability. It then scanned randomly generated IP ranges to try and infect other vulnerable IIS servers. The primary effect of the first type of computer worm is to rapidly consume network bandwidth as the worm replicates. A worm may also be able to crash an operating system or server application, performing a denial of service attack. Also, like viruses, worms can carry a payload that can be written to perform any type of malicious action. The Conficker worm illustrated the potential for remote code execution and memory-resident malware to effect highly potent attacks. As malware has continued to be developed for criminal intent and security software became better able to detect and block static threats, malware code and techniques have become more sophisticated. The term \"fileless\" has gained prominence to refer to these modern types of malware. Fileless is not a definitive classification, but it describes a collection of common behaviors and techniques: Fileless malware does not write its code to disk. The malware uses memory-resident techniques to run in its own process, within a host process or dynamic link library (DLL), or a scripting host. This does not mean that there is no disk activity at all, however. The malware may change registry values to achieve persistence (executing if the host computer is restarted). The initial execution of the malware may also depend on the user running a downloaded script, file attachment, or Trojan software package. Fileless malware uses lightweight shellcode to achieve a backdoor mechanism on the host. The shellcode is easy to recompile in an obfuscated form to evade detection by scanners. It is then able to download additional packages or payloads to achieve the threat actor's objectives. These packages can also be obfuscated, streamed, and compiled on the fly to evade automated detection. Fileless malware may use \"live off the land\" techniques rather than compiled executables to evade detection. This means that the malware code uses legitimate system scripting tools, notably PowerShell and Windows Management Instrumentation (WMI), to execute payload actions. If they can be executed with sufficient permissions, these environments provide all the tools the attacker needs to perform scanning, reconfigure settings, and exfiltrate data. The terms \" advanced persistent threat (APT) \" and \"advanced volatile threat (AVT)\" can be used to describe this general class of modern fileless/live-off-the-land malware. Another useful classification is a low-observable characteristic (LOC) attack. The exact classification is less important than the realization that adversaries can use any variety of coding tricks to effect intrusions and that their tactics, techniques, and procedures to evade detection are continually evolving. Spyware and Keyloggers The first viruses and worms focused on the destructive potential of being able to replicate. As the profitable uses of this software became apparent, however, they started to be coded with payloads designed to facilitate intrusion, fraud, and data theft. Bloatware and malware can be used for different levels of monitoring: Tracking cookies — a cookie is a plaintext file, not malware, but if permitted by browser settings, third-party cookies can be used to record web activity, track the user's IP address, and harvest various other metadata, such as search queries and information about the browser software and configuration. Tracking cookies are created by adverts and analytics widgets embedded into many websites. Supercookies and beacons — as browser software gives the user some control over what cookies to accept, web marketing companies have come up with alternative ways to implement tracking that are difficult to disable. A supercookie is a means of storing tracking data in a non-regular way, such as saving it to a cache without declaring the data to be a cookie or encoding data into header requests. A beacon is a single-pixel image embedded into a website. While invisible to the user, the browser must request to download the pixel to load the site, giving the beacon host the opportunity to collect metadata, perform browser fingerprinting, and potentially run tracking scripts. Adware — this is a class of PUP/bloatware that performs browser reconfigurations, such as allowing tracking cookies, changing default search providers, opening sponsor's pages at startup, adding bookmarks, and so on. Adware may be installed as a program or browser extension/plug-in. Spyware — this is malware that can perform adware-like tracking but also monitor local application activity, take screenshots, and activate recording devices, such as a microphone or webcam. Another spyware technique is to perform DNS redirection to pharming sites. Keylogger — this is spyware that actively attempts to steal confidential information by recording keystrokes. The attacker will usually hope to discover passwords or credit card data. Using the Metasploit Meterpreter remote access tool to dump keystrokes from the victim machine, revealing the password used to access a web app. Description Keyloggers are not only implemented as software. A malicious script can transmit key presses to a third-party website. There are also hardware devices to capture key presses to a modified USB adapter inserted between the keyboard and the port. Such devices can store data locally or come with Wi-Fi connectivity to send data to a covert access point. Other attacks include wireless sniffers to record key press data, overlay ATM pin pads, and so on. Backdoors and Remote Access Trojans Any type of access method to a host that circumvents the usual authentication method and gives the remote user administrative control can be referred to as a backdoor. A remote access Trojan (RAT) is backdoor malware that mimics the functionality of legitimate remote control programs but is designed specifically to operate covertly. Once the RAT is installed, it allows the threat actor to access the host, upload files, and install software or use \"live off the land\" techniques to effect further compromises. In this context, RAT can also stand for remote administration tool. A host that is under malicious control is sometimes described as a zombie. A compromised host can be installed with one or more bots. A bot is an automated script or tool that performs some malicious activity. A group of bots that are all under the control of the same malware instance can be manipulated as a botnet by the herder program. A botnet can be used for many types of malicious purposes, including triggering distributed denial of service (DDoS) attacks, launching spam campaigns, or performing cryptomining. SubSeven RAT Screenshot used with permission from Wikimedia Commons by CCAS4.0 International Description Whether a backdoor is used as a standalone intrusion mechanism or to manage bots, the threat actor must establish a connection from the compromised host to a command and control (C2 or C&C) host or network. This network connection is usually the best way to identify the presence of a RAT, backdoor, or bot. There are many means of implementing a C&C network as a covert channel to evade detection and filtering. Historically, the Internet Relay Chat (IRC) protocol was popular. Modern methods are more likely to use command sequences embedded in HTTPS or DNS traffic. Backdoors can be created in other ways than by infection by malware. Programmers may create backdoors in software applications for testing and development that are subsequently not removed when the application is deployed. Backdoors are also created by misconfiguration of software or hardware that allows access to unauthorized users. Rootkits In Windows, Trojan malware that depends on manual execution by the logged-on user inherits the privileges of that user account. If the account has only standard permissions, the malware can only add, change, or delete files in the user’s profile and run only apps and commands that the user is permitted to. If the malware attempts to change system-wide files or settings, it requires local administrator-level privileges. To obtain those through manual installation or execution, the user must be confident enough in the Trojan package to confirm the User Account Control (UAC) prompt or enter the credentials for an administrative user. If the malware gains local administrator-level privileges, there are still protections in Windows to mitigate abuse of these permissions. Critical processes run with a higher level of privilege called SYSTEM. Consequently, Trojans installed or executed with local administrator privileges cannot conceal their presence entirely and will show up as a running process or service. Often, the process image name is configured to resemble a genuine executable or library to avoid detection. For example, a Trojan may use the filename \"rund1132.exe\" to masquerade as \"rundll32.exe.\" To ensure persistence (running when the computer is restarted), the Trojan may have to use a registry entry or create itself as a service, which can usually be detected easily. If the malware can be delivered as the payload for an exploit of a severe vulnerability, it may be able to execute without requiring any authorization using SYSTEM privileges. Alternatively, the malware may be able to use an exploit to escalate privileges to SYSTEM level after installation. Malware running with this level of privilege is referred to as a  rootkit. The term derives from UNIX/Linux, where any process running as the root superuser account has unrestricted access to everything from the root of the file system down. In theory, there is nothing about the system that a rootkit could not change. In practice, Windows uses other mechanisms to prevent misuse of kernel processes, such as code signing. Consequently, what a rootkit can do depends largely on adversary capability and level of effort. When dealing with a rootkit, you should be aware that there is the possibility that it can compromise system files and programming interfaces, so that local shell processes, such as Explorer, taskmgr, or tasklist on Windows or ps or top on Linux, plus port scanning tools, such as netstat, no longer reveal its presence (at least, if run from the infected machine). A rootkit may also contain tools for cleaning system logs, further concealing its presence. Software processes can run in one of several \"rings.\" Ring 0 is the most privileged (it provides direct access to hardware) and should be reserved for kernel processes only. Ring 3 is where user-mode processes run; drivers and I/O processes may run in Ring 1 or Ring 2. This architecture can also be complicated by the use of virtualization. There are also examples of rootkits that can reside in firmware (either the computer firmware or the firmware of any sort of adapter card, hard drive, removable drive, or peripheral device). These can survive any attempt to remove the rootkit by formatting the drive and reinstalling the OS. For example, the US intelligence agencies have developed DarkMatter and Quark Matter UEFI rootkits targeting the firmware on Apple Macbook laptops. Ransomware, Crypto-Malware, and Logic Bombs Ransomware is a type of malware that tries to extort money from the victim by making the victim’s computer and/or data files unavailable and demanding payment. One class of ransomware will display threatening messages, such as requiring Windows to be reactivated or suggesting that the computer has been locked by the police because it was used to view child pornography or for terrorism. This may block access to the file system by installing a different shell program. Ransomware uses payment methods, such as wire transfer, cryptocurrency, or premium rate phone lines, to allow the attacker to extort money without revealing their identity or being traced by local law enforcement. WannaCry ransomware 감염사진.png via Wikimedia Commons Description Scareware refers to malware that displays alarming messages, often disguised to look like genuine OS alert boxes. Scareware attempts to alarm the user by suggesting that the computer is infected or has been hijacked. Crypto-Ransomware The crypto class of ransomware attempts to encrypt data files on any fixed, removable, and network drives. If the attack is successful, the user will be unable to access the files without obtaining the private encryption key, which is held by the attacker. If successful, this sort of attack is extremely difficult to mitigate unless the user has backups of the encrypted files. One example of crypto-ransomware is CryptoLocker, a Trojan that searches for files to encrypt and then prompts the victim to pay a sum of money before a certain countdown time, after which the malware destroys the key that allows the decryption. Cryptojacking Malware Another type of crypto-malware hijacks the resources of the host to perform cryptocurrency mining. This is referred to as crypto-mining, and malware that performs crypto-mining maliciously is classed as cryptojacking. The total number of coins within a cryptocurrency is limited by the difficulty of performing the calculations necessary to mint a new digital coin. Consequently, new coins can be very valuable, but it takes enormous computing resources to discover them. Cryptojacking is often performed across botnets. Logic Bombs Some types of malware do not trigger automatically. Having infected a system, they wait for a preconfigured time or date (time bomb) or a system or user event (logic bomb). Logic bombs also need not be malware code. A typical example is a disgruntled systems administrator who leaves a scripted trap that runs in the event their account is deleted or disabled. Antivirus software is unlikely to detect this kind of malicious script or program. This type of trap is also referred to as a mine.",
      "summary": "Malware is classified by vector (how it spreads) including viruses that infect files, worms that replicate across networks without user action, and Trojans concealed in legitimate software, or by payload (malicious actions) such as spyware for data theft, rootkits for system-level access, and ransomware that encrypts files for extortion. Modern fileless malware operates in memory using legitimate system tools like PowerShell to evade detection, while backdoors and Remote Access Trojans (RATs) create covert administrative access for threat actors. Critical malware types include keyloggers that capture credentials, crypto-ransomware that encrypts data for payment demands, cryptoj",
      "metadata": {
        "chapter_num": "2",
        "section_num": "2.3.2",
        "title": "Malware Facts",
        "content_type": "text",
        "filename": "2.3.2_Malware_Facts_[text].txt",
        "file_path": "/Users/basantabaral/CompTia/data_raw/02_Threats_Vulnerabilities_and_Mitigations/2.3.2_Malware_Facts_[text].txt",
        "word_count": 2990,
        "has_content": true
      },
      "section_header": "This lesson covers the following topics:",
      "timestamp_range": null
    }
  ],
  "num_chunks": 3,
  "document_summary": "Malware Facts (text): As malware has continued to be developed for criminal intent and security software became better able to detect and block static threats, malware code and techniques have become more sophisticated. This means that the malware code uses legitimate system scripting tools, notably PowerShell and Windows Management Instrumentation (WMI), to execute payload actions. A remote access Trojan (RAT) is backdoor malware that mimics the functionality of legitimate remote control programs but is designed specifically to operate covertly."
}