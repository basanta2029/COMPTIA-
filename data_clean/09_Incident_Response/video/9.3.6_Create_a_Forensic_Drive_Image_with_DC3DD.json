{
  "metadata": {
    "chapter_num": "9",
    "section_num": "9.3.6",
    "title": "Create a Forensic Drive Image with DC3DD",
    "content_type": "video",
    "filename": "9.3.6_Create_a_Forensic_Drive_Image_with_DC3DD_[video].txt",
    "file_path": "data_raw/09_Incident_Response/9.3.6_Create_a_Forensic_Drive_Image_with_DC3DD_[video].txt",
    "word_count": 1230,
    "has_content": true
  },
  "full_content": "Transcript close interactive script In this demonstration, we're going to create a forensic drive image. It's very important that you understand you can't use standard file copying utilities to create a forensic drive image. You can't use, say, Windows Explorer or File Explorer. Those utilities copy files that have an entry, a record, in the allocation table of the partition where it resides, so it only copies data that's associated with a file or folder in the file system. When you're conducting a forensic investigation, you need all the data on that hard drive, especially the data that's not associated with a particular file or file in the file system, but is still on the hard disk drive. Basically, we're looking for stuff that's been deleted—\"stuff that someone may be trying to hide. We need to use a drive imaging utility to do this. There are a variety of utilities that you can use. Some cost a lot of money; some cost practically nothing. We're going to use the latter option in this demonstration today. In this demo, we'll use dc3dd to obtain a raw image of a hard drive. dc3dd was developed at the Department of Defense's Cyber Crime Center, and it's basically an enhanced version of the open source dd command with added features for computer forensics. One of the main characteristics of dc3dd is that it offers the possibility of hashing on the fly with multiple algorithms (MD5, SHA-1, SHA-256, or SHA-512). You'll want to use a write blocker between your machine and the disk you're obtaining an image from. Before we start looking at how to create the drive image, you need to understand how Linux storage devices are addressed by the Linux system. It's kind of difficult to understand when you're new to Linux, but all storage devices on Linux systems are addressed using a device file located in the /dev directory. If a process needs to write information to a hard disk drive, it writes it to a specific file in the /dev directory, which then redirects the IO data to the appropriate hardware device, such as a hard disk drive. What we need to do is figure out what the device name is for the drive that we want to image. There are a variety of command line utilities you can use to do this. One way to find the forensic image is to use fdisk and the sudo fdisk 1 parameter. I think we have enough information to get started. We could go to a terminal and start dc3dd, but I'm going to go up to the Application Launcher and start it from there. I'll come down to Forensics and then select Forensic Imaging Tools. I see dc3dd, so let's click on it and launch it. The only reason I wanted to start it this way is so that you can see we have a nice manual here to learn more about how to use it. I'm not actually going to go over any of this in this information right here, but I will when we type some of the commands in a minute. I'm going to type —˜clear' and get a clean screen to work with. I like to see what disks I have to work with by typing —˜sudo fdisk' with the —˜-l' parameter. Press Enter. Now put in the sudo password. The first disk we'll look at is this one, /dev/sdb. It's a 20-gig disk, and I know that this is the one with my Kali Linux installed on. But this isn't the disk I want to image. If I go up a little, I see a second disk, /dev/sda. This one is 2 gigs. This is the one I want to image. Make sure you know which disk you're working with when you do this. I'll come down here and type —˜clear' to clear the screen. Now we need to type in the command to create the image, tell it where to find the disk, where to store the copy, which hash to use, and name the log file. I'll go ahead and type that in and then come back in a second and explain the command. Okay, I have the command typed in. The first part is —˜sudo dc3dd'. This just tells Linux to run our command as root, or basically like an admin in Windows. The next part, —˜if=/dev/sda', is my input file. That's what the letters I-F stand for, input file. After that, we need to specify where our image will go. O-F stands for output file, so we've typed in —˜of=/home/dana/temp/imaged2.img'. That's the path where I'll save my image file, and I named it —˜image2.img'. Next, we'll use —˜hash=sha256' for our hash type. We could use MD5 or one of the others types we listed in the intro of this demo, but this will work fine. The last thing we have is —˜log=/home/dana/temp/image2.log'. As you can guess, this is just a log file, which is very important to have along with the disk image. It's going to be located in the same directory as our disk image. We'll look at after we create it. This all looks really good. I'll press Enter to start the disk imaging. Down here, we can see the copy progress. Keep in mind that this is a very small disk without a lot of data, so it's going quickly. It looks like it's done. Down here, I can see when it completed. Up here is the location of the image file. I'll go up and close out of our terminal. Now let's go look in our temp file, confirm that it copied over, and look at our log file. Next, we'll go up to Application Launcher and over to File Manager. I'll go over to my temp folder and double-click on it to open it. Here are my two files, my image file and my log file. Let's open that log now. It shows us things like the time the image started, the size, where the file was located, our hash value, the output filename, and the time it completed. Our next step would be to use another forensic tool to examine the image itself. And that's it for this demo. We used the command line utility dc3dd to capture a forensic image from a disk.",
  "chunks": [
    {
      "chunk_id": "9.3.6_chunk_1",
      "content": "In this demonstration, we're going to create a forensic drive image. It's very important that you understand you can't use standard file copying utilities to create a forensic drive image. You can't use, say, Windows Explorer or File Explorer. Those utilities copy files that have an entry, a record, in the allocation table of the partition where it resides, so it only copies data that's associated with a file or folder in the file system. When you're conducting a forensic investigation, you need all the data on that hard drive, especially the data that's not associated with a particular file or file in the file system, but is still on the hard disk drive. Basically, we're looking for stuff that's been deleted—\"stuff that someone may be trying to hide. We need to use a drive imaging utility to do this. There are a variety of utilities that you can use. Some cost a lot of money; some cost practically nothing. We're going to use the latter option in this demonstration today. In this demo, we'll use dc3dd to obtain a raw image of a hard drive. dc3dd was developed at the Department of Defense's Cyber Crime Center, and it's basically an enhanced version of the open source dd command with added features for computer forensics. One of the main characteristics of dc3dd is that it offers the possibility of hashing on the fly with multiple algorithms (MD5, SHA-1, SHA-256, or SHA-512). You'll want to use a write blocker between your machine and the disk you're obtaining an image from.",
      "summary": "In this section, participants learn to create a forensic drive image using the dc3dd utility, which is essential for capturing all data on a hard drive, including deleted files that standard file copying tools cannot access. The demonstration emphasizes the importance of using specialized tools for forensic investigations, highlighting dc3dd's capabilities such as on-the-fly hashing with multiple algorithms. Additionally, the use of a write blocker is recommended to ensure the integrity of the original data during the imaging process.",
      "metadata": {
        "chapter_num": "9",
        "section_num": "9.3.6",
        "title": "Create a Forensic Drive Image with DC3DD",
        "content_type": "video",
        "filename": "9.3.6_Create_a_Forensic_Drive_Image_with_DC3DD_[video].txt",
        "file_path": "data_raw/09_Incident_Response/9.3.6_Create_a_Forensic_Drive_Image_with_DC3DD_[video].txt",
        "word_count": 1230,
        "has_content": true
      },
      "section_header": "Create Forensic Disk Image with DC3DD",
      "timestamp_range": ""
    },
    {
      "chunk_id": "9.3.6_chunk_2",
      "content": "Before we start looking at how to create the drive image, you need to understand how Linux storage devices are addressed by the Linux system. It's kind of difficult to understand when you're new to Linux, but all storage devices on Linux systems are addressed using a device file located in the /dev directory. If a process needs to write information to a hard disk drive, it writes it to a specific file in the /dev directory, which then redirects the IO data to the appropriate hardware device, such as a hard disk drive. What we need to do is figure out what the device name is for the drive that we want to image. There are a variety of command line utilities you can use to do this. One way to find the forensic image is to use fdisk and the sudo fdisk 1 parameter.",
      "summary": "In the Linux environment, all storage devices are represented by device files located in the /dev directory, which allows processes to interact with hardware like hard disk drives. To create a drive image, users must identify the correct device name using command line utilities, with tools like `fdisk` being essential for locating the desired forensic image. Understanding this addressing method is crucial for effective data management and security practices in Linux systems.",
      "metadata": {
        "chapter_num": "9",
        "section_num": "9.3.6",
        "title": "Create a Forensic Drive Image with DC3DD",
        "content_type": "video",
        "filename": "9.3.6_Create_a_Forensic_Drive_Image_with_DC3DD_[video].txt",
        "file_path": "data_raw/09_Incident_Response/9.3.6_Create_a_Forensic_Drive_Image_with_DC3DD_[video].txt",
        "word_count": 1230,
        "has_content": true
      },
      "section_header": "Linux Storage Devices",
      "timestamp_range": ""
    },
    {
      "chunk_id": "9.3.6_chunk_3",
      "content": "I think we have enough information to get started. We could go to a terminal and start dc3dd, but I'm going to go up to the Application Launcher and start it from there. I'll come down to Forensics and then select Forensic Imaging Tools. I see dc3dd, so let's click on it and launch it. The only reason I wanted to start it this way is so that you can see we have a nice manual here to learn more about how to use it. I'm not actually going to go over any of this in this information right here, but I will when we type some of the commands in a minute. I'm going to type —˜clear' and get a clean screen to work with. I like to see what disks I have to work with by typing —˜sudo fdisk' with the —˜-l' parameter. Press Enter. Now put in the sudo password. The first disk we'll look at is this one, /dev/sdb. It's a 20-gig disk, and I know that this is the one with my Kali Linux installed on. But this isn't the disk I want to image. If I go up a little, I see a second disk, /dev/sda. This one is 2 gigs. This is the one I want to image. Make sure you know which disk you're working with when you do this. I'll come down here and type —˜clear' to clear the screen.",
      "summary": "In this section, learners are introduced to using the `fdisk` command to identify and manage disks in a forensic context. The practical application involves launching the dc3dd tool for forensic imaging, utilizing `sudo fdisk -l` to list available disks, and selecting the appropriate disk for imaging. Emphasis is placed on ensuring the correct disk is identified before proceeding with imaging to avoid data loss.",
      "metadata": {
        "chapter_num": "9",
        "section_num": "9.3.6",
        "title": "Create a Forensic Drive Image with DC3DD",
        "content_type": "video",
        "filename": "9.3.6_Create_a_Forensic_Drive_Image_with_DC3DD_[video].txt",
        "file_path": "data_raw/09_Incident_Response/9.3.6_Create_a_Forensic_Drive_Image_with_DC3DD_[video].txt",
        "word_count": 1230,
        "has_content": true
      },
      "section_header": "Use fdisk to Identify Disks",
      "timestamp_range": ""
    },
    {
      "chunk_id": "9.3.6_chunk_4",
      "content": "Now we need to type in the command to create the image, tell it where to find the disk, where to store the copy, which hash to use, and name the log file. I'll go ahead and type that in and then come back in a second and explain the command. Okay, I have the command typed in. The first part is —˜sudo dc3dd'. This just tells Linux to run our command as root, or basically like an admin in Windows. The next part, —˜if=/dev/sda', is my input file. That's what the letters I-F stand for, input file. After that, we need to specify where our image will go. O-F stands for output file, so we've typed in —˜of=/home/dana/temp/imaged2.img'. That's the path where I'll save my image file, and I named it —˜image2.img'. Next, we'll use —˜hash=sha256' for our hash type. We could use MD5 or one of the others types we listed in the intro of this demo, but this will work fine. The last thing we have is —˜log=/home/dana/temp/image2.log'. As you can guess, this is just a log file, which is very important to have along with the disk image. It's going to be located in the same directory as our disk image. We'll look at after we create it. This all looks really good. I'll press Enter to start the disk imaging. Down here, we can see the copy progress. Keep in mind that this is a very small disk without a lot of data, so it's going quickly. It looks like it's done. Down here, I can see when it completed. Up here is the location of the image file. I'll go up and close out of our terminal. Now let's go look in our temp file, confirm that it copied over, and look at our log file.",
      "summary": "The section on using the dc3dd command focuses on creating a forensic drive image in a Linux environment, emphasizing the importance of specifying the input file, output file, hash type, and log file for documentation. The command utilizes root privileges to ensure proper access and creates a disk image while logging the process for future reference. This practical application is essential for digital forensics, ensuring data integrity and traceability during investigations.",
      "metadata": {
        "chapter_num": "9",
        "section_num": "9.3.6",
        "title": "Create a Forensic Drive Image with DC3DD",
        "content_type": "video",
        "filename": "9.3.6_Create_a_Forensic_Drive_Image_with_DC3DD_[video].txt",
        "file_path": "data_raw/09_Incident_Response/9.3.6_Create_a_Forensic_Drive_Image_with_DC3DD_[video].txt",
        "word_count": 1230,
        "has_content": true
      },
      "section_header": "Using the dc3dd Command to Create a Forensic Drive Image",
      "timestamp_range": ""
    },
    {
      "chunk_id": "9.3.6_chunk_5",
      "content": "Next, we'll go up to Application Launcher and over to File Manager. I'll go over to my temp folder and double-click on it to open it. Here are my two files, my image file and my log file. Let's open that log now. It shows us things like the time the image started, the size, where the file was located, our hash value, the output filename, and the time it completed. Our next step would be to use another forensic tool to examine the image itself.",
      "summary": "In this section, learners explore the process of verifying results in digital forensics by accessing and analyzing log files within a file manager. Key concepts include examining file attributes such as timestamps, sizes, locations, and hash values, which are crucial for validating the integrity of digital evidence. The practical application involves using forensic tools to further investigate the contents of an image file, enhancing skills in evidence verification and analysis.",
      "metadata": {
        "chapter_num": "9",
        "section_num": "9.3.6",
        "title": "Create a Forensic Drive Image with DC3DD",
        "content_type": "video",
        "filename": "9.3.6_Create_a_Forensic_Drive_Image_with_DC3DD_[video].txt",
        "file_path": "data_raw/09_Incident_Response/9.3.6_Create_a_Forensic_Drive_Image_with_DC3DD_[video].txt",
        "word_count": 1230,
        "has_content": true
      },
      "section_header": "Verify Results",
      "timestamp_range": ""
    },
    {
      "chunk_id": "9.3.6_chunk_6",
      "content": "And that's it for this demo. We used the command line utility dc3dd to capture a forensic image from a disk.",
      "summary": "In this section, the course demonstrates the use of the command line utility dc3dd for capturing forensic images from disks, highlighting its importance in digital forensics. Key security concepts include data integrity and evidence preservation, which are critical for investigations. Practical applications involve utilizing dc3dd to ensure accurate and reliable data acquisition for analysis in security incidents.",
      "metadata": {
        "chapter_num": "9",
        "section_num": "9.3.6",
        "title": "Create a Forensic Drive Image with DC3DD",
        "content_type": "video",
        "filename": "9.3.6_Create_a_Forensic_Drive_Image_with_DC3DD_[video].txt",
        "file_path": "data_raw/09_Incident_Response/9.3.6_Create_a_Forensic_Drive_Image_with_DC3DD_[video].txt",
        "word_count": 1230,
        "has_content": true
      },
      "section_header": "Summary",
      "timestamp_range": ""
    }
  ],
  "num_chunks": 6
}