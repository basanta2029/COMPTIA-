Transcript




close interactive script
Click one of the buttons to take you to that part of the video.
1. Backup and Restore
00:04
In this lesson, we'll discuss backing up data.
00:06
Backing up your data is absolutely critical.
00:09
It must be done consistently, and strategically.
00:13
It's also essential to verify backups to ensure that
00:17
they actually work and you can restore your data.
00:20
You need to know three different types of backups.
00:23
The first is the full backup, the second is the incremental
00:26
backup, and the last is the differential backup.
00:30
But before we dive into these, let's quickly talk about
00:33
a key component used with backups called the archive bit.
2. Archive Bit
00:37
The archive bit is a file
00:39
attribute that is either on or off.
00:41
It's used by backup systems to determine if the
00:45
file has been archivedâ€”"that is, has been backed up.
00:48
Also, archive bit identifies if a file
00:51
has been modified since the last backup.
00:54
This is important when used with certain types of backups.
00:57
With that, let's explore the different types of backups.
3. Full Backup
01:01
Let's first discuss a full backup.
01:05
A full backup backs up everything.
01:07
It doesn't matter whether the archive
01:09
bit is set or not on any file.
01:11
However, as it backs up each file, it clears the
01:16
archive bit to indicate that the file is backing up.
01:18
In this way, you can determine if a file
01:21
has been modified at a later point in time.
01:23
If you were to modify a file that has been backed
01:26
up, the archive bit would be reset, indicating to
01:29
the backup software that this file has been
01:33
modified since the last time it was backed up.
01:36
If a file is not modified after the full backup,
01:39
the archive bit is left in a cleared state.
01:43
This is important because other types of backups,
01:45
such as incremental, take into consideration if
01:48
this archive bit has been cleared when deciding
01:51
whether it should back up a file or not.
4. Incremental Backup
01:53
An incremental backup backs up everything since the
01:57
last full backup or since the last incremental backup.
02:01
To determine whether or not a file has been
02:04
modified since the last full or incremental
02:06
backup, it looks at the archive bit.
02:09
If the archive bit is turned on, that tells the backup
02:12
software that the file has been modified since the last full
02:16
or incremental backup, and needs to be backed up again.
02:19
Once it's backed up the file, the archive bit is cleared.
02:23
Let's run through an example.
02:25
Suppose you perform a full backup
02:27
of the entire file system on Monday.
02:29
As a result, every file in the file system has been
02:33
backed up, and the archive bit on each file is cleared.
02:36
Then, on Tuesday, you perform an incremental backup.
02:41
Because the incremental backup only backs up
02:44
files with the archived bit set, it will only
02:47
backup files that have changed since Monday.
02:49
Accordingly, the incremental backup you made
02:53
on Tuesday will be relatively small because it
02:56
will only contain one day's worth of changes.
02:59
After backing up the changed files, the
03:02
incremental backup will clear the archive
03:04
bit again on the files that were backed up.
03:07
If you perform another incremental backup on
03:11
Wednesday, it will once again look for any files with
03:14
enabled archive bits, indicating that they've been
03:17
modified since either the last full backup on Monday
03:20
or since the last incremental backup on Tuesday.
03:22
Therefore, Wednesday's incremental backup
03:25
also only contains one day's worth of changes.
03:29
Likewise, if you run another incremental backup
03:32
on Thursday, then only the changes that have
03:35
been made since Wednesday will be backed up.
03:38
The same is true on Friday.
03:40
The advantage of this strategy is that the daily
03:42
incremental backups finish relatively quickly because
03:46
we're only backing up one day's worth of changes.
03:49
The full backup still takes some time to
03:52
complete because all files are being backed up.
03:54
For this reason, the full backup is usually executed
03:57
over the weekend when the system is not heavily used.
04:01
The incremental backups can occur each weekday.
04:04
Because they don't take much time to complete, they
04:07
typically don't interfere with day-to-day work.
04:10
Incremental backups have one significant drawback.
04:13
The incremental backup strategy is the
04:16
slowest type of backup for restoring data.
04:18
For example, suppose we ran a full backup
04:21
on Monday and then ran an incremental on
04:23
Tuesday, Wednesday, Thursday, and Friday.
04:26
Then the server crashes on Saturday, and we
04:29
need to restore all the data back to the
04:31
server after we've recovered from the crash.
04:34
The first thing that you must do is
04:36
restore the first full backup from Monday.
04:39
Then you must restore every incremental
04:42
backup in the order they were created.
04:44
First, you must restore Monday's incremental
04:46
backup, followed by Tuesday's backup, then
04:49
Wednesday, Thursday, and Friday's backups.
04:52
Each backup must be restored in the proper sequence
04:55
to return the system to where it was before the crash.
04:58
This can take hours or even days to complete,
05:02
depending how much data is involved.
5. Differential Backup
05:04
Another option is to use differential
05:06
backups instead of incremental.
05:08
A differential backup looks for files that
05:11
have been modified since the last full backup.
05:13
It does this by evaluating if the
05:16
archive bit has been set on the files.
05:19
If the archive bit is clear, it will not back
05:23
up the file because it assumes that it has not
05:25
been changed since the last full backup.
05:28
If the archive bit is set, the differential backup assumes
05:31
the file has been modified and needs to be backed up.
05:35
The key difference is that a differential backup does
05:38
not clear the archive bit after backing up a file.
05:41
Therefore, it backs up everything modified since the last
05:44
full backup, but not since the last differential backup.
05:49
This has advantages and disadvantages.
05:51
Suppose you perform a full backup on Monday
05:54
just as with the incremental backup strategy.
05:57
This clears all archive bits on all files.
06:01
Then, we perform a differential
06:03
backup on Tuesday and Wednesday.
06:05
Because the differential backup on Tuesday does not
06:08
clear any archive bits, Wednesday's differential backs
06:11
up all the files that have been modified since Monday.
06:14
Thursday's differential backup includes all the
06:18
changes made on Monday, Tuesday, and Wednesday.
06:21
Friday's differential backup includes all the changes
06:25
made on Monday, Tuesday, Wednesday, and Thursday.
06:28
As you progress through the backup schedule, each
06:31
differential backup takes progressively longer
06:34
because it's backing up more data each time.
06:36
The first differential backup completes in the
06:39
same amount of time as an incremental would because
06:41
we're only backing up one day's worth of data.
06:44
However, each subsequent differential takes longer.
06:47
The advantage of differential backups
06:50
is the speed of restoring data.
06:53
With differentials, all we do is restore the full
06:56
backup followed by the last differential backup.
06:59
For example, if a server were to crash on Saturday,
07:02
we would restore the full backup from Monday and
07:05
then the last differential backup from Friday.
07:08
That's all we do because the last differential
07:10
backup contains a backup of every single file
07:13
that has been changed since the last full backup.
6. Mixing Backup Types
07:16
You should never mix differential and
07:19
incremental backups together with a full backup.
07:22
If you mix full backups with incremental and differential
07:25
backups, you're going to have problems because of the way
07:29
these different types of backups handle the archive bit.
07:32
As a result, files that should
07:34
have been backed up will be missed.
07:36
Another alternative for backing up
07:38
data is to create a system image.
07:40
Imaging programs create a bit-level mirror
07:44
of a particular hard disk or partition.
07:46
Newer versions of Windows, and all versions
07:49
of Linux, include this functionality.
07:52
Typically, a system image is created on a defined schedule.
07:55
Because a system image backs up the entire hard
07:59
disk or partition, they are rather slow to create.
08:02
However, they are very fast to restore.
7. System Images
08:05
All you do is restore the image to the same hardware, or
08:08
even to a new piece of hardware if you have a major hardware
08:11
malfunction, and the system is back and available again in
08:15
exactly the state it was when the image was created.
08:18
This can be very useful in the event of a malware infection.
08:22
Most of the time it's easier to re-image a
08:25
machine that's been infected with malware
08:28
rather than try to get rid of the malware.
08:31
There are other types of data to back up.
08:33
For example, if you're managing a domain
08:35
controller in a Windows network, then you need
08:39
to backup not only the files on the server but
08:41
all your active directory information as well.
08:44
To do this, you can create a special type of backup
08:48
on the domain controller called a system state backup.
8. System State Backup on a Domain Controller
08:51
If you are backing up sensitive information,
08:54
such as your security logs, then you might
08:57
want to consider the location of the backup.
09:00
Instead of backing that data up to a device that can
09:03
be modified in some way, find a more secure option.
09:06
For example, it could be problematic if you were to back
09:09
up sensitive information to a network share or perhaps a
09:13
USB flash drive because of the potential of tampering.
09:16
Instead, you should back up confidential information to
09:20
a write-once type of media, such as a recordable DVD.
9. Backup Integrity Tests
09:24
A backup is worthless unless you can
09:28
successfully restore data from it.
09:30
You should run periodic tests and restore from
09:33
your backups in a lab environment, just to make
09:36
sure that everything works should a crisis occur.
10. Summary
09:39
That's it for this lesson.
09:41
In this lesson, we talked about backup and restore.
09:44
We first discussed the importance of backing up your data.
09:47
We then examined the three backup strategies:
09:50
full, incremental, and differential.
09:53
We then mentioned using a system image to backup data.
09:57
We talked about backing up the system
10:00
state on the domain controller.
10:02
We discussed backing up sensitive
10:04
information to write-once medium.
10:06
Then we emphasized the importance of verifying
10:08
backups to make sure that they actually work.