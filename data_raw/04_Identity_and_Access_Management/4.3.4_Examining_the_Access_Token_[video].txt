Click one of the buttons to take you to that part of the video.


Examining the Access Token 00:00-00:41

In this demonstration, we're going to spend some time working with access tokens. We're going to look at the access token that's granted to a Windows user when they log in to a Windows domain.

I'm currently logged in to this Windows 10 system as the dfellows user in the CorpNet.xyz domain. We can verify this using the ‘whoami' command at the command prompt. Press Enter, and we see that I'm logged in as dfellows in the CorpNet domain, which is nice to know, but it's not terribly useful. But if we do a ‘whoami' with the ‘/all' option, then we see more interesting information. We see the access token that was granted to the dfellows user when I initially logged in.

Security Identifier (SID) 00:41-01:46

One of the first things we see is the SID, which is a unique number associated with my user account. In addition, you see my domain and username. We also see the SID of all the different groups that my user account is a member of. First, we see all of the default local groups it's part of. Down here, we also see the domain groups that my account is a member of, such as the Night Shift group, the Day Shift group, and the Enterprise Admins group.

The third section of the access token is Privileges Information. These privileges are also known as user rights. It tells me what my user account can do on the system. For example, there's the Change the system time user right, which my account doesn't have. For me, it's disabled along with a lot of other rights.

Let's go back up here and look at the SID. The key thing to remember about this number, the security identifier, is the fact that when I try to access a file or folder in the NTFS file system, the SID in my access token is compared to the SIDs in the Access Control List of the file or folder. If they match up, I get some form of access, or I may be denied access depending on how the ACL is configured.

Verify Group Membership 01:46-02:38

At this point, let's go ahead and switch over to my domain controller. On my SRV2019 domain controller, which is the domain controller for my CorpNet.xzy domain, I want to verify the group membership of my dfellows user account that we just looked at.

To do this, I'll come over to Tools and go to Active Directory Users and Computers. In the CorpNet domain, I need to locate my dfellows user account. I happen to know that dfellows is in the CorpNetUsers organizational unit. I'll Select it. Right-click on the account. Let's go to Properties and go to the Member Of tab, and I can see a list of all of the groups that my user is a member of.

I'm a member of Day Shift, Domain Admins, Domain Users, Enterprise Admins, and Night Shift. However, there are many other groups in my domain that I could be a member of. For example, in marketing, I have a group called Marketing. But I'm not currently a member of that group.

Implicit Deny 02:38-04:47

To see how the access token determines the level of access I have to files and folders in the NTFS file system, let's come down to File Explorer and go to my C: drive. We have a folder here named SharedFiles, and this folder is currently shared. Let's see who it's shared with. Click on Properties. Go to Sharing. Let's go to Advanced Sharing and then to Permissions.

Here, you can see that two groups have been granted access to this folder. These are the groups that are in the ACL of the SharedFiles folder. Anyone who's a member of either of these groups receives the permissions defined below.

We want to see how the access token works, so let's remove these groups--remember, my dfellows user account is a member of both of these. Let's go ahead and remove these groups and add another group that my user account isn't a member of, for example, the Marketing group we just looked at.

Let's grant Marketing full control. Let's remove Everyone, click Remove, and then click Administrators. Click Remove once again. Hit Apply, OK, OK again, and Close. The SharedFiles folder is now shared with any user who's a member of Marketing. dfellows is not a member of Marketing. Let's go ahead and see what happens now if I try to access this folder from my client system.

Back on my client system, where I'm still logged in as the dfellows user, I come down to Search, and let's enter ‘\\srv2019'. Press Enter, and it should open File Explorer with a list of all the shares currently available on the file server. There's our SharedFiles share.

Within this share, there are a couple of documents. Let's see if I can access them. If I double-click, there's a problem. I can't access the folder because of the Access Control list. My access token isn't there. I'm not on the list, so I can't access the share. This is an example of Implicit Deny. Remember, with Implicit Deny, if there's no match, then, automatically, access is denied. That's the case here. Only a user who's a member of the Marketing group can access this share.

Let's go ahead and fix this. I'll close this window.

Add a User to a Group 04:47-05:26

Let's go back over to the domain controller and add the dfellows user to the Marketing group. Here's my Marketing group that I want to add my user account to. I can do this in two ways. I can right-click here, go to Properties, and then go to the Members tab and add my user account there. Or I could come to the user account itself, right-click, and say Add to Group. Either way, it does the same thing.

Let's add it to the Marketing group. Group operation was successful. Click OK. Let's just verify that. Go to Properties. Go to the Member Of tab. Sure enough, I'm a member of Marketing now. OK.

Example of Access Token is Assigned at Login 05:26-06:23

Now let's go back over to my Windows 10 workstation and try accessing the share again. Let's come back down to Search, and let's access our list of shares available. There's the SharedFiles share. If I double-click on it, I still can't access it. Why not? I was added to the Marketing group. The Marketing group is in the Access Control list of the share. In fact, it has full control over the share. Why can't I access it?

The key thing to remember here is that the access token over here, for my dfellows user account, was created when I logged in. I made the change to my group membership for my user account after I had already logged in. In fact, if we come down to the bottom and we type the ‘whoami /all' command again, you can see that I'm still a member of just Research, Support, and Enterprise Admins as far as my access token is concerned. It doesn't list the Marketing group. That's because we've made the change in group membership since I logged in.

Log in to Re-Issue the Token 06:23-06:56

In order to fix this and add the Marketing group to the access token, I have to log off as dfellows on the system and then log back in as that user account again, which will re-issue my access token. This should make this account a member of the Marketing group and give us access to the shared folder.

Let's go ahead and do that. All right. I've logged off, and now I've logged back in. Let's check my access token to see if the Marketing group has been added. Do ‘whoami /all' one more time. Notice, when I scroll down here and look, I can see that the Marketing group has been added.

Verify Access 06:56-07:26

Let's test it. We'll come down here, open up my run box again, and browse the various shares available on the server. There's my ShardFiles share. If I double-click on it this time, I have access to the files. Remember, we gave the Marketing group full control, so I'm actually allowed to go in and have access to the file. I can add, modify, delete, or do anything that someone with full access can do. I'm able to do that because now, the Marketing group is in the access token of the dfellows user account.

Summary 07:26-07:47

That's it for this demonstration. In this demo, we looked at the access token that's assigned to a Windows user when they log in to the Windows domain. We've looked at the group membership contained within the access token. Then we did a little experiment to show how the access token is assigned when the user logs in, and any changes made to the user account's group membership aren't reflected until the next login.