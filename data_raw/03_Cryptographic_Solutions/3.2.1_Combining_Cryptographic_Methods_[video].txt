Click one of the buttons to take you to that part of the video.


Combining Cryptographic Methods 00:00-00:20

Using cryptography lets you secure your data against unauthorized users, but in some cases, it's beneficial if you combine different cryptographic methods to increase data security.

In this video, we'll look at hybrid models, digital signatures, and combining encryption with steganography.

Hybrid Models 00:20-00:49

Hybrid cryptographic models combine the use of symmetric and asymmetric keys to encrypt data.

Asymmetric encryption methods provide an easier way to exchange keys safely, but are not very efficient because they rely on some complicated mathematical computations. Symmetric encryptions are efficient, but because it can be a pain to get the keys out, they're not very convenient. A hybrid cryptosystem combines the convenience of asymmetric methods and the efficiency of symmetric methods.

Encrypting File System (EFS) 00:49-01:40

One example of this combination is the Microsoft Encrypting File System, or EFS. EFS was introduced in version 3.0 of NTFS. It has been included in every version of Windows except Home edition since Windows 2000.

EFS works by encrypting a file with a special symmetric key called the File Encryption Key, or FEK. The user's public asymmetric key is then used to encrypt the FEK.

During decryption, the user's private key is used to decrypt the FEK, which is then used to decrypt the file.

By combining the security of the symmetric keys and the convenience of the asymmetric keys, Microsoft has made it easy for users to encrypt their data. The main drawback of EFS is that the user's private key is essentially their password. This means that the encryption is only as strong as the user's password.

Digital Signatures 01:40-02:54

One very common practice that combines cryptographic methods

is the digital signature. A digital signature combines the hash of a file and a user's private key to electronically sign a document, providing an authentic and non-repudiation file.

For example, if we had a large file that needed to be digitally signed, we could use asymmetric encryption to simply encrypt it. However, that process is slow and could generate a very large file size. Instead, we can create a hash of the file.

The three main hashing algorithms used today are SHA-1, which generates a 128-bit key, MD5, which generates a 160-bit key, and SHA-2, which is also commonly referred to as SHA-256. It creates a 256-bit key.

Whichever algorithm is used, the hash generates a fingerprint of the file. Now, instead of encrypting the file itself, we can encrypt the hash that was generated using our private key. We combine that encrypted hash with the file to digitally sign it.

Now, when we send the message to the recipient, she'll first generate a hash of the file. She'll then use our public key to decrypt the hash that we generated and compare it with theirs. If the hashes match, then they can be assured that the message is legitimate and hasn't been altered.

Digital Envelopes 02:54-03:27

We can take this one step further and encrypt the file itself along with the digital signature using a digital envelope.

To do this, we would use the recipient's public key to encrypt the data. The ciphertext, hash, and digital signature are all combined and sent together. The recipient uses our public key to decrypt the hash to authenticate the message. Then they use their private key to decrypt the ciphertext.

By combining the digital signature with asymmetric encryption, we get authentication, confidentiality, integrity, and non-repudiation.

Encryption with Steganography 03:27-04:09

An interesting combination of cryptographic methods is using asymmetric encryption with steganography. There's been a fairly large amount of recent research on ways to combine these methods effectively.

Let's look at how this would work.

We start by encrypting our plaintext with our private key, generating our ciphertext. Next, we hide the ciphertext inside of a media file, such as an image.

When our recipient receives the file, she'll first extract the ciphertext and then use the public key to decrypt the ciphertext.

By combining these two methods, we increase the security of a message. Anyone intercepting the message would need to know that there's an encrypted file inside the image file before attempting to crack the encryption.

Summary 04:09-04:40

And that's it for this lesson. In this video, we discussed the different ways of combining cryptographic methods. We looked at how hybrid cryptographic models combine the efficiency of symmetric methods and the convenience of asymmetric methods and how EFS takes advantage of this combination. Then we discussed digital signatures and how they can be used to provide message authentication and non-repudiation. Finally, we went over combining encryption with steganography and how this combination can be used to hide ciphertext inside of a media file.