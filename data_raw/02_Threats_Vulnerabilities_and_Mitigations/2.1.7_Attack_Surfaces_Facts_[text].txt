Security Pro 8.0

2.1.7 Attack Surfaces Facts

The attack surface is all the points at which a malicious threat actor could try to exploit a vulnerability. Any location or method where a threat actor can interact with a network port, app, computer, or user is part of a potential attack surface. Minimizing the attack surface means restricting access so that only a few known endpoints, protocols/ports, and services/methods are permitted. Each of these must be assessed for vulnerabilities and monitored for intrusions.

This lesson covers the following topics:

Attack surface and threat vectors
Vulnerable software vectors
Network vectors
Lure-based vectors
Message-based vectors
Supply chain attack surface
Attack Surface and Threat Vectors

An organization has an overall attack surface. You can also assess attack surfaces at more limited scopes, such as that of a single server or computer, a web application, or employee identities and accounts. To evaluate the attack surface, you need to consider the attributes of threat actors that pose the most risk to your organization. For example, the attack surface for an external actor should be far smaller than that for an insider threat.

From a threat actor's perspective, each part of the attack surface represents a potential vector for attempting an intrusion. A threat vector is the path that a threat actor uses to execute a data exfiltration, service disruption, or disinformation attack. Sophisticated threat actors will make use of multiple vectors. They are likely to plan a multistage campaign rather than a single "smash and grab" type of raid. Highly capable threat actors will be able to develop novel vectors. This means the threat actor's knowledge of your organization's attack surface may be better than your own. Developing new threat vectors is one of the capabilities that distinguishes threat actor groups.

The terms "threat vector" and "attack vector" are often taken to mean the same thing. Some sources distinguish the use of threat vector to refer to the analysis of the potential attack surface and attack vector to analyze an exploit that has been successfully executed.

Assessing the attack surface.

Description
The first two servers and four endpoints have a line connected to another line, below and parallel to the Internet line, labeled Local Network.

All of these devices represent a possible attack surface and there are seven vulnerabilities identified by labels next to the devices.

The first server represents public-facing servers that get hacked. It has a document with a bug icon and the word HelloWorld, refering to the virus by the same name.

The second server has a wireless router next to it and arrows pointing away and toward it. The arrows have red Xs on them indicating that traffic is stopped. It represents public-facing servers suffering denial of service (DoS) attack.

The third server represents public-facing name servers that are hacked. It also has the document and bug icons with the label bad.foo, refering to the DNS virus.

The fourth server has an envelope and bug icon and a dotted line to the first endpoint computer. This represents messaging that allows transmission of malicious attachments to private computers.

The second internal computer has a USB thumb drive near it and a dotted line to the public premises. It represents internal servers that are hacked via malicious devices within the site.

The third endpoint device is a smartphone. This represents backdoors opened via employee shadow IT devices.

Finally, the last endpoint device represents malicious insiders misuse of permissions.
Vulnerable Software Vectors

Vulnerable software contains a flaw in its code or design that can be exploited to circumvent access control or to crash the process. Typically, vulnerabilities can only be exploited in specific circumstances and are often swiftly fixed—patched—by the vendor. However, because of the complexity of modern software and the speed with which new versions must be released to market, almost no software is free from vulnerabilities. Also, an organization might not have an effective patch management system. Consequently, vulnerable software is a commonly exploited threat vector.

A large number of operating systems and applications run on a company's appliances, servers, clients, and cloud networks directly increases the potential attack surface. This attack surface can be reduced by consolidating to fewer products and by ensuring the same version of a product is deployed across the organization.

The impact and consequences of a software vulnerability are varied. As two contrasting examples, consider vulnerabilities affecting Adobe's PDF document reader versus a vulnerability in the server software underpinning transport security. The former could give a threat actor a foothold on a corporate network via a workstation; the latter could compromise the cryptographic keys used to provide secure web services. Both are potentially high-impact for different reasons.
Unsupported Systems and Applications

Unsupported systems and applications are a particular reason that vulnerable software will be exposed as a threat vector. An unsupported system is one where its vendor no longer develops updates and patches. Unless the organization can patch the faulty code, these services and apps will be highly vulnerable to exploits.

One strategy for dealing with unsupported apps that cannot be replaced is to try to isolate them from other systems. The idea is to reduce opportunities for a threat actor to access the vulnerable app and run exploit code. Using isolation as a substitute for patch management is an example of a compensating control.
Client-Based vs. Agentless

Scanning software helps organizations automate the discovery and classification of software vulnerabilities. These tools can also be used by threat actors as part of reconnaissance against a target. This scanning software can be implemented as a client-based agent. The agent runs as a scanning process installed on each host and reports to a management server. Alternatively, the vulnerability management product might use agentless techniques to scan a host without requiring any sort of installation. Agentless scanning is most likely to be used in threat actor reconnaissance.
Network Vectors

Vulnerable software gives a threat actor the opportunity to execute malicious code on a system. To do this, the threat actor must be able to run exploit code on the system or over a network to trigger the vulnerability. An exploit technique for any given software vulnerability can be classed as either remote or local:

Remote means that the vulnerability can be exploited by sending code to the target over a network and does not depend on an authenticated session with the system to execute.
Local means that the exploit code must be executed from an authenticated session on the computer. The attack could still occur over a network, but the threat actor must use some valid credentials or hijack an existing session to execute it.
Consequently, to minimize risks from software vulnerabilities, administrators must reduce the attack surface by eliminating unsecure networks. An unsecure network is one that lacks the attributes of confidentiality, integrity, and availability:

Lack of Confidentiality — threat actors are able to snoop on network traffic and recover passwords or other sensitive information. These are also described as eavesdropping attacks.
Lack of Integrity — threat actors can attach unauthorized devices. These could be used to snoop on traffic or intercept and modify it, run spoofed services and apps, or run exploit code against other network hosts. These are often described as on-path attacks.
Lack of Availability — threat actors are able to perform service disruption attacks. These are also described as denial of service (DoS) attacks.
A secure network uses an access control framework and cryptographic solutions to identify, authenticate, authorize, and audit network users, hosts, and traffic.

Some specific threat vectors associated with unsecured networks are as follows:

Threat Vector
Description
Direct access	The threat actor uses physical access to the site to perpetrate an attack. Examples could include getting access to an unlocked workstation, using a boot disk to try to install malicious tools, or physically stealing a PC, laptop, or disk drive.
Wired network	A threat actor with access to the site attaches an unauthorized device to a physical network port, and the device is permitted to communicate with other hosts. This potentially allows the threat actor to launch eavesdropping, on-path, and DoS attacks.
Remote and wireless network	The attacker either obtains credentials for a remote access or wireless connection to the network or cracks the security protocols used for authentication. Alternatively, the attacker spoofs a trusted resource, such as an access point, and uses it to perform credential harvesting and then uses the stolen account details to access the network.
Cloud access	Many companies now run part or all of their network services via internet-accessible clouds. The attacker only needs to find one account, service, or host with weak credentials to gain access. The attacker is likely to target the accounts used to develop services in the cloud or manage cloud systems. They may also try to attack the cloud service provider (CSP) as a way of accessing the victim system.
Bluetooth network	The threat actor exploits a vulnerability or misconfiguration to transmit a malicious file to a user's device over the Bluetooth personal area wireless networking protocol.
Default credentials	The attacker gains control of a network device or app because it has been left configured with a default password. Default credentials are likely to be published in the product's setup documentation or are otherwise easy to discover.
Open service Port	The threat actor is able to establish an unauthenticated connection to a logical TCP or UDP network port. The server will run an application to process network traffic arriving over the port. The software might be vulnerable to exploit code or to service disruption.
Servers have to open necessary ports to make authorized network applications and services work. However, as part of reducing the attack surface, servers should not be configured to allow traffic on any unnecessary ports. Networks can use secure design principles, access control, firewalls, and intrusion detection to reduce the attack surface.
Lure-Based Vectors

A  lure is something superficially attractive or interesting that causes its target to want it, even though it may be concealing something dangerous, like a hook. In cybersecurity terms, when the target opens the file bait, it delivers a malicious payload hook that will typically give the threat actor control over the system or perform service disruption.

If the threat actor cannot gain sufficient access to run a remote or local exploit directly, a lure might trick a user into facilitating the attack. The following media are commonly used as lures:

Removable Device —the attacker conceals malware on a USB thumb drive or memory card and tries to trick employees into connecting the media to a PC, laptop, or smartphone. For some exploits, simply connecting the media may be sufficient to run the malware. More typically, the attacker may need the employee to open a file in a vulnerable application or run a setup program.
In a drop attack, the threat actor simply leaves infected USB sticks on office grounds, reception areas, or parking lots, expecting at least one employee to pick one up and plug it into a computer.

Executable File —the threat actor conceals exploit code in a program file. One example is Trojan Horse malware. A Trojan is a program that seems to be something free and useful or fun, but it contains a process that will create backdoor access to the computer for the threat actor.
Document Files —the threat actor conceals malicious code by embedding it in word processing and PDF format files. This can take advantage of scripting features or simply exploit a vulnerability in the document viewer or editor software.
Image Files —the threat actor conceals exploit code within an image file that targets a vulnerability in browser or document editing software.
These vectors expose a large and diverse attack surface, from the USB and flash card readers installed on most computers to the software used to browse websites and view/edit documents. Reducing this attack surface requires effective endpoint security management, using controls such as vulnerability management, antivirus, program execution control, and intrusion detection.
Message-Based Vectors

When using a file-based lure, the threat actor needs a mechanism to deliver the file and a message that will trick a user into opening the file on their computer. Consequently, any features that allow direct messaging to network users must be considered as part of the potential attack surface:

Threat Vector
Description
Email	The attacker sends a malicious file attachment via email or any other communications system that allows attachments. The attacker needs to use social engineering techniques to persuade or trick the user into opening the attachment.
Short Message Service (SMS)	The file or a link to the file is sent to a mobile device using the text messaging handler built into smartphone firmware and a protocol called Signaling System 7 (SS7). SMS and the SS7 protocol are associated with numerous vulnerabilities. Additionally, an organization is unlikely to have any monitoring capability for SMS as it is operated by the handset or subscriber identity module (SIM) card provider.
Instant messaging (IM)	There are many replacements for SMS that run on Windows, Android, or iOS devices. These can support voice and video messaging, plus file attachments. Most of these services are secured using encryption and offer considerably more security than SMS, but they can still contain software vulnerabilities. The use of encryption can make it difficult for an organization to scan messages and attachments for threats.
Web and social media	Malware may be concealed in files attached to posts or presented as downloads. An attacker may compromise a site so that it automatically infects vulnerable browser software (a drive-by download). Social media may also be used more subtly, such as a disinformation campaign that persuades users to install a "must-have" app that is actually a Trojan.
The most powerful exploits are zero-click. Most file-based exploit code has to be deliberately opened by the user. Zero-click means that simply receiving an attachment or viewing an image on a webpage triggers the exploit.

Message-based vectors can also be exploited by a threat actor to persuade a user to reveal a password or weaken the security configuration using some type of pretext. This type of attack might be perpetrated simply by placing a voice call to the user.
Supply Chain Attack Surface

A  supply chain is an end-to-end process of designing, manufacturing, and distributing goods and services to customers. Rather than attack the target directly, a threat actor may seek ways to infiltrate it via companies in its supply chain. One high-profile example of this is the Target data breach, which was made via credentials held by the company's building systems vendor.

The process of ensuring reliable sources of equipment and software is called procurement management. In procurement management, it is helpful to distinguish several types of relationships:

Supplier —obtains products directly from a manufacturer to sell in bulk to other businesses. This type of trade is referred to as business-to-business (B2B).
Vendor —obtains products from suppliers to sell to retail businesses (B2B) or directly to customers (B2C). A vendor might add some level of customization and direct support.
Business Partner —implies a closer relationship where two companies share closely aligned goals and marketing opportunities.
For example, Microsoft is a major software manufacturer and vendor, but it is not feasible to establish direct relationships with all its potential customers. To expand its markets, it develops partner relationships with original equipment manufacturers (OEMs) and solutions partners. Microsoft operates a program of certification and training for its partners, which improves product support and security awareness.

Each supplier and vendor has its own supply chain. For example, a motherboard manufacturer and supplier will use companies to fabricate individual chip components. The supply chain extends to distribution, so delivery companies and couriers are part of it.

This supply chain breadth and complexity expose organizations to a huge attack surface. For example, for a computer motherboard to be trustworthy, the supply chain of chip manufacturer, firmware code developer, OEM reseller, courier delivery company, and administrative staff responsible for provisioning the computing device to the end user must all be trustworthy. Anyone with the time and resources to modify the computer's firmware could create backdoor access. The same is true for any computer or network hardware, software, or service.

Establishing a trusted supply chain for computer equipment and services essentially means denying malicious actors the time or resources to modify the assets supplied. For most businesses, the use of reputable vendors will represent the best practical effort at securing the supply chain. Government, military/security services, and large enterprises will exercise greater scrutiny. Particular care should be taken if using secondhand machines.

The IT industry also depends on trade in services as well as physical assets. A managed services provider (MSP) provisions and supports IT resources such as networks, security, or web infrastructure. MSPs are useful when an organization finds it cheaper or more reliable to outsource all or part of IT provision rather than try to manage it directly. From a security point of view, this type of outsourcing is complex, as it can be difficult to monitor the MSP. The MSP's employees are all potential sources of insider threat.
