Transcript




close interactive script
Click one of the buttons to take you to that part of the video.
1. Use Hyper-V
00:04
Hyper-V is virtualization software created
00:07
by Microsoft in 2016 that lets you run other
00:10
software like it's on a physical computer.
00:13
We call this a virtual machine, or VM.
00:15
With a VM, you're able to have many different
00:19
operating systems installed on one physical system.<br>
2. Enable Hyper-V
00:24
Today, we're going to look at how
00:26
to enable Hyper-V on a desktop.
00:29
In the Start menu, look for the features keyword, and
00:32
it'll direct you to the section to add or remove features.
00:36
Alternately, you could go to Control Panel &gt;
00:39
Programs &gt; Turn Windows features on or off.
00:46
This is the area that controls extra features that come
00:49
with Windows, ones that might not be enabled by default.
00:52
Also, before we go on, it's important to
00:55
know that you won't be able to enable Hyper-V
00:57
unless you have the Pro version of Windows.<br>
01:01
Now, after clicking OK, it'll process your
01:05
request when it's done and require a reboot.
3. Create a Virtual Switch
01:08
We're going to do that now, so I'll pause the recording.<br>
01:11
Okay, our reboot is complete, and
01:13
we're ready to launch Hyper-V.
01:15
To do so, we go to Search and type hyper-v.
01:19
This brings us the Hyper-V Manager.
01:22
Eventually, when you have VMs,
01:24
they'll be populated over here.
01:27
This manager allows you to control all the
01:29
local Hyper-V instances along with remote ones.<br>
01:33
We're only worried about our local one, so we're going
01:36
to right-click here and select Virtual Switch Manager.
01:40
Here's where we manager the virtual
01:42
switches that'll be used for the VMs.
01:45
It's a good idea to configure these first so
01:48
you know how your network is going to be set up.
01:51
And there are three options to select from here.
01:53
External binds to the physical network adapter.
01:57
This would give a VM access to the internet and
02:01
the physical network that your PC is connected to.
02:03
The Internal switch is similar except that it
02:06
doesn't allow direct access to the internet.
02:09
This would be a good option if you had
02:11
several VMs that needed to talk to each
02:13
other without access to a physical network.
02:17
Private is completely isolated.
02:19
Some use cases for this would be restoring a VM for testing
02:22
purposes that you don't want to communicate with anything.<br>
02:26
We're going to do something simple and select Internal.
02:29
Let's give it a name of Internal as well.
02:32
We'd have the ability to select the Ethernet controller
02:35
or Wi-Fi adapter if we'd used the external network switch.
02:40
If there were other network adapters
02:42
available, they'd be listed here, too.
02:46
And if you were running VLANs, you could select
02:49
this and tag the network with a certain VLAN ID.
02:54
Click Apply when you're done creating your switch.<br>
02:57
One thing to notice here is the Default Switch.
03:02
This switch does use the Internal network setting,
03:05
but the part at the bottom makes it different from
03:08
the internal network we just created.
03:10
This has NAT, or Network Address Translation, set up to
03:14
give your VMs access to the computer's physical network.
03:18
If the NAT weren't on, you wouldn't
03:21
have access to the physical network.
4. Create a VM
03:23
This default is set this way to make it easy
03:26
for users to start right out of the box.
03:28
Anyway, click OK.<br>
03:30
Now we're ready to create our first VM.
03:32
Right-click on the host and select Quick Create.
03:37
In here, we select the ISO of our choosing from some default
03:42
options, or we could just upload our own from a local source.
03:46
I happen to have one in my Downloads folder, so
03:49
I'm going to go search and grab my Windows ISO.
03:52
After selecting Open, we're able to go
03:55
through and create our virtual machine.<br>
03:59
Before booting, we need to check out some settings first.
04:03
They make it handy by giving us the
04:05
ability to launch the settings from here.
04:08
In here are all the settings
04:09
related to the VM we just created.
04:12
We're able to tweak quite a few aspects,
04:14
like Memory, Processor, Hard Drive, and more.
04:18
Let's adjust some of these.
04:20
Our memory is a little low, for default
04:22
specs of Windows, we can up it to 4096.
04:27
It does have the ability to dynamically change as well.
04:30
Under Processor, it's set to 8.
04:32
Let's adjust it to 2.
04:35
Under Network Adapter, we need to configure
04:40
this VM to use the network we created.
04:42
For our case, we need to use the isolated network.
04:45
However, it's possible to create a firewall VM with two
04:49
network adapters, one being connected to the physical network
04:53
and the second one to the internal network we just created.
04:56
Essentially, that'd give you total control of
04:59
what comes in and out of your Hyper-V host VM.
05:03
Lastly, let's give this a name.
05:05
This could be a convention or something of your choosing.
05:09
Apply and click OK.<br>
05:11
Connect allows us to start the process to power on the VM.
05:16
This is essentially the VM's console, just like
05:19
you'd see from a computer booting up from a monitor.
5. Summary
05:22
Click Start.
05:23
And just like that, we've started
05:25
the process to install Windows.<br>
05:28
And that's it for this demo.
05:30
In this demo, we went over how to install Hyper-V.
05:33
We also configured a new virtual switch and created a VM.<br>