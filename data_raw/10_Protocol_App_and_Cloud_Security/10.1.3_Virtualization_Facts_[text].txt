Security Pro 8.0

10.1.3 Virtualization Facts

This lesson covers the following topics:

Virtualization components
Virtualization advantages and disadvantages
Virtualization security
Load balancing
Virtualization Components

Virtualization refers to installing and running multiple operating systems concurrently on a single physical machine. Virtualization typically includes the following components:

Component
Description
Physical machine	A physical machine, also known as the host operating system, has the hardware, such as the hard disk drive(s), optical drive, RAM, and motherboard.
Virtual machine	A virtual machine, also known as the guest operating system, is a software implementation of a computer. The virtual machine executes programs in the same way a physical machine executes programs. The virtual machine appears to be a self-contained and autonomous system.
Virtual hard disk (VHD)	A virtual hard disk (VHD) is a file created within the host operating system and simulates a hard disk for the virtual machine.
Hypervisor	
A hypervisor is a thin layer of software that resides between the guest operating system and the hardware. A hypervisor allows virtual machines to interact with the hardware without going through the host operating system. There are two types of hypervisors.

A Type I hypervisor is often called a native hypervisor or bare-metal hypervisor. A hypervisor in a dedicated appliance is called an embedded hypervisor. A Type I hypervisor is like a thin operating system that directly interfaces with the computer hardware. Examples of Type I hypervisors are:
VMware ESX and ESXi
Microsoft Hyper-V
Linux KVM
Citrix Hypervisor
Xen
Oracle VM
A Type 2 hypervisor is known as a hosted hypervisor. It runs as an application on a conventional operating system. While it may be used in a production environment, a type 2 hypervisor is most often used as a development sandbox. Examples of Type II hypervisors are:
VMware Workstation and VMware Player
Oracle Virtual Box
Microsoft Hyper-V built into Windows 8.1 and 10
Parallels Desktop for Mac
Containerization	
Containerization is an alternative to using a hypervisor, which enforces resource separation at the operating system level. The OS defines isolated "cells" for each user instance to run in. Each cell or container is allocated CPU and memory resources, but the processes all run through the native OS kernel.

These containers may run slightly different OS distributions but cannot run different types of guest OSes (you could not run Windows or Ubuntu in a Red Hat Linux container, for instance). Alternatively, the containers might run separate application processes, in which case the variables and libraries required by the application process are added to the container.

One of the best-known container virtualization products is Docker (docker.com).

Containerization underpins many cloud services. In particular, it supports microservices and serverless architecture. Containerization is also being widely used to implement corporate workspaces on mobile devices.
Virtualization Advantages and Disadvantages

The advantages of virtualization are described in the following table.

Advantage
Description
Flexibility	
Virtual machines can be given network access. Other network devices will consider them to be physical machines. Be aware that virtual machines:

Should have the latest service packs and patches, just like physical machines.
Should be hardened, just like physical machines.
Can be connected to the production network by creating a bridged (external) virtual switch.
Because they are self-contained, virtual machines can be easily moved between hypervisor hosts as needed.
Security	To better protect other systems, virtual machines can be used to create honeypots and honeynets to attract attackers so you can analyze attacks on the system.
Testing	
Virtual machines can be configured in a lab environment that mirrors a production network. This lab environment can be used to:

Test applications before installing them on production systems.
Test updates and patches before rolling them out into the production environment.
Test security controls to verify that they are working as designed.
Server consolidation	
Server consolidation allows you to move multiple physical servers onto a few physical servers with many virtual machines. Physical-to-virtual migration (P2V migration) is the process of moving an older operating system off aging hardware and into a virtual machine. Consolidating servers:

Requires fewer physical computers.
Reduces power consumption.
Increases physical server utilization of resources.
Increases administrative efficiency.
Reduces the number of incompatibility issues.
Isolation	
A virtual machine can be isolated from the physical network to allow testing to be performed without impacting the production environment. This is called sandboxing.

Sandboxed virtual machines offer an environment in which malware can be executed with minimal risk to equipment and software.
Sandboxing virtual machines protects them from many kinds of security threats.
To allow isolated virtual machines to communicate with each other, create a new virtual switch configured for host-only (internal) networking. Connect the virtual network interfaces in the virtual machines to the virtual switch.
Application virtualization	
Applications can be virtualized.

A virtual application appears to be local but is really running on a different system.
Virtualized browsers can protect the underlying physical operating system from malware installation. Any malware installed from the virtual browser affects only the browser, not the rest of the system.
Note:
Malware can also use virtualization techniques that make it difficult to detect.
Disadvantages of virtualization include:

Disadvantage
Description
Attacks	An attack on the host machine could compromise all guest machines operating on that host.
Bottleneck	A bottleneck or failure of any hardware component that is shared between multiple guests, such as a failure in a disk subsystem, could affect multiple virtual machines.
Complexity	While administration is centralized, virtualization is a newer technology and requires new skills. Managing virtual servers can add complexity.
Server sprawl	Your configuration is susceptible to server sprawl, a condition that delays patch and security update management due to the number of virtual machines that must be managed.
VM escape	
A VM escape is when an attacker with access to a virtual machine breaks out of this isolated environment and gains access to the host system or other VMs running on the same host. Such a vulnerability could allow an attacker to gain control of all virtual machines running on a single physical server, leading to a potentially devastating security breach.

A famous example is the "Cloudburst" vulnerability in VMware's virtual machine display function. The Cloudburst vulnerability, officially designated as CVE-2009-1244, was a critical security flaw discovered in 2009 in VMware's ESX Server, a popular enterprise-level virtualization platform. A vulnerability in the virtual machine display function allowed a guest operating system to execute code on the host operating system.
Resource reuse	
Virtual machines are frequently created, used, and then deleted in a virtualized environment. If the resources, such as disk space or memory, are not properly sanitized between each use, sensitive data could be leaked between virtual machines.

For instance, a new virtual machine may be allocated disk space previously used by another VM. If this disk space is not properly wiped, the new VM could recover sensitive data from the previous VM.

Thorough data sanitization practices, ensuring data encryption throughout the lifecycle, and implementing robust encryption key management practices mitigate the risk of resource reuse in cloud infrastructure. Training on cloud provider security features and best practices and segregating resources based on security levels also mitigate risks.
Hypervisor	
Attackers exploit hypervisors to gain unauthorized access and compromise the virtual machines (VMs) running on them. Hypervisors typically provide specialized management interfaces so administrators can control and monitor their virtualized environments. These interfaces can become potential attack vectors if insecure.

For example, weak authentication, lack of encryption, or vulnerabilities in communication protocols can lead to unauthorized access to the virtualized environment. Like any software, hypervisors have vulnerabilities that must be regularly patched.
Virtualization Security

Security considerations for a virtual machine should be the same as for physical machines. For the host and all guest machines, be sure to:

Reduce the number of services running.
Apply patches and updates regularly.
Install antivirus and other security software.
Implement backups, operating system snapshots, and other solutions for data protection.
In addition, you should protect against virtual machine escape, an exploit in which malware allows the operating system within a virtual machine to break out and interact directly with the hypervisor. To minimize this vulnerability:

Apply patches and updates regularly.
Install only the resources-sharing features that are necessary.
Install only the software applications that are necessary.
Load Balancing

Load Balancing is a technique that disperses a workload between two or more computers or resources to achieve optimal resource utilization, throughput, or response time. The primary goal of load balancing is to improve performance and create high availability by configuring multiple devices to respond as one. Load balancing can also provide fault tolerance.

If the load balancing mechanism is able to detect when a specific node or member is unavailable, new requests will automatically be distributed to other available members. Load balancing methods with virtualization include the following:

Resource pooling creates shared logical pools of CPU and memory resources from many physical machines within the hypervisor to guarantee a level of resources for specific virtual machines.
Workload balancing distributes a workload (the total requests made by users and applications of a system) across multiple computers or a computer cluster to achieve optimal resource utilization, maximize throughput, minimize response time, and avoid overload.
