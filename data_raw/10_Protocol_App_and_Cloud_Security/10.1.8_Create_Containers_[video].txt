
Transcript




close interactive script
Click one of the buttons to take you to that part of the video.
1. Create Containers
00:04
Were going to give you an overview
00:05
on how you can create a container.
00:07
If your not familiar with a container it is similar to
00:09
a virtual machine however instead of having the overhead
00:13
of several operating systems for each software you can
00:15
just run the software from an image a container engine.
00:19
Today were going to be using a
00:20
container engine called docker desktop.
00:22
This is widely used by developers and
00:24
for the use of learning containers.
00:26
We already have this installed so lets go
00:28
ahead and launch it from the start menu.<br>
2. Downloading an Image
00:31
Typically to start you will have an image
00:33
in which you would build a container from.
00:35
If you were a developer you would of course make your own
00:37
image with the required software in it to run as a container.
00:42
If you don't have an image and want to
00:43
start from a basic one you could go up to
00:45
the search bar and type apache for example.
00:48
If you don't know what apache is it is a web server.
00:51
In order to grab an image we need to pull it.
00:54
Once we click pull it will download the
00:56
image and put it in our Image repository.
00:58
If there are any updates to an image you would
01:00
have to pull again to obtain your update.<br>
3. Create a Container
01:04
Now that we have our image downloaded we
01:06
can now create a container from the image.
01:08
By clicking on the run option from the image
01:10
it starts the process to create the container.
01:13
It does give some optional settings like
01:15
changing the ports or the volumes it may use.
01:18
Were going to assign it a random port so
01:19
we will just type zero here and click run.
01:23
To check our running containers we can
01:25
venture to the other menu called containers.
01:27
All running containers will be displayed here.
01:30
You can see we have one running which is our web server.
01:34
Locally on the container it is using port
01:36
80 however its redirecting it to port "" .
01:39
clicking the port reference will allow us
01:41
to launch the web page from our browser.
01:43
Since we actually see a page and its presenting
01:46
a text means our container is working properly.
01:49
Not all containers will have a web page like this one,
01:52
for example if its a database container you will have
01:55
connecting ports available but no website to test.<br>
4. Command Line Tools
01:58
Along with the gui you can still utilize command line
02:01
tools to manage your docker images and containers.
02:04
Were just going to check the status of our
02:06
running container by launching our terminal.
02:09
Once launched we can type the command "docker
02:11
ps" this will show us all our running containers.
02:15
Once we have the container we want we can run a command
02:18
like "docker stop c764f54a8429" to stop a container.
02:26
You can see from the docker ps the
02:28
container isnt running anymore.
02:30
Each container has a unique container ID.
02:33
This ID has to be used when using
02:35
these commands to manage a container.
02:37
Just like we can run "docker start c764f54a8429"
02:44
to start the container we just stopped.
02:46
Running a docker ps will show
02:48
the container is running again.<br>
5. Summary
02:50
That is it for this demo.
02:52
In this demo we showed you how to
02:53
create a container on docker desktop.
02:56
We also showed you docker containers
02:57
can be managed by command line tools.<br>